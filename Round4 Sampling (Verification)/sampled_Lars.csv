project,pull_number,pull_type,id,text,classification,indicator
spark,158,review,11264777,"Instead of doing this, just prevent users from creating a StorageLevel with offHeap = true and replication = 1. Add a check in the StorageLevel constructor and throw an exception if they make one. Otherwise nobody will understand why this code was added here.",code_debt,low_quality_code
ozone,1233,review,482676002,"need space before ""+""",code_debt,low_quality_code
kafka,5068,review,191512386,Do we actually want this to be `Long.MAX_VALUE`? Seems error prone since the normal thing to do with the TTL is add it to the current time and that will cause overflow. Should we have some sentinel value for infinite TTL?,code_debt,low_quality_code
apisix-dashboard,979,review,543388564,hard code is not a good way,code_debt,low_quality_code
spark,25626,review,320095359,"nit: we can use multiline string, e.g.",code_debt,low_quality_code
spark,1218,review,15828037,"@mridulm yes I'm aware of that. But before, SparkContext was using reflection to instantiate two different classes in the yarn package, and then connect them manually. I removed one of those (see that there's still reflection code to load `YarnClusterScheduler`) because it seemed unnecessary.",code_debt,dead_code
spark,28038,review,402528402,"Yes. Talking with @dbtsai he wanted to add a lock on the blocks inside of `doCleanupShuffle`, but given that the only price is duplicated messages to the executors I'm not sure its worth the overhead of keeping track of that many locks.",code_debt,low_quality_code
storm,1781,comment,262494323,"That should do it - the batching option has been removed from MapState, in favor of parallel processing with existing opaque and transactional logic to handle consistency. Cassandra batch statements are more trouble than they're worth.",design_debt,non-optimal_design
tinkerpop,712,review,140818483,"Even though `Bindings` is based on a `ThreadLocal<T>` instance, I think the implementation is not thread-safe.
For example: Multiple tasks executed serially on the same thread, modifying the same bindings dictionary.
Besides not being thread-safe, it doesn't support defining a binding on 1 thread and adding the step on another, sample:",requirement_debt,non-functional_requirements_not_fully_satisfied
kafka,764,review,50764320,"@apovzner Personally I think the timestamp should be accurate. Modifying the timestamp sounds very hacky and creates extra complexity. Please also notice that the timestamp index built by the followers will be purely depending on the timestamp in outer message of compressed messages. The followers will not even decompress the messages. If we play the trick here, the time index on follower will also be affected. 
If we want to make things right, then producer should be able to get the necessary topic configuration info from broker, either from TopicMetadataRequest or some other requests. So the producer can set the timestamp correctly to avoid server side recompression. But like you said this is a bigger change and it is unnecessary to block on that change.
I think the current solution is reasonably clean as of the moment.
Once the producer is able to get the topic configuration from broker, we can simply migrate to use that. Since everything is purely internal, the migration is very simple and transparent to users.",design_debt,non-optimal_design
nifi,4369,review,452304677,Typo: configureSasToken(),documentation_debt,low_quality_documentation
incubator-pinot,4397,review,307084550,please add some javadoc,documentation_debt,outdated_documentation
spark,9432,comment,154740151,"Oops my bad, also removed the unnecessary sbin/../ from the other tachyon paths",code_debt,complex_code
trafficserver,5380,summary,0,Fixes spelling in src,documentation_debt,low_quality_documentation
spark,24300,description,0,"This PR aims to clean up package name mismatches.
Pass the Jenkins.",code_debt,low_quality_code
spark,28841,review,463960973,"Could you add tests for multiple file cases? Probably, I think you might be able to use `(new File(""/tmp/file.csv"")).setLastModified(xxx)` to control timestamp.",test_debt,lack_of_tests
activemq-artemis,2241,comment,412575863,"IMO, the JMS pool from 5.x should not be migrated to Artemis.  It belongs in it's own project with it's own release cycle.  Also, it makes sense for it to *not* be in the ActiveMQ project to make clear that the pool is generic and isn't tied to any ActiveMQ broker.
The pool on messaginghub has JMS 2.0 support.",architecture_debt,violation_of_modularity

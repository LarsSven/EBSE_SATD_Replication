diff --git a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/processors/azure/AbstractAzureDataLakeStorageProcessor.java b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/processors/azure/AbstractAzureDataLakeStorageProcessor.java
index b9c09f1f0e5..810fe534362 100644
--- a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/processors/azure/AbstractAzureDataLakeStorageProcessor.java
+++ b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/processors/azure/AbstractAzureDataLakeStorageProcessor.java
@@ -48,7 +48,7 @@ public abstract class AbstractAzureDataLakeStorageProcessor extends AbstractProc
 
     public static final PropertyDescriptor CREDENTIALS_SERVICE = new PropertyDescriptor.Builder()
         .name("adls-credentials-service")
-        .displayName("Azure Credentials")
+        .displayName("ADLS Credentials")
         .description("Controller Service used to obtain Azure Credentials.")
         .identifiesControllerService(ADLSCredentialsService.class)
         .required(true)
diff --git a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/services/azure/storage/ADLSCredentialsControllerService.java b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/services/azure/storage/ADLSCredentialsControllerService.java
index 7d37635faff..ec86f9ce3f5 100644
--- a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/services/azure/storage/ADLSCredentialsControllerService.java
+++ b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/main/java/org/apache/nifi/services/azure/storage/ADLSCredentialsControllerService.java
@@ -16,7 +16,6 @@
  */
 package org.apache.nifi.services.azure.storage;
 
-import com.google.common.base.Function;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.nifi.annotation.documentation.CapabilityDescription;
 import org.apache.nifi.annotation.documentation.Tags;
@@ -38,6 +37,7 @@
 import java.util.Map;
 import java.util.StringJoiner;
 import java.util.function.BiConsumer;
+import java.util.function.Function;
 
 /**
  * Provides credentials details for ADLS
diff --git a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/processors/azure/storage/TestAbstractAzureDataLakeStorage.java b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/processors/azure/storage/TestAbstractAzureDataLakeStorage.java
index 191757c6c1b..d992d8337e6 100644
--- a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/processors/azure/storage/TestAbstractAzureDataLakeStorage.java
+++ b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/processors/azure/storage/TestAbstractAzureDataLakeStorage.java
@@ -22,9 +22,7 @@
 import static org.apache.nifi.processors.azure.AbstractAzureDataLakeStorageProcessor.FILESYSTEM;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
-import static org.mockito.Mockito.withSettings;
 
-import org.apache.nifi.controller.ControllerService;
 import org.apache.nifi.services.azure.storage.ADLSCredentialsService;
 import org.apache.nifi.util.TestRunner;
 import org.apache.nifi.util.TestRunners;
@@ -40,7 +38,7 @@ public void setUp() throws Exception {
         // test the property validation in the abstract class via the put processor
         runner = TestRunners.newTestRunner(PutAzureDataLakeStorage.class);
 
-        ControllerService credentialsService = mock(ControllerService.class, withSettings().extraInterfaces(ADLSCredentialsService.class));
+        ADLSCredentialsService credentialsService = mock(ADLSCredentialsService.class);
         when(credentialsService.getIdentifier()).thenReturn("credentials_service");
         runner.addControllerService("credentials_service", credentialsService);
         runner.enableControllerService(credentialsService);
diff --git a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/services/azure/storage/TestADLSCredentialsControllerService.java b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/services/azure/storage/TestADLSCredentialsControllerService.java
index 55fda3d2eb1..aa51c4c861e 100644
--- a/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/services/azure/storage/TestADLSCredentialsControllerService.java
+++ b/nifi-nar-bundles/nifi-azure-bundle/nifi-azure-processors/src/test/java/org/apache/nifi/services/azure/storage/TestADLSCredentialsControllerService.java
@@ -34,7 +34,7 @@
 
 public class TestADLSCredentialsControllerService {
 
-    public static final String CREDENTIALS_SERVICE_IDENTIIFIER = "credentials-service";
+    public static final String CREDENTIALS_SERVICE_IDENTIFIER = "credentials-service";
 
     private static final String ACCOUNT_NAME_VALUE = "AccountName";
     private static final String ACCOUNT_KEY_VALUE = "AccountKey";
@@ -48,7 +48,7 @@ public class TestADLSCredentialsControllerService {
     public void setUp() throws InitializationException {
         runner = TestRunners.newTestRunner(NoOpProcessor.class);
         credentialsService = new ADLSCredentialsControllerService();
-        runner.addControllerService(CREDENTIALS_SERVICE_IDENTIIFIER, credentialsService);
+        runner.addControllerService(CREDENTIALS_SERVICE_IDENTIFIER, credentialsService);
     }
 
     @Test
@@ -79,7 +79,7 @@ public void testNotValidBecauseBothAccountKeyAndSasTokenSpecified() {
     public void testNotValidBecauseBothAccountKeyAndUseManagedIdentitySpecified() {
         configureAccountName();
 
-        configureSasToken();
+        configureAccountKey();
         configureUseManagedIdentity();
 
         runner.assertNotValid(credentialsService);
@@ -89,7 +89,7 @@ public void testNotValidBecauseBothAccountKeyAndUseManagedIdentitySpecified() {
     public void testNotValidBecauseBothSasTokenAndUseManagedIdentitySpecified() {
         configureAccountName();
 
-        configureAccountKey();
+        configureSasToken();
         configureUseManagedIdentity();
 
         runner.assertNotValid(credentialsService);

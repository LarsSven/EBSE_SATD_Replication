diff --git a/api/src/main/java/org/apache/iceberg/RewriteFiles.java b/api/src/main/java/org/apache/iceberg/RewriteFiles.java
index 3c109de1fb1..f09008a15d8 100644
--- a/api/src/main/java/org/apache/iceberg/RewriteFiles.java
+++ b/api/src/main/java/org/apache/iceberg/RewriteFiles.java
@@ -52,7 +52,7 @@ default RewriteFiles rewriteFiles(Set<DataFile> filesToDelete, Set<DataFile> fil
   }
 
   /**
-   * Add a rewrite that replaces one set of files with another set that contains the same data (format v2).
+   * Add a rewrite that replaces one set of files with another set that contains the same data.
    *
    * @param dataFilesToDelete   data files that will be replaced (deleted).
    * @param deleteFilesToDelete delete files that will be replaced (deleted).
diff --git a/core/src/main/java/org/apache/iceberg/BaseRewriteFiles.java b/core/src/main/java/org/apache/iceberg/BaseRewriteFiles.java
index 08ba662a6df..1de7c8be61a 100644
--- a/core/src/main/java/org/apache/iceberg/BaseRewriteFiles.java
+++ b/core/src/main/java/org/apache/iceberg/BaseRewriteFiles.java
@@ -56,9 +56,9 @@ private void verifyInputAndOutputFiles(Set<DataFile> dataFilesToDelete, Set<Dele
     if (deleteFilesToDelete == null || deleteFilesToDelete.isEmpty()) {
       // When there is no delete files in the rewrite action, data files to add cannot be null or empty.
       Preconditions.checkArgument(dataFilesToAdd != null && dataFilesToAdd.size() > 0,
-          "Data files to add can not be null or empty because there's no delete file to rewrite");
+          "Data files to add can not be null or empty because there's no delete file to be rewritten");
       Preconditions.checkArgument(deleteFilesToAdd == null || deleteFilesToAdd.isEmpty(),
-          "Delete files to add must be null or empty because there's no delete file to rewrite");
+          "Delete files to add must be null or empty because there's no delete file to be rewritten");
     }
   }
 
diff --git a/core/src/test/java/org/apache/iceberg/TestRewriteFiles.java b/core/src/test/java/org/apache/iceberg/TestRewriteFiles.java
index a3014415ce1..4cda57b99a2 100644
--- a/core/src/test/java/org/apache/iceberg/TestRewriteFiles.java
+++ b/core/src/test/java/org/apache/iceberg/TestRewriteFiles.java
@@ -244,7 +244,7 @@ public void testRewriteDataAndDeleteFiles() {
 
     Assert.assertEquals("Should contain 3 manifest", 3, pending.allManifests().size());
     Assert.assertFalse("Should not contain manifest from initial write",
-        pending.allManifests().containsAll(initialManifests));
+        pending.allManifests().stream().anyMatch(initialManifests::contains));
 
     long pendingId = pending.snapshotId();
     validateManifestEntries(pending.allManifests().get(0),
@@ -432,8 +432,8 @@ public void testRecoverWhenRewriteBothDataAndDeleteFiles() {
 
     TableMetadata metadata = readMetadata();
     List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);
-    Assert.assertTrue("Should committed the manifests",
-        metadata.currentSnapshot().allManifests().containsAll(committedManifests));
+    Assert.assertEquals("Should committed the manifests",
+        metadata.currentSnapshot().allManifests(), committedManifests);
 
     // As commit success all the manifests added with rewrite should be available.
     Assert.assertEquals("Only 5 manifest should exist", 5, listManifestFiles().size());
@@ -488,8 +488,8 @@ public void testReplaceEqualityDeletesWithPositionDeletes() {
 
     metadata = readMetadata();
     List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);
-    Assert.assertTrue("Should committed the manifests",
-        metadata.currentSnapshot().allManifests().containsAll(committedManifests));
+    Assert.assertEquals("Should committed the manifests",
+        metadata.currentSnapshot().allManifests(), committedManifests);
 
     // As commit success all the manifests added with rewrite should be available.
     Assert.assertEquals("4 manifests should exist", 4, listManifestFiles().size());

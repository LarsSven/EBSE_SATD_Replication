diff --git a/parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java b/parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java
index 946254b5283..6ea9c523672 100644
--- a/parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java
+++ b/parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java
@@ -71,7 +71,8 @@ private static <T> T visitList(GroupType list, ParquetTypeVisitor<T> visitor) {
     Preconditions.checkArgument(repeatedElement.isRepetition(Type.Repetition.REPEATED),
         "Invalid list: inner group is not repeated");
 
-    Preconditions.checkArgument(repeatedElement.isPrimitive() || repeatedElement.asGroupType().getFieldCount() <= 1,
+    Preconditions.checkArgument(
+        repeatedElement.isPrimitive() || repeatedElement.asGroupType().getFieldCount() <= 1,
         "Invalid list: repeated group is not a single field or primitive: %s", list);
 
     visitor.beforeRepeatedElement(repeatedElement);
diff --git a/parquet/src/main/java/org/apache/iceberg/parquet/TypeWithSchemaVisitor.java b/parquet/src/main/java/org/apache/iceberg/parquet/TypeWithSchemaVisitor.java
index 3694d6e2ecb..e0379b27996 100644
--- a/parquet/src/main/java/org/apache/iceberg/parquet/TypeWithSchemaVisitor.java
+++ b/parquet/src/main/java/org/apache/iceberg/parquet/TypeWithSchemaVisitor.java
@@ -67,8 +67,8 @@ public static <T> T visit(org.apache.iceberg.types.Type iType, Type type, TypeWi
 
             Preconditions.checkArgument(repeatedElement.isRepetition(Type.Repetition.REPEATED),
                 "Invalid list: inner group is not repeated");
-            Preconditions.checkArgument(repeatedElement.isPrimitive() ||
-                    repeatedElement.asGroupType().getFieldCount() <= 1,
+            Preconditions.checkArgument(
+                repeatedElement.isPrimitive() || repeatedElement.asGroupType().getFieldCount() <= 1,
                 "Invalid list: repeated group is not a single field: %s", group);
 
             Types.ListType list = null;
diff --git a/spark/src/test/java/org/apache/iceberg/spark/data/TestMalformedParquetFromAvro.java b/spark/src/test/java/org/apache/iceberg/spark/data/TestMalformedParquetFromAvro.java
index 6618c9afa6d..cc995e38141 100644
--- a/spark/src/test/java/org/apache/iceberg/spark/data/TestMalformedParquetFromAvro.java
+++ b/spark/src/test/java/org/apache/iceberg/spark/data/TestMalformedParquetFromAvro.java
@@ -90,10 +90,10 @@ public void testWriteReadAvroBinary() throws IOException {
 
     List<InternalRow> rows;
     try (CloseableIterable<InternalRow> reader =
-             Parquet.read(Files.localInput(testFile))
-                 .project(icebergSchema)
-                 .createReaderFunc(type -> SparkParquetReaders.buildReader(icebergSchema, type))
-                 .build()) {
+        Parquet.read(Files.localInput(testFile))
+          .project(icebergSchema)
+          .createReaderFunc(type -> SparkParquetReaders.buildReader(icebergSchema, type))
+          .build()) {
       rows = Lists.newArrayList(reader);
     }
 

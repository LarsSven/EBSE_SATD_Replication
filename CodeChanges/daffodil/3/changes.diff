diff --git a/DISCLAIMER b/DISCLAIMER
new file mode 100644
index 0000000000..d2696a91ec
--- /dev/null
+++ b/DISCLAIMER
@@ -0,0 +1,7 @@
+Apache Daffodil is an effort undergoing incubation at The Apache Software
+Foundation (ASF), sponsored by the Apache Incubator PMC. Incubation is required
+of all newly accepted projects until a further review indicates that the
+infrastructure, communications, and decision making process have stabilized in
+a manner consistent with other successful ASF projects. While incubation status
+is not necessarily a reflection of the completeness or stability of the code,
+it does indicate that the project has yet to be fully endorsed by the ASF.
diff --git a/README.md b/README.md
index 2f467d8dd9..ef38b60097 100644
--- a/README.md
+++ b/README.md
@@ -1,10 +1,10 @@
-# Daffodil
+# Apache Daffodil (incubating)
 
 ## Introduction
 
-Daffodil is the open source implementation of the [Data Format Description Language (DFDL)](http://www.ogf.org/dfdl), a specification created by the [Open Grid Forum](http://www.ogf.org). DFDL is capable of describing many data formats, including textual and binary, commercial record-oriented, scientific and numeric, modern and legacy, and many industry standards. It leverages XML technology and concepts, using a subset of W3C XML schema type system and annotations to describe such data. Daffodil uses this description to parse data into an infoset represented as XML or JSON, easily capable of ingestion, validation, and transformation.
+Apache Daffodil (incubating) is the open source implementation of the [Data Format Description Language (DFDL)](http://www.ogf.org/dfdl), a specification created by the [Open Grid Forum](http://www.ogf.org). DFDL is capable of describing many data formats, including textual and binary, commercial record-oriented, scientific and numeric, modern and legacy, and many industry standards. It leverages XML technology and concepts, using a subset of W3C XML schema type system and annotations to describe such data. Daffodil uses this description to parse data into an infoset represented as XML or JSON, easily capable of ingestion, validation, and transformation.
 
-For more information about Daffodil, see the [Daffodil Wiki](https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Daffodil%3A+Open+Source+DFDL).
+For more information about Daffodil, see https://daffodil.apache.org/.
 
 ## Build Requirements
 
@@ -28,17 +28,17 @@ $ sbt test
 $ sbt cli
 ```
 
-To build the Daffodil CLI:
+To build the Daffodil command line interface:
 
 ```bash 
 $ sbt stage
 ```
 
-The above will create Linux and Windows shell scripts in `daffodil-cli/target/universal/stage/bin/`. See the [Daffodil CLI](https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Command+Line+Interface) for details on its usage.
+The above will create Linux and Windows shell scripts in `daffodil-cli/target/universal/stage/bin/`. See the [Command Line Interface](https://cwiki.apache.org/confluence/display/DAFFODIL/Command+Line+Interface) documentation for details on its usage.
 
 ## Getting Help
 
-For questions, we can be reached on the [Daffodil users mailing list](http://oss.tresys.com/mailman/listinfo/daffodil-users) or in the #Daffodil room on [NCSA HipChat](http://hipchat.ncsa.illinois.edu/gvZdmJHmq). Bugs can be reported via the [Daffodil JIRA](https://opensource.ncsa.illinois.edu/jira/projects/DFDL/), or via email at [daffodil-fouo-support@tresys.com](mailto:daffodil-fouo-support@tresys.com) for company confidential, FOUO, or security relevant issues.
+For questions, we can be reached at the dev@daffodil.apache.org or user@daffodil.apache.org mailing lists or in #Daffodil on [ASF HipChat](https://www.hipchat.com/gJt9EQs5l). Bugs can be reported via the [Daffodil JIRA](https://issues.apache.org/jira/projects/DAFFODIL).
 
 ## License
 
diff --git a/build.sbt b/build.sbt
index 36819feb5c..06b3ebebd1 100644
--- a/build.sbt
+++ b/build.sbt
@@ -4,6 +4,8 @@ name := "daffodil"
 
 organization in ThisBuild := "edu.illinois.ncsa"
 
+version in ThisBuild := "2.1.0-SNAPSHOT"
+
 scalaVersion in ThisBuild := "2.11.8"
 
 // incOptions := incOptions.value.withNameHashing(true) // 2.11 experimental incremental compilation improvements (perhaps not working right?)
@@ -21,8 +23,6 @@ testOptions in ThisBuild += Tests.Argument(TestFrameworks.JUnit, "-v")
 
 transitiveClassifiers := Seq("sources", "javadoc")
 
-resolvers in ThisBuild += "NCSA Sonatype Releases" at "https://opensource.ncsa.illinois.edu/nexus/content/repositories/releases"
-
 libraryDependencies in ThisBuild := Seq(
   "org.scala-lang.modules" %% "scala-xml" % "1.0.6",
   "org.scala-lang.modules" %% "scala-parser-combinators" % "1.0.4",
@@ -65,23 +65,13 @@ publishArtifact in Test := false
 
 pomIncludeRepository in ThisBuild := { _ => false }
 
-pomExtra in ThisBuild := (
-  <developers>
-    <developer>
-      <id>Tresys Technology</id>
-      <name>Tresys Technology</name>
-      <url>http://www.tresys.com</url>
-    </developer>
-  </developers>
-)
-
 scmInfo := Some(
   ScmInfo(
-    browseUrl = url("https://opensource.ncsa.illinois.edu/stash/projects/DFDL/repos/daffodil/browse"),
-    connection = "scm:git:https://opensource.ncsa.illinois.edu/stash/scm/dfdl/daffodil.git"
+    browseUrl = url("https://git-wip-us.apache.org/repos/asf?p=incubator-daffodil.git"),
+    connection = "scm:git:git://git.apache.org/incubator-daffodil.git"
   )
 )
 
 licenses in ThisBuild := Seq("University of Illinois/NCSA Open Source License" -> url("http://opensource.org/licenses/UoI-NCSA.php"))
 
-homepage in ThisBuild := Some(url("https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Home"))
+homepage in ThisBuild := Some(url("https://daffodil.apache.org"))
diff --git a/daffodil-cli/README.md b/daffodil-cli/README.md
index 60c7492adc..5d413b3f6b 100644
--- a/daffodil-cli/README.md
+++ b/daffodil-cli/README.md
@@ -1,11 +1,11 @@
 
-# Daffodil
+# Apache Daffodil (incubating)
 
 ## Introduction
 
-Daffodil is the open source implementation of the [Data Format Description Language (DFDL)](http://www.ogf.org/dfdl), a specification created by the [Open Grid Forum](http://www.ogf.org). DFDL is capable of describing many data formats, including textual and binary, commercial record-oriented, scientific and numeric, modern and legacy, and many industry standards. It leverages XML technology and concepts, using a subset of W3C XML schema type system and annotations to describe such data. Daffodil uses this description to parse data into an infoset represented as XML or JSON, easily capable of ingestion, validation, and transformation.
+Apache Daffodil (incubating) is the open source implementation of the [Data Format Description Language (DFDL)](http://www.ogf.org/dfdl), a specification created by the [Open Grid Forum](http://www.ogf.org). DFDL is capable of describing many data formats, including textual and binary, commercial record-oriented, scientific and numeric, modern and legacy, and many industry standards. It leverages XML technology and concepts, using a subset of W3C XML schema type system and annotations to describe such data. Daffodil uses this description to parse data into an infoset represented as XML or JSON, easily capable of ingestion, validation, and transformation.
 
-For more information about Daffodil, see the [Daffodil Wiki](https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Daffodil%3A+Open+Source+DFDL).
+For more information about Daffodil, see https://daffodil.apache.org/.
 
 ## Requirements
 
@@ -25,7 +25,7 @@ To execute Daffodil on Windows:
 $ .\bin\daffodil.bat [options]
 ```
 
-Use the `--help` option or see the [Daffodil CLI](https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Command+Line+Interface) documentation for details on its usage.
+Use the `--help` option or see the [Command Line Interface](https://cwiki.apache.org/confluence/display/DAFFODIL/Command+Line+Interface) documentation for details on its usage.
 
 ### Debugging
 
@@ -37,11 +37,11 @@ $ ./bin/daffodil -d parse --schema <path/to/schema.dfdl.xsd> input-file
 
 When running the debugger, the user is provided with a command prompt, at which point the user can execute debugger commands to control the debugger and inspect state. Type `help` at the command prompt to get information on the debugger commands, or `help <command>` to get information about a specific command.
 
-See the [Interactive Debugger](https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Interactive+Debugger) page for its detailed usage.
+See the [Interactive Debugger](https://cwiki.apache.org/confluence/display/DAFFODIL/Interactive+Debugger) page for its detailed usage.
 
 ## Getting Help
 
-For questions, we can be reached on the [Daffodil users mailing list](http://oss.tresys.com/mailman/listinfo/daffodil-users) or in the #Daffodil room on [NCSA HipChat](http://hipchat.ncsa.illinois.edu/gvZdmJHmq). Bugs can be reported via the [Daffodil JIRA](https://opensource.ncsa.illinois.edu/jira/projects/DFDL/), or via email at [daffodil-fouo-support@tresys.com](mailto:daffodil-fouo-support@tresys.com) for company confidential, FOUO, or security relevant issues.
+For questions, we can be reached at the dev@daffodil.apache.org or user@daffodil.apache.org mailing lists or in #Daffodil on [ASF HipChat](https://www.hipchat.com/gJt9EQs5l). Bugs can be reported via the [Daffodil JIRA](https://issues.apache.org/jira/projects/DAFFODIL).
 
 ## License
 
diff --git a/daffodil-cli/src/main/scala/edu/illinois/ncsa/daffodil/Main.scala b/daffodil-cli/src/main/scala/edu/illinois/ncsa/daffodil/Main.scala
index 260e586da3..3de1b26fb1 100644
--- a/daffodil-cli/src/main/scala/edu/illinois/ncsa/daffodil/Main.scala
+++ b/daffodil-cli/src/main/scala/edu/illinois/ncsa/daffodil/Main.scala
@@ -291,7 +291,7 @@ class CLIConf(arguments: Array[String]) extends scallop.ScallopConf(arguments)
     uri.getOrElse(throw new Exception("Could not find file or resource %s" format s))
   })
 
-  printedName = "daffodil"
+  printedName = "Apache Daffodil (incubating)"
 
   helpWidth(76)
 
@@ -312,16 +312,16 @@ class CLIConf(arguments: Array[String]) extends scallop.ScallopConf(arguments)
     sys.exit(1)
   }
 
-  banner("""|Usage: %s [GLOBAL_OPTS] <subcommand> [SUBCOMMAND_OPTS]
+  banner("""|Usage: daffodil [GLOBAL_OPTS] <subcommand> [SUBCOMMAND_OPTS]
             |
-            |Global Options:""".format(printedName).stripMargin)
+            |Global Options:""".stripMargin)
 
   footer("""|
-            |Run '%s <subcommand> --help' for subcommand specific options""".format(printedName).stripMargin)
+            |Run 'daffodil <subcommand> --help' for subcommand specific options""".stripMargin)
 
   version({
-    val versions = Misc.getDaffodilVersion
-    val strVers = "%s %s (build %s)".format(printedName, versions._1, versions._2)
+    val version = Misc.getDaffodilVersion
+    val strVers = "%s %s".format(printedName, version)
     strVers
   })
 
@@ -1281,7 +1281,7 @@ object Main extends Logging {
                           |
                           | Please report this bug and help us fix it:
                           |
-                          |  https://opensource.ncsa.illinois.edu/confluence/display/DFDL/How+to+Report+a+Bug
+                          |  https://cwiki.apache.org/confluence/display/DAFFODIL/Report+a+Bug
                           |
                           | Please include the following exception, the command you
                           | ran, and any input, schema, or tdml files used that led
@@ -1305,8 +1305,7 @@ object Main extends Logging {
                           | You can create a bug and track the progress of this
                           | feature at:
                           |
-                          |  https://opensource.ncsa.illinois.edu/jira/browse/DFDL
-                          |
+                          |  https://issues.apache.org/jira/projects/DAFFODIL
                           |""".format(e.getMessage()).stripMargin)
     1
   }
diff --git a/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/Daffodil.scala b/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/Daffodil.scala
index ac348fa80e..7127adcae9 100644
--- a/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/Daffodil.scala
+++ b/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/Daffodil.scala
@@ -232,7 +232,7 @@ class Compiler private[japi] () {
   /**
    * Read external variables from a Daffodil configuration file
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
    *
    * @param extVarsFile file to read DFDL variables from.
    */
@@ -250,7 +250,7 @@ class Compiler private[japi] () {
   /**
    * Set a Daffodil tunable parameter
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
    *
    * @param tunable name of the tunable parameter to set.
    * @param value value of the tunable parameter to set
@@ -262,7 +262,7 @@ class Compiler private[japi] () {
   /**
    * Set the value of multiple tunable parameters
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
    *
    * @param tunables a map of key/value pairs, where the key is the tunable name and the value is the value to set it to
    */
@@ -476,7 +476,7 @@ class DataProcessor private[japi] (dp: SDataProcessor)
   /**
    * Read external variables from a Daffodil configuration file
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
    *
    * @param extVars file to read DFDL variables from.
    */
diff --git a/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/debugger/Debugger.scala b/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/debugger/Debugger.scala
index c57569e99f..5155e48bd1 100644
--- a/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/debugger/Debugger.scala
+++ b/daffodil-japi/src/main/scala/edu/illinois/ncsa/daffodil/japi/debugger/Debugger.scala
@@ -46,7 +46,7 @@ abstract class DebuggerRunner {
    * Called by Daffodil when there is a pause in parsing to determine what
    * debugger actions should be taken.
 
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Interactive+Debugger'>Daffodil Interactive Debugger</a> - debugger commands
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Interactive+Debugger'>Daffodil Interactive Debugger</a> - debugger commands
    *
    * @return a debugger command that tells the Daffodil debugger what step to
    *         take next.
diff --git a/daffodil-lib/src/main/scala/edu/illinois/ncsa/daffodil/util/Misc.scala b/daffodil-lib/src/main/scala/edu/illinois/ncsa/daffodil/util/Misc.scala
index d4d86ca600..84fa12fe82 100644
--- a/daffodil-lib/src/main/scala/edu/illinois/ncsa/daffodil/util/Misc.scala
+++ b/daffodil-lib/src/main/scala/edu/illinois/ncsa/daffodil/util/Misc.scala
@@ -201,18 +201,14 @@ object Misc {
   }
 
   /**
-   * Returns a tuple with the primary version number in the first slot
-   * the build hash in the second slot.
+   * Returns the primary version of daffodil from the jar
    */
-  def getDaffodilVersion: Tuple2[String, String] = {
+  def getDaffodilVersion: String = {
     val implVersion = this.getClass.getPackage.getImplementationVersion
     if (implVersion == null) {
-      ("", "")
+      ""
     } else {
-      val VersionRegex = """(.+)-(.+)""".r
-      implVersion match {
-        case VersionRegex(v, b) => (v, b)
-      }
+      implVersion
     }
   }
 
diff --git a/daffodil-sapi/root-doc.txt b/daffodil-sapi/root-doc.txt
index 402f60d82f..548886f385 100644
--- a/daffodil-sapi/root-doc.txt
+++ b/daffodil-sapi/root-doc.txt
@@ -1,4 +1,4 @@
-== Daffodil Scala API ==
+== Apache Daffodil (incubating) Scala API ==
 
 === Packages ===
 
diff --git a/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/Daffodil.scala b/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/Daffodil.scala
index a133d7d79f..1bffa68caa 100644
--- a/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/Daffodil.scala
+++ b/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/Daffodil.scala
@@ -220,7 +220,7 @@ class Compiler private[sapi] () {
   /**
    * Read external variables from a Daffodil configuration file
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
    *
    * @param extVarsFile file to read DFDL variables from.
    */
@@ -238,7 +238,7 @@ class Compiler private[sapi] () {
   /**
    * Set a Daffodil tunable parameter
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
    *
    * @param tunable name of the tunable parameter to set.
    * @param value value of the tunable parameter to set
@@ -250,7 +250,7 @@ class Compiler private[sapi] () {
   /**
    * Set the value of multiple tunable parameters
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File#ConfigurationFile-TunableParameters'>Tunable Parameters</a> - list of tunables names of default values
    *
    * @param tunables a map of key/value pairs, where the key is the tunable name and the value is the value to set it to
    */
@@ -452,7 +452,7 @@ class DataProcessor private[sapi] (dp: SDataProcessor)
   /**
    * Read external variables from a Daffodil configuration file
    *
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Configuration+File'>Daffodil Configuration File</a> - Daffodil configuration file format
    *
    * @param extVars file to read DFDL variables from.
    */
diff --git a/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/debugger/Debugger.scala b/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/debugger/Debugger.scala
index a884930199..7c97910da1 100644
--- a/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/debugger/Debugger.scala
+++ b/daffodil-sapi/src/main/scala/edu/illinois/ncsa/daffodil/sapi/debugger/Debugger.scala
@@ -46,7 +46,7 @@ abstract class DebuggerRunner {
    * Called by Daffodil when there is a pause in parsing to determine what
    * debugger actions should be taken.
 
-   * @see <a target="_blank" href='https://opensource.ncsa.illinois.edu/confluence/display/DFDL/Interactive+Debugger'>Daffodil Interactive Debugger</a> - debugger commands
+   * @see <a target="_blank" href='https://cwiki.apache.org/confluence/display/DAFFODIL/Interactive+Debugger'>Daffodil Interactive Debugger</a> - debugger commands
    *
    * @return a debugger command that tells the Daffodil debugger what step to
    *         take next.
diff --git a/project/build.scala b/project/build.scala
index 0e52cd7fd7..1a2a399aae 100644
--- a/project/build.scala
+++ b/project/build.scala
@@ -336,8 +336,12 @@ object DaffodilBuild extends Build {
 
   // native package configuration
   val packageSettings = Seq(
-    packageName := "daffodil",
+    name := "daffodil",
+    packageName := name.value,
+    packageName in Linux := name.value,
+    packageName in Rpm := name.value,
     mappings in Universal += dumpLicenseReport.value / (licenseReportTitle.value + ".html") -> "LICENSES.html",
+    mappings in Universal += baseDirectory.value / ".." / "DISCLAIMER" -> "DISCLAIMER",
     mappings in Universal += baseDirectory.value / "README.md" -> "README.md",
     mappings in Universal <+= (packageBin in japi in Compile, name in japi in Compile, organization, version) map {
       (bin, n, o, v) => bin -> "lib/%s.%s-%s.jar".format(o, n, v)
@@ -345,122 +349,36 @@ object DaffodilBuild extends Build {
     mappings in Universal <+= (packageBin in sapi in Compile, name in sapi in Compile, organization, version) map {
       (bin, n, o, v) => bin -> "lib/%s.%s-%s.jar".format(o, n, v)
     },
-    version in Rpm:= {
-	val idx = version.value.indexOf('-')
-	if (idx == -1)
-		version.value
-	else
-		version.value.substring(0, idx) },
-    maintainer in Rpm := "Tresys <daffodil-users@oss.tresys.com>",
+    maintainer in Rpm := "Apache Daffodil <dev@daffodil.apache.org>",
     packageArchitecture in Rpm := "noarch",
     packageSummary in Rpm := "Open source implementation of the Data Format Description Language (DFDL)",
-    packageDescription in Rpm := """Daffodil is the open source implementation of the Data Format Description 
-Language (DFDL), a specification created by the Open Grid Forum. DFDL is 
-capable of describing many data formats, including textual and binary, 
-commercial record-oriented, scientific and numeric, modern and legacy, and 
-many industry standards. It leverages XML technology and concepts, using a 
-subset of W3C XML schema type system and annotations to describe such data. 
-Daffodil uses this description to parse data into an XML infoset for ingestion 
+    packageDescription in Rpm := """Apache Daffodil (incubating) is the open source implementation of the Data
+Format Description Language (DFDL), a specification created by the Open Grid
+Forum. DFDL is capable of describing many data formats, including textual and
+binary, commercial record-oriented, scientific and numeric, modern and legacy,
+and many industry standards. It leverages XML technology and concepts, using a
+subset of W3C XML schema type system and annotations to describe such data.
+Daffodil uses this description to parse data into an XML infoset for ingestion
 and validation.""",
-    packageName in Linux := "daffodil",
+    version in Universal := version.value + "-bin",
+    version in Rpm := {
+      val parts = version.value.split("-", 2)
+      parts(0) // removes snapshot/beta/rc/etc, that should only be in the rpmRelease
+    },
     rpmRelease in Rpm := {
-	val idx = version.value.indexOf('-')
-	if (idx == -1)
-		"1"
-	else
-		"0." + version.value.toLowerCase.takeRight(version.value.length - (idx + 1))
-	},
-    rpmVendor in Rpm := "Tresys Technology",
-    rpmLicense in Rpm := Some( licenses.value.map{ case (n: String, _) => n }.mkString(" and ")  ),
-    name := "daffodil"
+      val parts = version.value.split("-", 2) // parts(0) is the version, parts(1) is snapshot/beta/rc/etc if it exists
+      if (parts.length > 1) {
+        "0." + parts(1).toLowerCase
+      } else {
+        "1"
+      }
+    },
+    rpmVendor in Rpm := "Apache Daffodil",
+    rpmLicense in Rpm := Some( licenses.value.map{ case (n: String, _) => n }.mkString(" and ")  )
   )
   cliOnlySettings ++= packageSettings
 
 
-  def exec(cmd: String): Seq[String] = {
-    val r = java.lang.Runtime.getRuntime()
-    val p = r.exec(cmd)
-    p.waitFor()
-    val ret = p.exitValue()
-    if (ret != 0) {
-      sys.error("Command failed: " + cmd)
-    }
-    val is = p.getInputStream
-    val res = scala.io.Source.fromInputStream(is).getLines()
-    res.toSeq
-  }
-
-  // get the version from the latest tag
-  s ++= Seq(version := {
-    val describe = exec("git describe --long HEAD")
-    assert(describe.length == 1)
-
-    val DescribeRegex = """^(.+)-(.+)-(.+)$""".r
-    val res = describe(0) match {
-      case DescribeRegex(taggedVersion, "0", hash) => {
-        // we are on a tag, build a tag release
-        val status = exec("git status --porcelain")
-        if (status.length > 0) {
-          taggedVersion + "-SNAPSHOT"
-        } else {
-          taggedVersion
-        }
-      }
-      case DescribeRegex(version, _, hash) => {
-        // not on a tag
-
-        // get the current branch
-        val branch = exec("git rev-parse --symbolic-full-name HEAD")
-        assert(branch.length == 1)
-        val VersionBranchRegex = """^refs/heads/(\d+\.\d+\.\d+)$""".r
-        branch(0) match {
-          case "HEAD" => {
-            // not on the tip of a branch
-            "0.0.0-SNAPSHOT"
-          }
-          case VersionBranchRegex(versionBranch) => {
-            // we are developing on a version branch, create a snapshot
-            versionBranch + "-SNAPSHOT"
-          }
-          case branch => {
-            // not on a version branch (e.g. a review branch), try to figure
-            // out the tracking branch
-            val trackingBranch = exec("git for-each-ref --format=%(upstream:short) " + branch)
-            assert(trackingBranch.length == 1)
-            val TrackingBranchRegex = """^.*/(\d+\.\d+\.\d+)$""".r
-            trackingBranch(0) match {
-              case TrackingBranchRegex(trackingVersion) => {
-                trackingVersion + "-SNAPSHOT"
-              }
-              case _ => {
-                // no idea what the version is, set it to a default
-                "0.0.0-SNAPSHOT"
-              }
-            }
-          }
-        }
-      }
-    }
-    res
-  })
-
-  def gitShortHash(): String = {
-    val hash = exec("git rev-parse --short HEAD")
-    assert(hash.length == 1)
-    hash(0)
-  }
-
-
-  // update the manifest version to include the git hash
-  lazy val manifestVersion = packageOptions in (Compile, packageBin) <++= version map { v => {
-    val version = "%s-%s".format(v, gitShortHash)
-    Seq(
-      Package.ManifestAttributes(java.util.jar.Attributes.Name.IMPLEMENTATION_VERSION -> version),
-      Package.ManifestAttributes(java.util.jar.Attributes.Name.SPECIFICATION_VERSION -> version)
-    )
-  }}
-  s ++= manifestVersion
-
   // by default, sbt-pgp tries to read ~/.gnupg for keys. We need to force it
   // to be .sbt, which makes it easier to pass the keys around without having
   // to import into gnupg keyrings
@@ -478,48 +396,10 @@ and validation.""",
     packageDoc in Compile <<= packageDoc in GenJavaDoc,
     sources in GenJavaDoc <<= (target, compile in Compile, sources in Compile) map ((t, c, s) => (t / "java" ** "*.java").get.filterNot(f => f.toString.contains('$') || f.toString.contains("packageprivate")) ++ s.filter(_.getName.endsWith(".java"))),
     artifactName in packageDoc in GenJavaDoc := ((sv, mod, art) => "" + mod.name + "_" + sv.binary + "-" + mod.revision + "-javadoc.jar"),
-    javacOptions in GenJavaDoc <<= (version) map ((v) => Seq("-Xdoclint:none", "-quiet", "-windowtitle", "Daffodil-" + v + " Java API", "-doctitle", "<h1>Daffodil-" + v + " Java API</h1>"))
+    javacOptions in GenJavaDoc <<= (version) map ((v) => Seq("-Xdoclint:none", "-quiet", "-windowtitle", "Apache Daffodil (incubating) " + v + " Java API", "-doctitle", "<h1>Apache Daffodil (incubating)" + v + " Java API</h1>"))
   )
 
   lazy val sapiSettings = Seq(
-    scalacOptions in (Compile, doc) <<= (version, baseDirectory) map ((v,b) => Seq("-doc-title", "Daffodil-" + v + " Scala API", "-doc-root-content", b + "/root-doc.txt"))
+    scalacOptions in (Compile, doc) <<= (version, baseDirectory) map ((v,b) => Seq("-doc-title", "Apache Daffodil (incubating)" + v + " Scala API", "-doc-root-content", b + "/root-doc.txt"))
   )
-
-  def errorIfNoVersion(vers: String): Boolean = {
-    if (vers == "0.0.0-SNAPSHOT") {
-      sys.error("""
-Unable to determine Daffodil version. Try one of the following:
-
-1) Checkout a version branch:
-
-     $ git checkout 2.0.0
-
-2) Set your current branch to track a version branch:
-
-     $ git branch --set-upstream-to origin/2.0.0
-
-3) Create a new branch starting at a version branch and track it (recommended
-   whenever creating new feature branches in Daffodil):
-
-    $ git checkout -b branch_name --track origin/2.0.0
-
-4) Create a new branch starting at the current HEAD and track a version branch:
-
-    $ git checkout -b branch_name
-    $ git branch --set-upstream-to origin/2.0.0
-
-"""
-)
-      true
-    } else {
-      false
-    }
-  }
-
-  // fail to create any artifacts if we don't have a version number
-  lazy val requireVersionSettings = Seq(
-    packagedArtifacts <<= (packagedArtifacts, version).map { (p, v) => if (!p.isEmpty && !errorIfNoVersion(v)) p else Map.empty }
-  )
-  s ++= requireVersionSettings
-
 }
diff --git a/tutorials/src/main/resources/DFDLTutorialStylesheet.xsl b/tutorials/src/main/resources/DFDLTutorialStylesheet.xsl
index 444d9bfcd5..24109123c7 100644
--- a/tutorials/src/main/resources/DFDLTutorialStylesheet.xsl
+++ b/tutorials/src/main/resources/DFDLTutorialStylesheet.xsl
@@ -125,7 +125,6 @@
     <html>
       <head>
         <link rel="stylesheet" href="DFDLTutorialStylesheet.css" media="all"/>
-        <link rel="shortcut icon" href="http://www.tresys.com/favicon.ico?v=2"/>
                 <!-- This li.L0, li.L1 etc. is about turning on line numbering for all lines. 
                      The default was to put a line number only every 5 lines. -->
         <style>
@@ -144,9 +143,6 @@
       </head>
       <body id="main">
         <header>
-          <a id="logo" href="http://www.tresys.com">
-            <img src="tresys.png"/>
-          </a>
           <div id="headerText">
             <hr/>
             <h1>
@@ -154,7 +150,7 @@
             </h1>
             <p>
               For quick reference here is the
-              <a href="https://opensource.ncsa.illinois.edu/projects/artifacts/DFDL/latest/documentation/Manual/">DFDL Specification (HTML)</a>
+              <a href="https://daffodil.apache.org/manual/">DFDL Specification (HTML)</a>
             </p>
             <hr/>
           </div>
diff --git a/tutorials/src/main/resources/bitorder.tutorial.tdml.xml b/tutorials/src/main/resources/bitorder.tutorial.tdml.xml
index 617debe6e5..613a501a42 100644
--- a/tutorials/src/main/resources/bitorder.tutorial.tdml.xml
+++ b/tutorials/src/main/resources/bitorder.tutorial.tdml.xml
@@ -9,8 +9,8 @@ xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
   xmlns="http://www.w3.org/1999/xhtml">
   <tdml:tutorial xml:space="preserve">
     <p> DFDL has not only the dfdl:byteOrder property, but a property dfdl:bitOrder which is used when the data fields are not on byte boundaries. There are many formats which use individual bit flags, small 2 or 3 or 4 bit fields, or larger fields that do not use up an integral number of bytes. E.g., a 12-bit field. Given that the bits of these fields do not occupy whole bytes, the quesion arises of how we express which bits of a byte are the ones that make up a data field. </p>
-<p>The <a href='http://opensource.ncsa.illinois.edu/projects/artifacts/DFDL/latest/documentation/Manual/#_Toc398030723'>DFDL Specification describes dfdl:bitOrder</a>:</p>
-<blockquote cite='http://opensource.ncsa.illinois.edu/projects/artifacts/DFDL/latest/documentation/Manual/#_Toc398030723'>
+<p>The <a href='http://daffodil.apache.org/manual/#_Toc398030723'>DFDL Specification describes dfdl:bitOrder</a>:</p>
+<blockquote cite='http://daffodil.apache.org/manual/#_Toc398030723'>
 The bits of a byte each have a place value or significance of 2<sup>n</sup>, for n from 0 to 7. Hence, the byte value 255 = 2 <sup>7</sup> + 2<sup>6</sup> + 2<sup>5</sup> + 2<sup>4</sup> + 2<sup>3</sup> + 2<sup>2</sup> + 2<sup>1</sup> + 2<sup>0</sup>. A bit can always be unambiguously identified as the 2<sup>n</sup>-bit.
 The bit order is the correspondence of a bit's numeric significance to the bit position (1 to 8) within the byte. 
 </blockquote>
diff --git a/tutorials/src/main/resources/test1.tutorial.tdml.xml b/tutorials/src/main/resources/test1.tutorial.tdml.xml
index 863755d220..45832471c5 100644
--- a/tutorials/src/main/resources/test1.tutorial.tdml.xml
+++ b/tutorials/src/main/resources/test1.tutorial.tdml.xml
@@ -14,10 +14,10 @@
     </p>
     <p>Here is some sample content. Anything XHTML works here.</p>
     <p>
-      DFDL has this <a href='http://opensource.ncsa.illinois.edu/projects/artifacts/DFDL/latest/documentation/Manual/#_Toc398030723'>bitOrder property</a>. Let's talk about that.
+      DFDL has this <a href='http://daffodil.apache.org/manual/#_Toc398030723'>bitOrder property</a>. Let's talk about that.
       Here's a quote from the spec., something I expect many TDML tutorials to want to do so as to highlight specific phrasing or language.
       </p>
-      <blockquote cite='http://opensource.ncsa.illinois.edu/projects/artifacts/DFDL/latest/documentation/Manual/#_Toc398030723'>
+      <blockquote cite='http://daffodil.apache.org/manual/#_Toc398030723'>
         The bits of a byte each have a place value or significance of 2
         <sup>n</sup>
         , for n from 0 to 7.
diff --git a/tutorials/src/main/resources/tresys.png b/tutorials/src/main/resources/tresys.png
deleted file mode 100644
index cd79f68d19..0000000000
Binary files a/tutorials/src/main/resources/tresys.png and /dev/null differ

diff --git a/bin/gobblin-env.sh b/bin/gobblin-env.sh
index 6ca8473dc2..08f49b0a9c 100755
--- a/bin/gobblin-env.sh
+++ b/bin/gobblin-env.sh
@@ -17,4 +17,6 @@
 # limitations under the License.
 #
 
-# Set Gobblin specific environment variables here.
+# export environment variables here to be used in gobblin.sh scripts and gobblin platform configs.
+GOBBLIN_WORK_DIR=$GOBBLIN_HOME/work
+GOBBLIN_JOB_CONFIG_DIR=$GOBBLIN_HOME/jobs
diff --git a/bin/gobblin.sh b/bin/gobblin.sh
index 968106a968..5f046aa812 100755
--- a/bin/gobblin.sh
+++ b/bin/gobblin.sh
@@ -80,15 +80,15 @@ MAPREDUCE_CLASS='org.apache.gobblin.runtime.mapreduce.CliMRJobLauncher'
 SERVICE_MANAGER_CLASS='org.apache.gobblin.service.modules.core.GobblinServiceManager'
 
 function print_gobblin_usage() {
-    echo "Usage:"
+    echo "Usage:                                          (for Gobblin Version: $GOBBLIN_VERSION)"
     echo "gobblin.sh  cli     <cli-command>    <params>"
     echo "gobblin.sh  service <execution-mode> <start|stop|restart|status>"
     echo ""
-    echo "Use \"gobblin <cli|service> --help\" for more information.         (Gobblin Version: $GOBBLIN_VERSION)"
+    echo "Use \"gobblin <cli|service> --help\" for more information."
 }
 
 function print_gobblin_cli_usage() {
-    echo "Usage:              (for Gobblin Version: $GOBBLIN_VERSION)"
+    echo "Usage:                                          (for Gobblin Version: $GOBBLIN_VERSION)"
     echo "gobblin.sh  cli     <cli-command>    <params>"
     echo ""
     echo "options:"
@@ -106,9 +106,11 @@ function print_gobblin_cli_usage() {
                 job-store-schema-manager    Database job history store schema manager
                 gobblin-classpath           shows the constructed gobblin classpath"
     echo ""
-    echo "    --conf-dir <gobblin-conf-dir-path>    Gobblon config path. default is '\$GOBBLIN_HOME/conf/cli'."
-    echo "    --log4j-conf <path-of-log4j-file>     default is '<gobblin-conf-dir-path>/cli/log4j.properties'."
-    echo "    --jvmopts <jvm or gc options>         JVM or GC parameters for the java process to append to the default params: \"$JVM_OPTS\"."
+    echo "    --conf-dir <gobblin-conf-dir-path>    Gobblin config path. default is '\$GOBBLIN_HOME/conf/<execution-mode>'."
+    echo "    --log4j-conf <path-of-log4j-file>     default is '<gobblin-conf-dir-path>/<execution-mode>/log4j.properties'."
+    echo "    --work-dir <gobblin-work-dir>         Gobblin work dir. default is $GOBBLIN_WORK_DIR."
+    echo "    --job-conf-dir <path-of-log4j-file>   Job configuration dir to pick up the jobs to run. default is $GOBBLIN_JOB_CONFIG_DIR."
+    echo "    --jvmopts <jvm or gc options>         String containing JVM flags to include, in addition to \"$JVM_OPTS\"."
     echo "    --jars <csv list of extra jars>       Column-separated list of extra jars to put on the CLASSPATH."
     echo "    --enable-gc-logs                      enables gc logs & dumps."
     echo "    --show-classpath                      prints gobblin runtime classpath."
@@ -117,7 +119,7 @@ function print_gobblin_cli_usage() {
 }
 
 function print_gobblin_service_usage() {
-    echo "Usage:              (for Gobblin Version: $GOBBLIN_VERSION)"
+    echo "Usage:                                          (for Gobblin Version: $GOBBLIN_VERSION)"
     echo "gobblin.sh  service <execution-mode> <start|stop|restart|status>"
     echo ""
     echo "Argument Options:"
@@ -125,7 +127,9 @@ function print_gobblin_service_usage() {
     echo ""
     echo "    --conf-dir <gobblin-conf-dir-path>    Gobblin config path. default is '\$GOBBLIN_HOME/conf/<execution-mode>'."
     echo "    --log4j-conf <path-of-log4j-file>     default is '<gobblin-conf-dir-path>/<execution-mode>/log4j.properties'."
-    echo "    --jvmopts <jvm or gc options>         JVM or GC parameters for the java process to append to the default params: \"$JVM_OPTS\"."
+    echo "    --work-dir <gobblin-work-dir>         Gobblin work dir. default is $GOBBLIN_WORK_DIR."
+    echo "    --job-conf-dir <path-of-log4j-file>   Job configuration dir to pick up the jobs to run. default is $GOBBLIN_JOB_CONFIG_DIR."
+    echo "    --jvmopts <jvm or gc options>         String containing JVM flags to include, in addition to \"$JVM_OPTS\"."
     echo "    --jars <csv list of extra jars>       Column-separated list of extra jars to put on the CLASSPATH."
     echo "    --enable-gc-logs                      enables gc logs & dumps."
     echo "    --show-classpath                      prints gobblin runtime classpath."
@@ -193,6 +197,14 @@ do
             USER_CONF_DIR="$2"
             shift
         ;;
+        --work-dir)
+            GOBBLIN_WORK_DIR="$2"
+            shift
+        ;;
+        --job-conf-dir)
+            GOBBLIN_JOB_CONFIG_DIR="$2"
+            shift
+        ;;
         --log4j-conf)
             USER_LOG4J_FILE="$2"
             shift
@@ -261,6 +273,14 @@ if [[ -n "$USER_JVM_FLAGS" ]]; then
     JVM_OPTS="$JVM_OPTS $USER_JVM_FLAGS"
 fi
 
+GC_OPTS=''
+if [[ ${ENABLE_GC_LOGS} -eq 1 ]]; then
+    GC_OPTS+="-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+UseCompressedOops "
+    GC_OPTS+="-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution "
+    GC_OPTS+="-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$GOBBLIN_LOGS/ "
+    GC_OPTS+="-Xloggc:$GOBBLIN_LOGS/gobblin-$GOBBLIN_MODE-gc.log "
+fi
+
 # gobblin config
 if [[ -n "$USER_CONF_DIR" ]]; then
     GOBBLIN_CONF=$USER_CONF_DIR
@@ -286,18 +306,18 @@ elif [[ -f ${GOBBLIN_CONF}/log4j.properties ]]; then
     LOG4J_OPTS="-Dlog4j.configuration=$LOG4J_FILE_PATH"
 fi
 
+#Create required directories
 if [[ ! -d "$GOBBLIN_LOGS" ]]; then
     mkdir -p $GOBBLIN_LOGS
 fi
 
-GC_OPTS=''
-if [[ ${ENABLE_GC_LOGS} -eq 1 ]]; then
-    GC_OPTS+="-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+UseCompressedOops "
-    GC_OPTS+="-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution "
-    GC_OPTS+="-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$GOBBLIN_LOGS/ "
-    GC_OPTS+="-Xloggc:$GOBBLIN_LOGS/gobblin-$GOBBLIN_MODE-gc.log "
+if [[ ! -d "$GOBBLIN_WORK_DIR" ]]; then
+    mkdir -p $GOBBLIN_WORK_DIR
 fi
 
+if [[ ! -d "$GOBBLIN_JOB_CONFIG_DIR" ]]; then
+    mkdir -p $GOBBLIN_JOB_CONFIG_DIR
+fi
 
 function build_classpath(){
     GOBBLIN_CLASSPATH=''
@@ -471,6 +491,9 @@ function start() {
             GOBBLIN_COMMAND="$JAVA_HOME/bin/java -cp $GOBBLIN_CLASSPATH $GC_OPTS $JVM_OPTS $LOG4J_OPTS $ADDITIONAL_ARGS $CLASS_N_ARGS"
         fi
 
+        #Export all Gobblin variables to be used by job config
+        export GOBBLIN_HOME GOBBLIN_CONF GOBBLIN_WORK_DIR GOBBLIN_JOB_CONFIG_DIR
+
         # execute the command
         if [ $VERBOSE -eq 1 ] && [ $LOG_TO_STDOUT -eq 1 ]; then
             echo "Running command: $GOBBLIN_COMMAND"
diff --git a/conf/cli/gobblin-cli.properties b/conf/cli/application.conf
similarity index 77%
rename from conf/cli/gobblin-cli.properties
rename to conf/cli/application.conf
index 6578c760a4..148abf7612 100644
--- a/conf/cli/gobblin-cli.properties
+++ b/conf/cli/application.conf
@@ -19,21 +19,25 @@
 ################## Gobblin Default Example Configurations #####################
 ###############################################################################
 
+# Taken from system envrionment variables. default set in gobblin-env.sh
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
+gobblin.jobconf.dir=${GOBBLIN_JOB_CONFIG_DIR}
+
 # File system URIs
-fs.uri=file:///
+fs.uri="file:///"
 writer.fs.uri=${fs.uri}
 state.store.fs.uri=${fs.uri}
 
 # Writer related configuration properties
-writer.staging.dir=${env:GOBBLIN_WORK_DIR}/task-staging
-writer.output.dir=${env:GOBBLIN_WORK_DIR}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
-data.publisher.final.dir=${env:GOBBLIN_WORK_DIR}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=true
 
 # Directory where job/task state files are stored
-state.store.dir=${env:GOBBLIN_WORK_DIR}/state-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Disable job locks
 job.lock.enabled=false
diff --git a/conf/cluster-master/application.conf b/conf/cluster-master/application.conf
index 8b1d88e088..b0b5fa6c1f 100644
--- a/conf/cluster-master/application.conf
+++ b/conf/cluster-master/application.conf
@@ -15,11 +15,14 @@
 # limitations under the License.
 #
 
+# Taken from system envrionment variables. default set in gobblin-env.sh
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
+gobblin.jobconf.dir=${GOBBLIN_JOB_CONFIG_DIR}
+
 # Cluster configuration properties
 gobblin.cluster.app.name=GobblinStandaloneCluster
 gobblin.cluster.email.notification.on.shutdown=false
 gobblin.cluster.helix.instance.max.retries=2
-gobblin.cluster.work.dir=/tmp/gobblin-cluster
 
 # Helix/Zookeeper configuration properties
 gobblin.cluster.helix.cluster.name=GobblinStandaloneCluster
@@ -28,7 +31,7 @@ gobblin.cluster.zk.connection.string="localhost:2181"
 jobconf.monitor.interval=30000
 
 # Sample configuration properties for the Gobblin Standalone cluster
-gobblin.cluster.workDir=${gobblin.cluster.work.dir}/GobblinStandaloneCluster
+gobblin.cluster.workDir=${gobblin.work.dir}/GobblinStandaloneCluster
 
 # default is the JobConfigurationManager
 # use this manager to accept jobs from Kafka. It requires some additional Kafka related parameters.
@@ -41,9 +44,9 @@ gobblin.cluster.workDir=${gobblin.cluster.work.dir}/GobblinStandaloneCluster
 gobblin.cluster.helix.cluster.name=GobblinStandaloneClusterCli
 
 # used by the JobConfigurationManager
-gobblin.cluster.job.conf.path=${gobblin.cluster.work.dir}/jobs
+gobblin.cluster.job.conf.path=${gobblin.jobconf.dir}
 
-gobblin.cluster.jobconf.fullyQualifiedPath=${gobblin.cluster.work.dir}/jobs
+gobblin.cluster.jobconf.fullyQualifiedPath="file://"${gobblin.jobconf.dir}
 gobblin.cluster.job.catalog=org.apache.gobblin.runtime.job_catalog.FSJobCatalog
 
 # File system URIs
@@ -54,28 +57,28 @@ state.store.fs.uri=${fs.uri}
 # Writer related configuration properties
 writer.destination.type=HDFS
 writer.output.format=AVRO
-writer.staging.dir=${gobblin.cluster.work.dir}/task-staging
-writer.output.dir=${gobblin.cluster.work.dir}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
 data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
-data.publisher.final.dir=${gobblin.cluster.work.dir}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=false
 
 # Directory where job/task state files are stored
-state.store.dir=${gobblin.cluster.work.dir}/state-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Directory where error files from the quality checkers are stored
-qualitychecker.row.err.file=${gobblin.cluster.work.dir}/err
+qualitychecker.row.err.file=${gobblin.work.dir}/err
 
 # Disable job locking for now
 job.lock.enabled=false
 
 # Directory where job locks are stored
-job.lock.dir=${gobblin.cluster.work.dir}/locks
+job.lock.dir=${gobblin.work.dir}/locks
 
 # Directory where metrics log files are stored
-metrics.log.dir=${gobblin.cluster.work.dir}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 
 # Interval of task state reporting in milliseconds
 task.status.reportintervalinms=1000
diff --git a/conf/cluster-worker/application.conf b/conf/cluster-worker/application.conf
index 52414b0fb5..7ac715a1a0 100644
--- a/conf/cluster-worker/application.conf
+++ b/conf/cluster-worker/application.conf
@@ -15,18 +15,21 @@
 # limitations under the License.
 #
 
+# Taken from system envrionment variables. default set in gobblin-env.sh
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
+gobblin.jobconf.dir=${GOBBLIN_JOB_CONFIG_DIR}
+
 # Cluster configuration properties
 gobblin.cluster.app.name=GobblinStandaloneCluster
 gobblin.cluster.email.notification.on.shutdown=false
 gobblin.cluster.helix.instance.max.retries=2
-gobblin.cluster.work.dir=/tmp/gobblin-cluster
 
 # Helix/Zookeeper configuration properties
 gobblin.cluster.helix.cluster.name=GobblinStandaloneCluster
 gobblin.cluster.zk.connection.string="localhost:2181"
 
 # Sample configuration properties for the Gobblin Standalone cluster
-gobblin.cluster.workDir=${gobblin.cluster.work.dir}/GobblinStandaloneCluster
+gobblin.cluster.workDir=${gobblin.work.dir}/GobblinStandaloneCluster
 
 # default is the JobConfigurationManager
 # use this manager to accept jobs from Kafka. It requires some additional Kafka related parameters.
@@ -39,9 +42,9 @@ gobblin.cluster.workDir=${gobblin.cluster.work.dir}/GobblinStandaloneCluster
 gobblin.cluster.helix.cluster.name=GobblinStandaloneClusterCli
 
 # used by the JobConfigurationManager
-gobblin.cluster.job.conf.path=${gobblin.cluster.work.dir}/jobs
+gobblin.cluster.job.conf.path=${gobblin.jobconf.dir}
 
-gobblin.cluster.jobconf.fullyQualifiedPath=${gobblin.cluster.work.dir}/jobs
+gobblin.cluster.jobconf.fullyQualifiedPath=file:///${gobblin.jobconf.dir}
 
 # File system URIs
 fs.uri="file:///"
@@ -51,28 +54,28 @@ state.store.fs.uri=${fs.uri}
 # Writer related configuration properties
 writer.destination.type=HDFS
 writer.output.format=AVRO
-writer.staging.dir=${gobblin.cluster.work.dir}/task-staging
-writer.output.dir=${gobblin.cluster.work.dir}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
 data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
-data.publisher.final.dir=${gobblin.cluster.work.dir}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=false
 
 # Directory where job/task state files are stored
-state.store.dir=${gobblin.cluster.work.dir}/state-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Directory where error files from the quality checkers are stored
-qualitychecker.row.err.file=${gobblin.cluster.work.dir}/err
+qualitychecker.row.err.file=${gobblin.work.dir}/err
 
 # Disable job locking for now
 job.lock.enabled=false
 
 # Directory where job locks are stored
-job.lock.dir=${gobblin.cluster.work.dir}/locks
+job.lock.dir=${gobblin.work.dir}/locks
 
 # Directory where metrics log files are stored
-metrics.log.dir=${gobblin.cluster.work.dir}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 
 # Interval of task state reporting in milliseconds
 task.status.reportintervalinms=1000
@@ -80,7 +83,7 @@ task.status.reportintervalinms=1000
 # Enable metrics / events
 metrics.enabled=true
 
-failure.log.dir=${gobblin.cluster.work.dir}/failure-logs
+failure.log.dir=${gobblin.work.dir}/failure-logs
 
 # UI
 admin.server.enabled=false
diff --git a/conf/gobblin-as-service/application.conf b/conf/gobblin-as-service/application.conf
index 514532521e..dbf718fd13 100644
--- a/conf/gobblin-as-service/application.conf
+++ b/conf/gobblin-as-service/application.conf
@@ -16,11 +16,12 @@
 #
 
 # Gobblin-As-Service configuration properties
-gobblin.service.work.dir=/tmp/gobblin-as-service
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
 fs.uri="file:///"
 
 # Topology Catalog and Store
-topologySpec.store.dir=${gobblin.service.work.dir}/topologySpecStore
+topologySpec.store.dir=${gobblin.work.dir}/topologySpecStore
+specStore.fs.dir=${gobblin.work.dir}/spec-store
 
 # TopologySpec Factory
 topologySpecFactory.topologyNames=localGobblinCluster
@@ -29,10 +30,10 @@ topologySpecFactory.localGobblinCluster.version="1"
 topologySpecFactory.localGobblinCluster.uri="gobblinCluster"
 topologySpecFactory.localGobblinCluster.specExecutorInstance.class="org.apache.gobblin.runtime.spec_executorInstance.LocalFsSpecExecutor"
 topologySpecFactory.localGobblinCluster.specExecInstance.capabilities="source:dest"
-topologySpecFactory.localGobblinCluster.localFsSpecProducer.dir=${gobblin.service.work.dir}/jobs
+topologySpecFactory.localGobblinCluster.gobblin.cluster.localSpecProducer.dir=${gobblin.work.dir}/jobs
 
 # Flow Catalog and Store
-flowSpec.store.dir=${gobblin.service.work.dir}/flowSpecStore
+flowSpec.store.dir=${gobblin.work.dir}/flowSpecStore
 
 # Template Catalog
 gobblin.service.templateCatalogs.fullyQualifiedPath="file://"
@@ -40,15 +41,19 @@ gobblin.service.templateCatalogs.fullyQualifiedPath="file://"
 # JobStatusMonitor
 gobblin.service.jobStatusMonitor.enabled=false
 
+
+# FsJobStatusRetriever
+fsJobStatusRetriever.state.store.dir=${gobblin.work.dir}/state-store
+
 # JobStatusRetriever
 jobStatusRetriever.class="org.apache.gobblin.service.monitoring.LocalFsJobStatusRetriever"
-localFsJobStatusRetriever.localFsSpecProducer.dir=${gobblin.service.work.dir}/jobs
+localFsJobStatusRetriever.localFsSpecProducer.dir=${gobblin.work.dir}/jobs
 
 # DagManager
 gobblin.service.dagManager.enabled=true
 gobblin.service.dagManager.jobStatusRetriever.class="org.apache.gobblin.service.monitoring.LocalFsJobStatusRetriever"
 gobblin.service.dagManager.dagStateStoreClass="org.apache.gobblin.service.modules.orchestration.FSDagStateStore"
-gobblin.service.dagManager.dagStateStoreDir=${gobblin.service.work.dir}/dagStateStoreDir
+gobblin.service.dagManager.dagStateStoreDir=${gobblin.work.dir}/dagStateStoreDir
 
 # RestLI
 gobblin.service.port=6956
diff --git a/conf/mapreduce/application.conf b/conf/mapreduce/application.conf
index 9375512ba1..99583c0ca0 100644
--- a/conf/mapreduce/application.conf
+++ b/conf/mapreduce/application.conf
@@ -19,44 +19,45 @@
 ###################### Gobblin MapReduce configurations #######################
 ###############################################################################
 
-gobblin.cluster.work.dir=/tmp/gobblin-cluster
-
-# Thread pool settings for the task executor
-taskexecutor.threadpool.size=2
-taskretry.threadpool.coresize=1
-taskretry.threadpool.maxsize=2
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
 
 # File system URIs
-fs.uri=hdfs://localhost:8020
+fs.uri="hdfs://localhost:8020"
 writer.fs.uri=${fs.uri}
 state.store.fs.uri=${fs.uri}
 
 # Writer related configuration properties
 writer.destination.type=HDFS
 writer.output.format=AVRO
-writer.staging.dir=${gobblin.cluster.work.dir}/task-staging
-writer.output.dir=${gobblin.cluster.work.dir}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
 data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
-data.publisher.final.dir=${gobblin.cluster.work.dir}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=false
 
 # Directory where job/task state files are stored
-state.store.dir=${gobblin.cluster.work.dir}/state-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Directory where error files from the quality checkers are stored
-qualitychecker.row.err.file=${gobblin.cluster.work.dir}/err
+qualitychecker.row.err.file=${gobblin.work.dir}/err
 
 # Directory where job locks are stored
-job.lock.dir=${gobblin.cluster.work.dir}/locks
+job.lock.dir=${gobblin.work.dir}/locks
 
 # Directory where metrics log files are stored
-metrics.log.dir=${gobblin.cluster.work.dir}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 
 # Interval of task state reporting in milliseconds
 task.status.reportintervalinms=5000
 
 # MapReduce properties
-mr.job.root.dir=${gobblin.cluster.work.dir}/working
+mr.job.root.dir=${gobblin.work.dir}/working
+
+# Thread pool settings for the task executor
+taskexecutor.threadpool.size=2
+taskretry.threadpool.coresize=1
+taskretry.threadpool.maxsize=2
+
 
diff --git a/conf/standalone/application.conf b/conf/standalone/application.conf
index 77e118280b..3837c21349 100644
--- a/conf/standalone/application.conf
+++ b/conf/standalone/application.conf
@@ -15,44 +15,47 @@
 # limitations under the License.
 #
 
-# Thread pool settings for the task executor
-taskexecutor.threadpool.size=2
-taskretry.threadpool.coresize=1
-taskretry.threadpool.maxsize=2
+# Taken from system envrionment variables. default set in gobblin-env.sh
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
+gobblin.jobconf.dir=${GOBBLIN_JOB_CONFIG_DIR}
+
+# Directory where job configuration files are stored
+jobconf.dir=${gobblin.jobconf.dir}
+jobconf.fullyQualifiedPath="file://"${gobblin.jobconf.dir}
+# Directory where job locks are stored
+job.lock.dir=${gobblin.work.dir}/locks
 
 # File system URIs
-fs.uri=file:///
+fs.uri="file:///"
 writer.fs.uri=${fs.uri}
 state.store.fs.uri=${fs.uri}
 
 # Writer related configuration properties
 writer.output.format=AVRO
-writer.staging.dir=${env:GOBBLIN_WORK_DIR}/task-staging
-writer.output.dir=${env:GOBBLIN_WORK_DIR}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
 data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
-data.publisher.final.dir=${env:GOBBLIN_WORK_DIR}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=false
 
-# Directory where job configuration files are stored
-jobconf.dir=${env:GOBBLIN_JOB_CONFIG_DIR}
-jobconf.fullyQualifiedPath=file://${env:GOBBLIN_JOB_CONFIG_DIR}
-
 # Directory where job/task state files are stored
-state.store.dir=${env:GOBBLIN_WORK_DIR}/state-store
-
-# Directory where commit sequences are stored
-gobblin.runtime.commit.sequence.store.dir=${env:GOBBLIN_WORK_DIR}/commit-sequence-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Directory where error files from the quality checkers are stored
-qualitychecker.row.err.file=${env:GOBBLIN_WORK_DIR}/err
+qualitychecker.row.err.file=${gobblin.work.dir}/err
 
-# Directory where job locks are stored
-job.lock.dir=${env:GOBBLIN_WORK_DIR}/locks
+# Directory where commit sequences are stored
+gobblin.runtime.commit.sequence.store.dir=${gobblin.work.dir}/commit-sequence-store
+
+# Thread pool settings for the task executor
+taskexecutor.threadpool.size=2
+taskretry.threadpool.coresize=1
+taskretry.threadpool.maxsize=2
 
 # Directory where metrics log files are stored
-metrics.log.dir=${env:GOBBLIN_WORK_DIR}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 
 # Enable metrics / events
 metrics.enabled=true
diff --git a/conf/yarn/application.conf b/conf/yarn/application.conf
index b31a731ac8..30ba712ed8 100644
--- a/conf/yarn/application.conf
+++ b/conf/yarn/application.conf
@@ -19,7 +19,9 @@
 
 # Sample configuration properties with default values
 
-
+# Taken from system envrionment variables. default set in gobblin-env.sh
+gobblin.work.dir=${GOBBLIN_WORK_DIR}
+gobblin.jobconf.dir=${GOBBLIN_JOB_CONFIG_DIR}
 
 # Yarn/Helix configuration properties
 gobblin.yarn.app.queue=default
@@ -36,12 +38,11 @@ gobblin.yarn.keytab.login.interval.minutes=1440
 gobblin.yarn.token.renew.interval.minutes=720
 gobblin.yarn.helix.instance.max.retries=2
 
-gobblin.yarn.work.dir=/tmp/gobblin
-gobblin.yarn.conf.dir=${GOBBLIN_HOME}/conf/yarn/
+gobblin.yarn.conf.dir=${GOBBLIN_CONF}
 gobblin.yarn.lib.jars.dir=${GOBBLIN_HOME}/lib/
 gobblin.yarn.app.master.files.local=${gobblin.yarn.conf.dir}"/log4j.properties,"${gobblin.yarn.conf.dir}"/application.conf,"${gobblin.yarn.conf.dir}"/reference.conf"
 gobblin.yarn.container.files.local=${gobblin.yarn.app.master.files.local}
-gobblin.yarn.logs.sink.root.dir=/tools/gobblin-dist/yarn_app_logs
+gobblin.yarn.logs.sink.root.dir=${GOBBLIN_LOG}/yarn_app_logs
 gobblin.yarn.email.notification.on.shutdown=false
 
 gobblin.cluster.zk.connection.string="localhost:2181"
@@ -59,28 +60,28 @@ state.store.fs.uri=${fs.uri}
 # Writer related configuration properties
 writer.destination.type=HDFS
 writer.output.format=AVRO
-writer.staging.dir=${gobblin.yarn.work.dir}/task-staging
-writer.output.dir=${gobblin.yarn.work.dir}/task-output
+writer.staging.dir=${gobblin.work.dir}/task-staging
+writer.output.dir=${gobblin.work.dir}/task-output
 
 # Data publisher related configuration properties
 data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
-data.publisher.final.dir=${gobblin.yarn.work.dir}/job-output
+data.publisher.final.dir=${gobblin.work.dir}/job-output
 data.publisher.replace.final.dir=false
 
 # Directory where job/task state files are stored
-state.store.dir=${gobblin.yarn.work.dir}/state-store
+state.store.dir=${gobblin.work.dir}/state-store
 
 # Directory where error files from the quality checkers are stored
-qualitychecker.row.err.file=${gobblin.yarn.work.dir}/err
+qualitychecker.row.err.file=${gobblin.work.dir}/err
 
 # Disable job locking for now
 job.lock.enabled=false
 
 # Directory where job locks are stored
-job.lock.dir=${gobblin.yarn.work.dir}/locks
+job.lock.dir=${gobblin.work.dir}/locks
 
 # Directory where metrics log files are stored
-metrics.log.dir=${gobblin.yarn.work.dir}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 
 # Interval of task state reporting in milliseconds
 task.status.reportintervalinms=1000
diff --git a/gobblin-docs/case-studies/Kafka-HDFS-Ingestion.md b/gobblin-docs/case-studies/Kafka-HDFS-Ingestion.md
index 87817f4df5..1d0b87648e 100644
--- a/gobblin-docs/case-studies/Kafka-HDFS-Ingestion.md
+++ b/gobblin-docs/case-studies/Kafka-HDFS-Ingestion.md
@@ -34,7 +34,7 @@ data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher
 mr.job.max.mappers=1
 
 metrics.reporting.file.enabled=true
-metrics.log.dir=${gobblin.cluster.work.dir}/metrics
+metrics.log.dir=${gobblin.work.dir}/metrics
 metrics.reporting.file.suffix=txt
 
 bootstrap.with.offset=earliest
@@ -52,7 +52,7 @@ INFO Actual high watermark for partition test:0=2, expected=2
 INFO Task <task_id> completed in 31212ms with state SUCCESSFUL
 ```
 
-The output file will be in `{gobblin.cluster.work.dir}/job-output/test`, with the two messages you've just created in the Kafka broker. `{gobblin.cluster.work.dir}/metrics` will contain metrics collected from this run.
+The output file will be in `{gobblin.work.dir}/job-output/test`, with the two messages you've just created in the Kafka broker. `{gobblin.work.dir}/metrics` will contain metrics collected from this run.
 
 ## MapReduce
 
diff --git a/gobblin-docs/user-guide/Gobblin-CLI.md b/gobblin-docs/user-guide/Gobblin-CLI.md
index d3a434afa4..41f22584c6 100644
--- a/gobblin-docs/user-guide/Gobblin-CLI.md
+++ b/gobblin-docs/user-guide/Gobblin-CLI.md
@@ -10,20 +10,20 @@ The Gobblin distribution comes with a script `./bin/gobblin` for all commands an
 Here is the usage:  
 
 ```bash
-Usage:
+Usage:                                          (for Gobblin Version: 0.15.0)
 gobblin.sh  cli     <cli-command>    <params>
-gobblin.sh  service <execution-mode> <start|stop|status>
+gobblin.sh  service <execution-mode> <start|stop|restart|status>
 
-Use "gobblin <cli|service> --help" for more information.         (Gobblin Version: 0.15.0)
+Use "gobblin <cli|service> --help" for more information.
 ```
 
 For Gobblin CLI commands, run following:  
 ```bash
-Usage:
+Usage:              (for Gobblin Version: 0.15.0)
 gobblin.sh  cli     <cli-command>    <params>
 
 options:
-    cli-commands:
+   cli-commands:
                 passwordManager             Encrypt or decrypt strings for the password manager.
                 decrypt                     Decryption utilities
                 run                         Run a Gobblin application.
@@ -35,23 +35,27 @@ options:
                 keystore                    Examine JCE Keystore files
                 watermarks                  Inspect streaming watermarks
                 job-store-schema-manager    Database job history store schema manager
-
-    --conf-dir <gobblin-conf-dir-path> Gobblon config path. default is '$GOBBLIN_HOME/conf/<exe-mode-name>'.
-    --log4j-conf <path-of-log4j-file>  default is '<gobblin-conf-dir-path>/<execution-mode>/log4j.properties'.
-    --jvmopts <jvm or gc options>      String containing JVM flags to include, in addition to "-Xmx1g -Xms512m".
-    --jars <csv list of extra jars>    Column-separated list of extra jars to put on the CLASSPATH.
-    --enable-gc-logs                   enables gc logs & dumps.
-    --show-classpath                   prints gobblin runtime classpath.
-    --help                             Display this help.
-    --verbose                          Display full command used to start the process.
-                                       Gobblin Version: 0.15.0
+                gobblin-classpath           shows the constructed gobblin classpath
+
+    --conf-dir <gobblin-conf-dir-path>    Gobblon config path. default is '$GOBBLIN_HOME/conf/cli'.
+    --log4j-conf <path-of-log4j-file>     default is '<gobblin-conf-dir-path>/cli/log4j.properties'.
+    --work-dir <gobblin-work-dir>         Gobblin work dir. default is /Users/jsenjaliya/tools/gobblin-dist/gobblin-cluster-data.
+    --job-conf-dir <path-of-log4j-file>   Job configuration dir to pick up the jobs to run. default is /Users/jsenjaliya/tools/gobblin-dist/gobblin-jobs.
+    --jvmopts <jvm or gc options>         JVM or GC parameters for the java process to append to the default params: "-Xmx1g -Xms512m".
+    --jars <csv list of extra jars>       Column-separated list of extra jars to put on the CLASSPATH.
+    --enable-gc-logs                      enables gc logs & dumps.
+    --show-classpath                      prints gobblin runtime classpath.
+    --help                                Display this help.
+    --verbose                             Display full command used to start the process.
 ```
 
 
 Argument details:
-* `--conf-dir`: specifies the path to directory containing gobblin system configuration files, like `application.conf` or `reference.conf`, `log4j.properties` and `quartz.properties`.
+* `--conf-dir`: specifies the path to directory containing gobblin system configuration files, like `application.conf` or `reference.conf`, `log4j.properties` and `quartz.properties`, as this is provided as classpath for config file look up.
 * `--log4j-conf`: specify the path of log4j config file to override the one in config directory (default is `<conf>/<gobblin-mode>/log4j.properties`. Gobblin uses [SLF4J](http://www.slf4j.org/) and the [slf4j-log4j12](http://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12) binding for logging.
-* `--jvmopts`: to specify any JVM parameters, default is `-Xmx1g -Xms512m`.
+* `--work-dir`: The work dir specifies the path at which gobblin will create data required to execute and finish the job. 
+* `--job-conf-dir`: The dir from which Gobblin picks up job configurations and executes it. It is also monitored for any changes to existing job configs or any new job additions. 
+* `--jvmopts`: to specify any JVM parameters to pass while starting Gobblin java process, default is `-Xmx1g -Xms512m`.
 * `--enable-gc-logs`: adds GC options to JVM parameters:  ``` -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+UseCompressedOops -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$GOBBLIN_LOGS/ -Xloggc:$GOBBLIN_LOGS/gobblin-$GOBBLIN_MODE-gc.log ```
 * `--show-classpath`: It prints the full value of the classpath that gobblin uses.
 * all other arguments are sell-explanatory.
@@ -62,17 +66,18 @@ Gobblin Commands
 Gobblin provides following CLI commands:
 
     Available commands:
-        job-state-to-json	        To convert Job state to JSON
-        jobs		                Command line job info and operations
-        passwordManager		        Encrypt or decrypt strings for the password manager.
-        run		                    Run a Gobblin application.
-        decrypt		                Decryption utilities
-        job-store-schema-manager	Database job history store schema manager
-        stateMigration		        Command line tools for migrating state store
-        keystore		            Examine JCE Keystore files
-        config		                Query the config library
-        watermarks		            Inspect streaming watermarks
-        cleaner		                Data retention utility
+        passwordManager             Encrypt or decrypt strings for the password manager.
+        decrypt                     Decryption utilities
+        run                         Run a Gobblin application.
+        config                      Query the config library
+        jobs                        Command line job info and operations
+        stateMigration              Command line tools for migrating state store
+        job-state-to-json           To convert Job state to JSON
+        cleaner                     Data retention utility
+        keystore                    Examine JCE Keystore files
+        watermarks                  Inspect streaming watermarks
+        job-store-schema-manager    Database job history store schema manager
+        gobblin-classpath           shows the constructed gobblin classpath
 
 Details on how to use `run` command: 
  
@@ -141,24 +146,27 @@ Gobblin Service Execution Modes ( as Daemon )
 
 For more info on Gobblin service execution modes, run `bin/gobblin service --help`: 
 ```bash
-Usage:
-gobblin.sh  service <execution-mode> <start|stop|status>
+Usage:              (for Gobblin Version: 0.15.0)
+gobblin.sh  service <execution-mode> <start|stop|restart|status>
 
 Argument Options:
-    <execution-mode>                   standalone, cluster-master, cluster-worker, aws,
-                                                 yarn, mapreduce, service-manager.
-
-    --conf-dir <gobblin-conf-dir-path> Gobblon config path. default is '$GOBBLIN_HOME/conf/<exe-mode-name>'.
-    --log4j-conf <path-of-log4j-file>  default is '<gobblin-conf-dir-path>/<execution-mode>/log4j.properties'.    --jvmopts <jvm or gc options>      String containing JVM flags to include, in addition to "-Xmx1g -Xms512m".
-    --jars <csv list of extra jars>    Column-separated list of extra jars to put on the CLASSPATH.
-    --enable-gc-logs                   enables gc logs & dumps.
-    --show-classpath                   prints gobblin runtime classpath.
-    --cluster-name                     Name of the cluster to be used by helix & other services. ( default: gobblin_cluster).
-    --jt <resource manager URL>        Only for mapreduce mode: Job submission URL, if not set, taken from ${HADOOP_HOME}/conf.
-    --fs <file system URL>             Only for mapreduce mode: Target file system, if not set, taken from ${HADOOP_HOME}/conf.
-    --help                             Display this help.
-    --verbose                          Display full command used to start the process.
-                                       Gobblin Version: 0.15.0
+    <execution-mode>                      standalone cluster-master cluster-worker aws yarn mapreduce gobblin-as-service gobblin-ui.
+
+    --conf-dir <gobblin-conf-dir-path>    Gobblin config path. default is '$GOBBLIN_HOME/conf/<execution-mode>'.
+    --log4j-conf <path-of-log4j-file>     default is '<gobblin-conf-dir-path>/<execution-mode>/log4j.properties'.
+    --work-dir <gobblin-work-dir>         Gobblin work dir. default is /Users/jsenjaliya/tools/gobblin-dist/gobblin-cluster-data.
+    --job-conf-dir <path-of-log4j-file>   Job configuration dir to pick up the jobs to run. default is /Users/jsenjaliya/tools/gobblin-dist/gobblin-jobs.
+    --jvmopts <jvm or gc options>         JVM or GC parameters for the java process to append to the default params: "-Xmx1g -Xms512m".
+    --jars <csv list of extra jars>       Column-separated list of extra jars to put on the CLASSPATH.
+    --enable-gc-logs                      enables gc logs & dumps.
+    --show-classpath                      prints gobblin runtime classpath.
+    --cluster-name                        Name of the cluster to be used by helix & other services. ( default: gobblin_cluster).
+    --jt <resource manager URL>           Only for mapreduce mode: Job submission URL, if not set, taken from ${HADOOP_HOME}/conf.
+    --fs <file system URL>                Only for mapreduce mode: Target file system, if not set, taken from ${HADOOP_HOME}/conf.
+    --job-conf-file <job-conf-file-path>  Only for mapreduce mode: configuration file for the job to run
+    --log-to-stdout                     Outputs to stdout rather than to a log file
+    --help                                Display this help.
+    --verbose                             Display full command used to start the process.
 ```
 
 
@@ -186,7 +194,6 @@ Argument Options:
     
     An important side effect of this is that (depending on the application) non-fully-qualified paths (like `/my/path`) will default to local file system if `HADOOP_HOME` is not set, while they will default to HDFS if the variable is set. When referring to local paths, it is always a good idea to use the fully qualified path (e.g. `file:///my/path`).
     
-
 3. Cluster Mode (master & worker)
     This is a cluster mode consist of master and worker process. 
     ```
@@ -212,6 +219,8 @@ Gobblin System Configurations
 
 Following values can be override by setting it in `gobblin-env.sh`
 
+`GOBBLIN_WORK_DIR` : default is set to $GOBBLIN_HOME/work, but this can be overridable in `gobblin-env.sh` or via command line parameters
+`GOBBLIN_JOB_CONFIG_DIR` : default is set to $GOBBLIN_HOME/jobs, but this can be overridable in `gobblin-env.sh` or via command line parameters
 `GOBBLIN_LOGS` : by default the logs are written to `$GOBBLIN_HOME/logs`, it can be override by setting `GOBBLIN_LOGS`\
 `GOBBLIN_VERSION` : by default gobblin version is set by the build process, it can be override by setting `GOBBLIN_VERSION`\
 
diff --git a/gobblin-docs/user-guide/Gobblin-Schedulers.md b/gobblin-docs/user-guide/Gobblin-Schedulers.md
index 4166164823..003bfbaef7 100644
--- a/gobblin-docs/user-guide/Gobblin-Schedulers.md
+++ b/gobblin-docs/user-guide/Gobblin-Schedulers.md
@@ -12,7 +12,7 @@ Gobblin has a built in Quartz scheduler as part of the [`JobScheduler`](https://
 
 So in order to take advantage of the Quartz scheduler two steps need to be taken:
 
-* Use the `bin/gobblin-standalone.sh` script
+* Use the `bin/gobblin.sh` script to start the gobblin process in standalone mode ex: `bin/gobblin.sh service standalone start `
 * Add the property `job.schedule` to the `.pull` file
     * The value for this property should be a [CRONTrigger](http://quartz-scheduler.org/api/2.2.0/org/quartz/CronTrigger.html)
 
diff --git a/gobblin-docs/user-guide/Gobblin-on-Yarn.md b/gobblin-docs/user-guide/Gobblin-on-Yarn.md
index e3e2b67907..aa317497e0 100644
--- a/gobblin-docs/user-guide/Gobblin-on-Yarn.md
+++ b/gobblin-docs/user-guide/Gobblin-on-Yarn.md
@@ -281,7 +281,7 @@ After Gobblin is successfully built, a tarball named `gobblin-dist-[project-vers
 
 ```
 cd gobblin-dist
-bin/gobblin-yarn.sh
+bin/gobblin.sh service yarn start
 ```
 
 Note that for the above commands to work, the Hadoop/Yarn configuration directory must be on the classpath and the configuration must be pointing to the right Yarn cluster, or specifically the right ResourceManager and NameNode URLs. This is defined like the following in `gobblin-yarn.sh`:
diff --git a/gobblin-kubernetes/gobblin-service/mysql-cluster/gaas-application.conf b/gobblin-kubernetes/gobblin-service/mysql-cluster/gaas-application.conf
index 7c89cbe48e..0c778923a9 100644
--- a/gobblin-kubernetes/gobblin-service/mysql-cluster/gaas-application.conf
+++ b/gobblin-kubernetes/gobblin-service/mysql-cluster/gaas-application.conf
@@ -18,20 +18,21 @@
 # Sample configuration properties for the Gobblin Service
 
 # Topology Catalog and Store
-gobblin.service.work.dir=/tmp/gobblin-as-service
+gobblin.work.dir=/tmp/gobblin-as-service
 
 # TopologySpec Factory
-topologySpec.store.dir=${gobblin.service.work.dir}/topologySpecStore
+topologySpec.store.dir=${gobblin.work.dir}/topologySpecStore
 topologySpecFactory.topologyNames=localGobblinCluster
 topologySpecFactory.localGobblinCluster.description="StandaloneClusterTopology"
 topologySpecFactory.localGobblinCluster.version="1"
 topologySpecFactory.localGobblinCluster.uri="gobblinCluster"
 topologySpecFactory.localGobblinCluster.specExecutorInstance.class="org.apache.gobblin.runtime.spec_executorInstance.LocalFsSpecExecutor"
 topologySpecFactory.localGobblinCluster.specExecInstance.capabilities="source:dest"
-topologySpecFactory.localGobblinCluster.localFsSpecProducer.dir=${gobblin.service.work.dir}/jobs
+topologySpecFactory.localGobblinCluster.gobblin.cluster.localSpecProducer.dir=${gobblin.work.dir}/jobs
+topologySpecFactory.localGobblinCluster.localFsSpecProducer.dir=${gobblin.work.dir}/jobs
 
 # Flow Catalog and Store
-flowSpec.store.dir=${gobblin.service.work.dir}/flowSpecStore
+flowSpec.store.dir=${gobblin.work.dir}/flowSpecStore
 
 # Template Catalog
 gobblin.service.templateCatalogs.fullyQualifiedPath="file://"
@@ -39,15 +40,18 @@ gobblin.service.templateCatalogs.fullyQualifiedPath="file://"
 # JobStatusMonitor
 gobblin.service.jobStatusMonitor.enabled=false
 
+# FsJobStatusRetriever
+fsJobStatusRetriever.state.store.dir=${gobblin.work.dir}/state-store
+
 # JobStatusRetriever
 jobStatusRetriever.class="org.apache.gobblin.service.monitoring.LocalFsJobStatusRetriever"
-localFsJobStatusRetriever.localFsSpecProducer.dir=${gobblin.service.work.dir}/jobs
+localFsJobStatusRetriever.localFsSpecProducer.dir=${gobblin.work.dir}/jobs
 
 # DagManager
 gobblin.service.dagManager.enabled=true
 gobblin.service.dagManager.jobStatusRetriever.class="org.apache.gobblin.service.monitoring.LocalFsJobStatusRetriever"
 gobblin.service.dagManager.dagStateStoreClass="org.apache.gobblin.service.modules.orchestration.FSDagStateStore"
-gobblin.service.dagManager.dagStateStoreDir=${gobblin.service.work.dir}/dagStateStoreDir
+gobblin.service.dagManager.dagStateStoreDir=${gobblin.work.dir}/dagStateStoreDir
 
 # RestLI
 gobblin.service.port=6956

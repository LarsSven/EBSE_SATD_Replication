diff --git a/docs/issue_code_reference.rst b/docs/issue_code_reference.rst
index ef89d1e51d35c..25518ed2feb25 100644
--- a/docs/issue_code_reference.rst
+++ b/docs/issue_code_reference.rst
@@ -37,3 +37,12 @@ Issue 1001
     The database is under an unusual load.
 
 Your query may have timed out because of unusually high load on the database engine. You can make your query simpler, or wait until the database is under less load and try again.
+
+Issue 1002
+""""""""""
+
+.. code-block:: text
+
+    The database returned an unexpected error.
+
+Your query failed because of an error that occurred on the database. This may be due to a syntax error, a bug in your query, or some other internal failure within the database. This is usually not an issue within Superset, but instead a problem with the underlying database that serves your query.
diff --git a/superset-frontend/images/icons/warning.svg b/superset-frontend/images/icons/warning.svg
index 9375f58deda14..118955914f538 100644
--- a/superset-frontend/images/icons/warning.svg
+++ b/superset-frontend/images/icons/warning.svg
@@ -6,9 +6,9 @@
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
- 
+
     http://www.apache.org/licenses/LICENSE-2.0
- 
+
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
@@ -17,6 +17,6 @@
   under the License.
 -->
 <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
-<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2Z" fill="#666666"/>
+<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2Z" fill="currentColor"/>
 <path fill-rule="evenodd" clip-rule="evenodd" d="M11.0003 8C11.0003 7.44772 11.448 7 12.0003 7C12.5526 7 13.0003 7.44772 13.0003 8V12C13.0003 12.5523 12.5526 13 12.0003 13C11.448 13 11.0003 12.5523 11.0003 12V8ZM11.2903 15.29C11.3854 15.199 11.4975 15.1276 11.6203 15.08C11.8637 14.98 12.1368 14.98 12.3803 15.08C12.503 15.1276 12.6152 15.199 12.7103 15.29C12.893 15.4816 12.9966 15.7352 13.0003 16C12.9986 16.3326 12.8317 16.6426 12.555 16.8271C12.2783 17.0116 11.9279 17.0464 11.6203 16.92C11.4991 16.8694 11.3875 16.7983 11.2903 16.71C11.1031 16.5213 10.9987 16.2658 11.0003 16C10.9969 15.8688 11.0243 15.7387 11.0803 15.62C11.1309 15.4988 11.2019 15.3872 11.2903 15.29Z" fill="white"/>
 </svg>
diff --git a/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx b/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx
new file mode 100644
index 0000000000000..6968163aa7b59
--- /dev/null
+++ b/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx
@@ -0,0 +1,91 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+import React from 'react';
+import { t, tn } from '@superset-ui/translation';
+
+import { ErrorMessageComponentProps } from './types';
+import IssueCode from './IssueCode';
+import ErrorAlert from './ErrorAlert';
+
+interface DatabaseErrorExtra {
+  owners?: string[];
+  issue_codes: {
+    code: number;
+    message: string;
+  }[];
+  engine_name: string | null;
+}
+
+function DatabaseErrorMessage({
+  error,
+  source = 'dashboard',
+}: ErrorMessageComponentProps<DatabaseErrorExtra>) {
+  const { extra, level, message } = error;
+
+  const isVisualization = ['dashboard', 'explore'].includes(source);
+
+  const body = (
+    <>
+      <p>
+        {t('This may be triggered by:')}
+        <br />
+        {extra.issue_codes
+          .map<React.ReactNode>(issueCode => <IssueCode {...issueCode} />)
+          .reduce((prev, curr) => [prev, <br />, curr])}
+      </p>
+      {isVisualization && extra.owners && (
+        <>
+          <br />
+          <p>
+            {tn(
+              'Please reach out to the Chart Owner for assistance.',
+              'Please reach out to the Chart Owners for assistance.',
+              extra.owners.length,
+            )}
+          </p>
+          <p>
+            {tn(
+              'Chart Owner: %s',
+              'Chart Owners: %s',
+              extra.owners.length,
+              extra.owners.join(', '),
+            )}
+          </p>
+        </>
+      )}
+    </>
+  );
+
+  const copyText = `${message}
+${t('This may be triggered by:')}
+${extra.issue_codes.map(issueCode => issueCode.message).join('\n')}`;
+
+  return (
+    <ErrorAlert
+      title={t('%s Error', extra.engine_name || t('DB Engine'))}
+      subtitle={message}
+      level={level}
+      source={source}
+      copyText={copyText}
+      body={body}
+    />
+  );
+}
+
+export default DatabaseErrorMessage;
diff --git a/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx b/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx
new file mode 100644
index 0000000000000..8dd832e881e99
--- /dev/null
+++ b/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx
@@ -0,0 +1,200 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+import React, { useState, ReactNode } from 'react';
+import { Modal } from 'react-bootstrap';
+import { styled, supersetTheme } from '@superset-ui/style';
+import { t } from '@superset-ui/translation';
+import { noOp } from 'src/utils/common';
+import Button from 'src/views/CRUD/dataset/Button';
+
+import Icon from '../Icon';
+import { ErrorLevel, ErrorSource } from './types';
+import CopyToClipboard from '../CopyToClipboard';
+
+const ErrorAlertDiv = styled.div<{ level: ErrorLevel }>`
+  align-items: center;
+  background-color: ${({ level, theme }) => theme.colors[level].light2};
+  border-radius: ${({ theme }) => theme.borderRadius}px;
+  border: 1px solid ${({ level, theme }) => theme.colors[level].base};
+  color: ${({ level, theme }) => theme.colors[level].dark2};
+  padding: ${({ theme }) => 2 * theme.gridUnit}px;
+  width: 100%;
+
+  .top-row {
+    display: flex;
+    justify-content: space-between;
+  }
+
+  .error-body {
+    padding-top: ${({ theme }) => theme.gridUnit}px;
+    padding-left: ${({ theme }) => 8 * theme.gridUnit}px;
+  }
+
+  .icon {
+    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;
+  }
+
+  .link {
+    color: ${({ level, theme }) => theme.colors[level].dark2};
+    text-decoration: underline;
+  }
+`;
+
+const ErrorModal = styled(Modal)<{ level: ErrorLevel }>`
+  color: ${({ level, theme }) => theme.colors[level].dark2};
+
+  .icon {
+    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;
+  }
+
+  .header {
+    align-items: center;
+    background-color: ${({ level, theme }) => theme.colors[level].light2};
+    display: flex;
+    justify-content: space-between;
+    font-size: ${({ theme }) => theme.typography.sizes.l}px;
+
+    // Remove clearfix hack as Superset is only used on modern browsers
+    ::before,
+    ::after {
+      content: unset;
+    }
+  }
+`;
+
+const LeftSideContent = styled.div`
+  align-items: center;
+  display: flex;
+`;
+
+interface ErrorAlertProps {
+  body: ReactNode;
+  copyText?: string;
+  level: ErrorLevel;
+  source?: ErrorSource;
+  subtitle: ReactNode;
+  title: ReactNode;
+}
+
+export default function ErrorAlert({
+  body,
+  copyText,
+  level,
+  source = 'dashboard',
+  subtitle,
+  title,
+}: ErrorAlertProps) {
+  const [isModalOpen, setIsModalOpen] = useState(false);
+  const [isBodyExpanded, setIsBodyExpanded] = useState(false);
+
+  const isExpandable = ['explore', 'sqllab'].includes(source);
+
+  return (
+    <ErrorAlertDiv level={level}>
+      <div className="top-row">
+        <LeftSideContent>
+          <Icon
+            className="icon"
+            name={level === 'error' ? 'error' : 'warning'}
+            color={supersetTheme.colors[level].base}
+          />
+          <strong>{title}</strong>
+        </LeftSideContent>
+        {!isExpandable && (
+          <a href="#" className="link" onClick={() => setIsModalOpen(true)}>
+            {t('See More')}
+          </a>
+        )}
+      </div>
+      {isExpandable ? (
+        <div className="error-body">
+          <p>{subtitle}</p>
+          {body && (
+            <>
+              {!isBodyExpanded && (
+                <a
+                  href="#"
+                  className="link"
+                  onClick={() => setIsBodyExpanded(true)}
+                >
+                  {t('See More')}
+                </a>
+              )}
+              {isBodyExpanded && (
+                <>
+                  <br />
+                  {body}
+                  <a
+                    href="#"
+                    className="link"
+                    onClick={() => setIsBodyExpanded(false)}
+                  >
+                    {t('See Less')}
+                  </a>
+                </>
+              )}
+            </>
+          )}
+        </div>
+      ) : (
+        <ErrorModal
+          level={level}
+          show={isModalOpen}
+          onHide={() => setIsModalOpen(false)}
+        >
+          <Modal.Header className="header">
+            <LeftSideContent>
+              <Icon
+                className="icon"
+                name={level === 'error' ? 'error' : 'warning'}
+                color={supersetTheme.colors[level].base}
+              />
+              <div className="title">{title}</div>
+            </LeftSideContent>
+            <span
+              role="button"
+              tabIndex={0}
+              onClick={() => setIsModalOpen(false)}
+            >
+              <Icon name="close" />
+            </span>
+          </Modal.Header>
+          <Modal.Body>
+            <p>{subtitle}</p>
+            <br />
+            {body}
+          </Modal.Body>
+          <Modal.Footer>
+            {copyText && (
+              <CopyToClipboard
+                text={copyText}
+                shouldShowText={false}
+                wrapped={false}
+                copyNode={<Button onClick={noOp}>{t('Copy Message')}</Button>}
+              />
+            )}
+            <Button bsStyle="primary" onClick={() => setIsModalOpen(false)}>
+              {t('Close')}
+            </Button>
+          </Modal.Footer>
+        </ErrorModal>
+      )}
+    </ErrorAlertDiv>
+  );
+}
diff --git a/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx b/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx
index 04befca016843..ab44376e931f8 100644
--- a/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx
+++ b/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx
@@ -16,13 +16,12 @@
  * specific language governing permissions and limitations
  * under the License.
  */
-import React, { useState } from 'react';
-// @ts-ignore
-import { Alert, Collapse } from 'react-bootstrap';
+import React from 'react';
 import { t } from '@superset-ui/translation';
 
 import getErrorMessageComponentRegistry from './getErrorMessageComponentRegistry';
 import { SupersetError, ErrorSource } from './types';
+import ErrorAlert from './ErrorAlert';
 
 type Props = {
   error?: SupersetError;
@@ -39,8 +38,6 @@ export default function ErrorMessageWithStackTrace({
   stackTrace,
   source,
 }: Props) {
-  const [showStackTrace, setShowStackTrace] = useState(false);
-
   // Check if a custom error message component was registered for this message
   if (error) {
     const ErrorMessageComponent = getErrorMessageComponentRegistry().get(
@@ -51,25 +48,26 @@ export default function ErrorMessageWithStackTrace({
     }
   }
 
-  // Fallback to the default error message renderer
   return (
-    <div className={`stack-trace-container${stackTrace ? ' has-trace' : ''}`}>
-      <Alert
-        bsStyle="warning"
-        onClick={() => setShowStackTrace(!showStackTrace)}
-      >
-        {message || t('An error occurred.')}
-        {link && (
-          <a href={link} target="_blank" rel="noopener noreferrer">
-            (Request Access)
-          </a>
-        )}
-      </Alert>
-      {stackTrace && (
-        <Collapse in={showStackTrace}>
-          <pre>{stackTrace}</pre>
-        </Collapse>
-      )}
-    </div>
+    <ErrorAlert
+      level="warning"
+      title={t('Unexpected Error')}
+      subtitle={message}
+      copyText={message}
+      source={source}
+      body={
+        link || stackTrace ? (
+          <>
+            {link && (
+              <a href={link} target="_blank" rel="noopener noreferrer">
+                (Request Access)
+              </a>
+            )}
+            <br />
+            {stackTrace && <pre>{stackTrace}</pre>}
+          </>
+        ) : undefined
+      }
+    />
   );
 }
diff --git a/superset-frontend/src/components/ErrorMessage/TimeoutErrorMessage.tsx b/superset-frontend/src/components/ErrorMessage/TimeoutErrorMessage.tsx
index 029f1e0522c9f..c04d3d28ee141 100644
--- a/superset-frontend/src/components/ErrorMessage/TimeoutErrorMessage.tsx
+++ b/superset-frontend/src/components/ErrorMessage/TimeoutErrorMessage.tsx
@@ -16,73 +16,12 @@
  * specific language governing permissions and limitations
  * under the License.
  */
-import React, { useState } from 'react';
-import { Modal } from 'react-bootstrap';
-import { styled, supersetTheme } from '@superset-ui/style';
+import React from 'react';
 import { t, tn } from '@superset-ui/translation';
 
-import { noOp } from 'src/utils/common';
-import Button from 'src/views/CRUD/dataset/Button';
-import Icon from '../Icon';
 import { ErrorMessageComponentProps } from './types';
-import CopyToClipboard from '../CopyToClipboard';
 import IssueCode from './IssueCode';
-
-const ErrorAlert = styled.div`
-  align-items: center;
-  background-color: ${({ theme }) => theme.colors.error.light2};
-  border-radius: ${({ theme }) => theme.borderRadius}px;
-  border: 1px solid ${({ theme }) => theme.colors.error.base};
-  color: ${({ theme }) => theme.colors.error.dark2};
-  padding: ${({ theme }) => 2 * theme.gridUnit}px;
-  width: 100%;
-
-  .top-row {
-    display: flex;
-    justify-content: space-between;
-  }
-
-  .error-body {
-    padding-top: ${({ theme }) => theme.gridUnit}px;
-    padding-left: ${({ theme }) => 8 * theme.gridUnit}px;
-  }
-
-  .icon {
-    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;
-  }
-
-  .link {
-    color: ${({ theme }) => theme.colors.error.dark2};
-    text-decoration: underline;
-  }
-`;
-
-const ErrorModal = styled(Modal)`
-  color: ${({ theme }) => theme.colors.error.dark2};
-
-  .icon {
-    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;
-  }
-
-  .header {
-    align-items: center;
-    background-color: ${({ theme }) => theme.colors.error.light2};
-    display: flex;
-    justify-content: space-between;
-    font-size: ${({ theme }) => theme.typography.sizes.l}px;
-
-    // Remove clearfix hack as Superset is only used on modern browsers
-    ::before,
-    ::after {
-      content: unset;
-    }
-  }
-`;
-
-const LeftSideContent = styled.div`
-  align-items: center;
-  display: flex;
-`;
+import ErrorAlert from './ErrorAlert';
 
 interface TimeoutErrorExtra {
   issue_codes: {
@@ -97,21 +36,14 @@ function TimeoutErrorMessage({
   error,
   source,
 }: ErrorMessageComponentProps<TimeoutErrorExtra>) {
-  const [isModalOpen, setIsModalOpen] = useState(false);
-  const [isMessageExpanded, setIsMessageExpanded] = useState(false);
-  const { extra } = error;
+  const { extra, level } = error;
 
   const isVisualization = (['dashboard', 'explore'] as (
     | string
     | undefined
   )[]).includes(source);
 
-  const isExpandable = (['explore', 'sqllab'] as (
-    | string
-    | undefined
-  )[]).includes(source);
-
-  const title = isVisualization
+  const subtitle = isVisualization
     ? tn(
         'We’re having trouble loading this visualization. Queries are set to timeout after %s second.',
         'We’re having trouble loading this visualization. Queries are set to timeout after %s seconds.',
@@ -125,7 +57,7 @@ function TimeoutErrorMessage({
         extra.timeout,
       );
 
-  const message = (
+  const body = (
     <>
       <p>
         {t('This may be triggered by:')}
@@ -157,91 +89,19 @@ function TimeoutErrorMessage({
     </>
   );
 
-  const copyText = `${title}
+  const copyText = `${subtitle}
 ${t('This may be triggered by:')}
 ${extra.issue_codes.map(issueCode => issueCode.message).join('\n')}`;
 
   return (
-    <ErrorAlert>
-      <div className="top-row">
-        <LeftSideContent>
-          <Icon
-            className="icon"
-            name="error"
-            color={supersetTheme.colors.error.base}
-          />
-          <strong>{t('Timeout Error')}</strong>
-        </LeftSideContent>
-        {!isExpandable && (
-          <a href="#" className="link" onClick={() => setIsModalOpen(true)}>
-            {t('See More')}
-          </a>
-        )}
-      </div>
-      {isExpandable ? (
-        <div className="error-body">
-          <p>{title}</p>
-          {!isMessageExpanded && (
-            <a
-              href="#"
-              className="link"
-              onClick={() => setIsMessageExpanded(true)}
-            >
-              {t('See More')}
-            </a>
-          )}
-          {isMessageExpanded && (
-            <>
-              <br />
-              {message}
-              <a
-                href="#"
-                className="link"
-                onClick={() => setIsMessageExpanded(false)}
-              >
-                {t('See Less')}
-              </a>
-            </>
-          )}
-        </div>
-      ) : (
-        <ErrorModal show={isModalOpen} onHide={() => setIsModalOpen(false)}>
-          <Modal.Header className="header">
-            <LeftSideContent>
-              <Icon
-                className="icon"
-                name="error"
-                color={supersetTheme.colors.error.base}
-              />
-              <div className="title">{t('Timeout Error')}</div>
-            </LeftSideContent>
-            <span
-              role="button"
-              tabIndex={0}
-              onClick={() => setIsModalOpen(false)}
-            >
-              <Icon name="close" />
-            </span>
-          </Modal.Header>
-          <Modal.Body>
-            <p>{title}</p>
-            <br />
-            {message}
-          </Modal.Body>
-          <Modal.Footer>
-            <CopyToClipboard
-              text={copyText}
-              shouldShowText={false}
-              wrapped={false}
-              copyNode={<Button onClick={noOp}>{t('Copy Message')}</Button>}
-            />
-            <Button bsStyle="primary" onClick={() => setIsModalOpen(false)}>
-              {t('Close')}
-            </Button>
-          </Modal.Footer>
-        </ErrorModal>
-      )}
-    </ErrorAlert>
+    <ErrorAlert
+      title={t('Timeout Error')}
+      subtitle={subtitle}
+      level={level}
+      source={source}
+      copyText={copyText}
+      body={body}
+    />
   );
 }
 
diff --git a/superset-frontend/src/setup/setupErrorMessages.ts b/superset-frontend/src/setup/setupErrorMessages.ts
index 269e7c5735238..29f3940a15ec2 100644
--- a/superset-frontend/src/setup/setupErrorMessages.ts
+++ b/superset-frontend/src/setup/setupErrorMessages.ts
@@ -19,6 +19,7 @@
 import getErrorMessageComponentRegistry from 'src/components/ErrorMessage/getErrorMessageComponentRegistry';
 import { ErrorTypeEnum } from 'src/components/ErrorMessage/types';
 import TimeoutErrorMessage from 'src/components/ErrorMessage/TimeoutErrorMessage';
+import DatabaseErrorMessage from 'src/components/ErrorMessage/DatabaseErrorMessage';
 
 import setupErrorMessagesExtra from './setupErrorMessagesExtra';
 
@@ -33,5 +34,9 @@ export default function setupErrorMessages() {
     ErrorTypeEnum.BACKEND_TIMEOUT_ERROR,
     TimeoutErrorMessage,
   );
+  errorMessageComponentRegistry.registerValue(
+    ErrorTypeEnum.GENERIC_DB_ENGINE_ERROR,
+    DatabaseErrorMessage,
+  );
   setupErrorMessagesExtra();
 }
diff --git a/superset/db_engine_specs/athena.py b/superset/db_engine_specs/athena.py
index eaf76e858d247..91e1069ff68b2 100644
--- a/superset/db_engine_specs/athena.py
+++ b/superset/db_engine_specs/athena.py
@@ -23,6 +23,7 @@
 
 class AthenaEngineSpec(BaseEngineSpec):
     engine = "awsathena"
+    engine_name = "Amazon Athena"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/base.py b/superset/db_engine_specs/base.py
index 881599015afac..fdaee05cca986 100644
--- a/superset/db_engine_specs/base.py
+++ b/superset/db_engine_specs/base.py
@@ -137,6 +137,9 @@ class BaseEngineSpec:  # pylint: disable=too-many-public-methods
     """Abstract class for database engine specific configurations"""
 
     engine = "base"  # str as defined in sqlalchemy.engine.engine
+    engine_name: Optional[
+        str
+    ] = None  # used for user messages, overridden in child classes
     _date_trunc_functions: Dict[str, str] = {}
     _time_grain_expressions: Dict[Optional[str], str] = {}
     time_groupby_inline = False
@@ -572,7 +575,7 @@ def extract_error_message(cls, ex: Exception) -> str:
         return f"{cls.engine} error: {cls._extract_error_message(ex)}"
 
     @classmethod
-    def _extract_error_message(cls, ex: Exception) -> Optional[str]:
+    def _extract_error_message(cls, ex: Exception) -> str:
         """Extract error message for queries"""
         return utils.error_msg_from_exception(ex)
 
@@ -582,9 +585,9 @@ def extract_errors(cls, ex: Exception) -> List[Dict[str, Any]]:
             dataclasses.asdict(
                 SupersetError(
                     error_type=SupersetErrorType.GENERIC_DB_ENGINE_ERROR,
-                    message=cls.extract_error_message(ex),
+                    message=cls._extract_error_message(ex),
                     level=ErrorLevel.ERROR,
-                    extra={"engine": cls.engine},
+                    extra={"engine_name": cls.engine_name},
                 )
             )
         ]
diff --git a/superset/db_engine_specs/bigquery.py b/superset/db_engine_specs/bigquery.py
index f45145f3bd178..ea33531b42934 100644
--- a/superset/db_engine_specs/bigquery.py
+++ b/superset/db_engine_specs/bigquery.py
@@ -37,6 +37,7 @@ class BigQueryEngineSpec(BaseEngineSpec):
     As contributed by @mxmzdlv on issue #945"""
 
     engine = "bigquery"
+    engine_name = "Google BigQuery"
     max_column_name_length = 128
 
     """
diff --git a/superset/db_engine_specs/clickhouse.py b/superset/db_engine_specs/clickhouse.py
index f02ef51abad01..658aef01f2199 100644
--- a/superset/db_engine_specs/clickhouse.py
+++ b/superset/db_engine_specs/clickhouse.py
@@ -25,6 +25,7 @@ class ClickHouseEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     """Dialect for ClickHouse analytical DB."""
 
     engine = "clickhouse"
+    engine_name = "ClickHouse"
 
     time_secondary_columns = True
     time_groupby_inline = True
diff --git a/superset/db_engine_specs/cockroachdb.py b/superset/db_engine_specs/cockroachdb.py
index 09fa98d587a0d..f2f00c1a04784 100644
--- a/superset/db_engine_specs/cockroachdb.py
+++ b/superset/db_engine_specs/cockroachdb.py
@@ -19,3 +19,4 @@
 
 class CockroachDbEngineSpec(PostgresEngineSpec):
     engine = "cockroachdb"
+    engine_name = "CockroachDB"
diff --git a/superset/db_engine_specs/db2.py b/superset/db_engine_specs/db2.py
index 4087d218647d1..ba03366de412e 100644
--- a/superset/db_engine_specs/db2.py
+++ b/superset/db_engine_specs/db2.py
@@ -19,6 +19,7 @@
 
 class Db2EngineSpec(BaseEngineSpec):
     engine = "ibm_db_sa"
+    engine_name = "IBM Db2"
     limit_method = LimitMethod.WRAP_SQL
     force_column_alias_quotes = True
     max_column_name_length = 30
diff --git a/superset/db_engine_specs/dremio.py b/superset/db_engine_specs/dremio.py
index 33f027d3d1e5f..4a11424247cd4 100644
--- a/superset/db_engine_specs/dremio.py
+++ b/superset/db_engine_specs/dremio.py
@@ -20,6 +20,7 @@
 class DremioBaseEngineSpec(BaseEngineSpec):
 
     engine = "dremio"
+    engine_name = "Dremio"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/drill.py b/superset/db_engine_specs/drill.py
index b1b0ceaf68418..7406d654cbe9f 100644
--- a/superset/db_engine_specs/drill.py
+++ b/superset/db_engine_specs/drill.py
@@ -28,6 +28,7 @@ class DrillEngineSpec(BaseEngineSpec):
     """Engine spec for Apache Drill"""
 
     engine = "drill"
+    engine_name = "Apache Drill"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/druid.py b/superset/db_engine_specs/druid.py
index 5a81ea9dac64f..f941fd1bad7b0 100644
--- a/superset/db_engine_specs/druid.py
+++ b/superset/db_engine_specs/druid.py
@@ -35,6 +35,7 @@ class DruidEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     """Engine spec for Druid.io"""
 
     engine = "druid"
+    engine_name = "Apache Druid"
     allows_joins = False
     allows_subqueries = True
 
diff --git a/superset/db_engine_specs/elasticsearch.py b/superset/db_engine_specs/elasticsearch.py
index f1cc561b0afb8..4f6067710f671 100644
--- a/superset/db_engine_specs/elasticsearch.py
+++ b/superset/db_engine_specs/elasticsearch.py
@@ -23,6 +23,7 @@
 
 class ElasticSearchEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     engine = "elasticsearch"
+    engine_name = "ElasticSearch"
     time_groupby_inline = True
     time_secondary_columns = True
     allows_joins = False
diff --git a/superset/db_engine_specs/exasol.py b/superset/db_engine_specs/exasol.py
index 23449f0f88d4a..a485be5423640 100644
--- a/superset/db_engine_specs/exasol.py
+++ b/superset/db_engine_specs/exasol.py
@@ -23,6 +23,7 @@ class ExasolEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     """Engine spec for Exasol"""
 
     engine = "exa"
+    engine_name = "Exasol"
     max_column_name_length = 128
 
     # Exasol's DATE_TRUNC function is PostgresSQL compatible
diff --git a/superset/db_engine_specs/gsheets.py b/superset/db_engine_specs/gsheets.py
index 698728e098ffe..308bc560a4fca 100644
--- a/superset/db_engine_specs/gsheets.py
+++ b/superset/db_engine_specs/gsheets.py
@@ -21,5 +21,6 @@ class GSheetsEngineSpec(SqliteEngineSpec):
     """Engine for Google spreadsheets"""
 
     engine = "gsheets"
+    engine_name = "Google Sheets"
     allows_joins = False
     allows_subqueries = False
diff --git a/superset/db_engine_specs/hana.py b/superset/db_engine_specs/hana.py
index 2514194f4f4c2..c4b157a624904 100644
--- a/superset/db_engine_specs/hana.py
+++ b/superset/db_engine_specs/hana.py
@@ -24,6 +24,7 @@
 
 class HanaEngineSpec(PostgresBaseEngineSpec):
     engine = "hana"
+    engine_name = "SAP HANA"
     limit_method = LimitMethod.WRAP_SQL
     force_column_alias_quotes = True
     max_column_name_length = 30
diff --git a/superset/db_engine_specs/hive.py b/superset/db_engine_specs/hive.py
index 4cafaaf2b20e0..baf94c69a049a 100644
--- a/superset/db_engine_specs/hive.py
+++ b/superset/db_engine_specs/hive.py
@@ -55,6 +55,7 @@ class HiveEngineSpec(PrestoEngineSpec):
     """Reuses PrestoEngineSpec functionality."""
 
     engine = "hive"
+    engine_name = "Apache Hive"
     max_column_name_length = 767
     # pylint: disable=line-too-long
     _time_grain_expressions = {
diff --git a/superset/db_engine_specs/impala.py b/superset/db_engine_specs/impala.py
index c0c4f0743034b..9d8dc91374f4e 100644
--- a/superset/db_engine_specs/impala.py
+++ b/superset/db_engine_specs/impala.py
@@ -27,6 +27,7 @@ class ImpalaEngineSpec(BaseEngineSpec):
     """Engine spec for Cloudera's Impala"""
 
     engine = "impala"
+    engine_name = "Apache Impala"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/kylin.py b/superset/db_engine_specs/kylin.py
index 9f828d11d6564..4a64091d155db 100644
--- a/superset/db_engine_specs/kylin.py
+++ b/superset/db_engine_specs/kylin.py
@@ -25,6 +25,7 @@ class KylinEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     """Dialect for Apache Kylin"""
 
     engine = "kylin"
+    engine_name = "Apache Kylin"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/mssql.py b/superset/db_engine_specs/mssql.py
index a8a6b9a868864..abe1f6c2a2b57 100644
--- a/superset/db_engine_specs/mssql.py
+++ b/superset/db_engine_specs/mssql.py
@@ -32,6 +32,7 @@
 
 class MssqlEngineSpec(BaseEngineSpec):
     engine = "mssql"
+    engine_name = "Microsoft SQL"
     limit_method = LimitMethod.WRAP_SQL
     max_column_name_length = 128
 
diff --git a/superset/db_engine_specs/mysql.py b/superset/db_engine_specs/mysql.py
index 7d750d3aae48e..4d57c3807618a 100644
--- a/superset/db_engine_specs/mysql.py
+++ b/superset/db_engine_specs/mysql.py
@@ -26,6 +26,7 @@
 
 class MySQLEngineSpec(BaseEngineSpec):
     engine = "mysql"
+    engine_name = "MySQL"
     max_column_name_length = 64
 
     _time_grain_expressions = {
diff --git a/superset/db_engine_specs/oracle.py b/superset/db_engine_specs/oracle.py
index 813b1507a6465..24ebdb00d4f38 100644
--- a/superset/db_engine_specs/oracle.py
+++ b/superset/db_engine_specs/oracle.py
@@ -23,6 +23,7 @@
 
 class OracleEngineSpec(BaseEngineSpec):
     engine = "oracle"
+    engine_name = "Oracle"
     limit_method = LimitMethod.WRAP_SQL
     force_column_alias_quotes = True
     max_column_name_length = 30
diff --git a/superset/db_engine_specs/pinot.py b/superset/db_engine_specs/pinot.py
index 853d756e340fb..d79a6947adefe 100644
--- a/superset/db_engine_specs/pinot.py
+++ b/superset/db_engine_specs/pinot.py
@@ -24,6 +24,7 @@
 
 class PinotEngineSpec(BaseEngineSpec):  # pylint: disable=abstract-method
     engine = "pinot"
+    engine_name = "Apache Pinot"
     allows_subqueries = False
     allows_joins = False
     allows_column_aliases = False
diff --git a/superset/db_engine_specs/postgres.py b/superset/db_engine_specs/postgres.py
index dceac26b1cf22..0ccf51dba077f 100644
--- a/superset/db_engine_specs/postgres.py
+++ b/superset/db_engine_specs/postgres.py
@@ -38,6 +38,7 @@ class PostgresBaseEngineSpec(BaseEngineSpec):
     """ Abstract class for Postgres 'like' databases """
 
     engine = ""
+    engine_name = "PostgreSQL"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/presto.py b/superset/db_engine_specs/presto.py
index ebf8ec4833260..4cb814afd6a89 100644
--- a/superset/db_engine_specs/presto.py
+++ b/superset/db_engine_specs/presto.py
@@ -27,6 +27,7 @@
 
 import pandas as pd
 import simplejson as json
+from flask_babel import lazy_gettext as _
 from sqlalchemy import Column, literal_column
 from sqlalchemy.engine.base import Engine
 from sqlalchemy.engine.reflection import Inspector
@@ -103,6 +104,7 @@ def get_children(column: Dict[str, str]) -> List[Dict[str, str]]:
 
 class PrestoEngineSpec(BaseEngineSpec):
     engine = "presto"
+    engine_name = "Presto"
 
     _time_grain_expressions = {
         None: "{col}",
@@ -773,7 +775,7 @@ def handle_cursor(cls, cursor: Any, query: Query, session: Session) -> None:
             polled = cursor.poll()
 
     @classmethod
-    def _extract_error_message(cls, ex: Exception) -> Optional[str]:
+    def _extract_error_message(cls, ex: Exception) -> str:
         if (
             hasattr(ex, "orig")
             and type(ex.orig).__name__ == "DatabaseError"  # type: ignore
@@ -787,7 +789,7 @@ def _extract_error_message(cls, ex: Exception) -> Optional[str]:
             )
         if type(ex).__name__ == "DatabaseError" and hasattr(ex, "args") and ex.args:
             error_dict = ex.args[0]
-            return error_dict.get("message")
+            return error_dict.get("message", _("Unknown Presto Error"))
         return utils.error_msg_from_exception(ex)
 
     @classmethod
diff --git a/superset/db_engine_specs/redshift.py b/superset/db_engine_specs/redshift.py
index 5c9f4bc467622..ef7b0e29a3eee 100644
--- a/superset/db_engine_specs/redshift.py
+++ b/superset/db_engine_specs/redshift.py
@@ -19,6 +19,7 @@
 
 class RedshiftEngineSpec(PostgresBaseEngineSpec):
     engine = "redshift"
+    engine_name = "Amazon Redshift"
     max_column_name_length = 127
 
     @staticmethod
diff --git a/superset/db_engine_specs/snowflake.py b/superset/db_engine_specs/snowflake.py
index 8b78b52487bd6..e7282b8847fed 100644
--- a/superset/db_engine_specs/snowflake.py
+++ b/superset/db_engine_specs/snowflake.py
@@ -30,6 +30,7 @@
 
 class SnowflakeEngineSpec(PostgresBaseEngineSpec):
     engine = "snowflake"
+    engine_name = "Snowflake"
     force_column_alias_quotes = True
     max_column_name_length = 256
 
diff --git a/superset/db_engine_specs/sqlite.py b/superset/db_engine_specs/sqlite.py
index 72f1f3187125b..c14b8b937a5a6 100644
--- a/superset/db_engine_specs/sqlite.py
+++ b/superset/db_engine_specs/sqlite.py
@@ -29,6 +29,7 @@
 
 class SqliteEngineSpec(BaseEngineSpec):
     engine = "sqlite"
+    engine_name = "SQLite"
 
     _time_grain_expressions = {
         None: "{col}",
diff --git a/superset/db_engine_specs/teradata.py b/superset/db_engine_specs/teradata.py
index 0226baef62ee4..88bffa5a0752e 100644
--- a/superset/db_engine_specs/teradata.py
+++ b/superset/db_engine_specs/teradata.py
@@ -21,6 +21,7 @@ class TeradataEngineSpec(BaseEngineSpec):
     """Dialect for Teradata DB."""
 
     engine = "teradata"
+    engine_name = "Teradata"
     limit_method = LimitMethod.WRAP_SQL
     max_column_name_length = 30  # since 14.10 this is 128
 
diff --git a/superset/db_engine_specs/vertica.py b/superset/db_engine_specs/vertica.py
index e5f8901220984..5f3d99c6c5414 100644
--- a/superset/db_engine_specs/vertica.py
+++ b/superset/db_engine_specs/vertica.py
@@ -19,3 +19,4 @@
 
 class VerticaEngineSpec(PostgresBaseEngineSpec):
     engine = "vertica"
+    engine_name = "Vertica"
diff --git a/superset/errors.py b/superset/errors.py
index f2fda00bb8637..08a8cd80a349a 100644
--- a/superset/errors.py
+++ b/superset/errors.py
@@ -61,7 +61,13 @@ class SupersetErrorType(str, Enum):
             "code": 1001,
             "message": _("Issue 1001 - The database is under an unusual load."),
         },
-    ]
+    ],
+    SupersetErrorType.GENERIC_DB_ENGINE_ERROR: [
+        {
+            "code": 1002,
+            "message": _("Issue 1002 - The database returned an unexpected error."),
+        }
+    ],
 }
 
 

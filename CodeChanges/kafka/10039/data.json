{
  "url": "https://api.github.com/repos/apache/kafka/pulls/10039",
  "id": 566985565,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NTY2OTg1NTY1",
  "html_url": "https://github.com/apache/kafka/pull/10039",
  "diff_url": "https://github.com/apache/kafka/pull/10039.diff",
  "patch_url": "https://github.com/apache/kafka/pull/10039.patch",
  "issue_url": "https://api.github.com/repos/apache/kafka/issues/10039",
  "number": 10039,
  "state": "closed",
  "locked": false,
  "title": "MINOR: Defer log recovery until LogManager startup",
  "user": {
    "login": "rondagostino",
    "id": 6076159,
    "node_id": "MDQ6VXNlcjYwNzYxNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6076159?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rondagostino",
    "html_url": "https://github.com/rondagostino",
    "followers_url": "https://api.github.com/users/rondagostino/followers",
    "following_url": "https://api.github.com/users/rondagostino/following{/other_user}",
    "gists_url": "https://api.github.com/users/rondagostino/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rondagostino/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rondagostino/subscriptions",
    "organizations_url": "https://api.github.com/users/rondagostino/orgs",
    "repos_url": "https://api.github.com/users/rondagostino/repos",
    "events_url": "https://api.github.com/users/rondagostino/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rondagostino/received_events",
    "type": "User",
    "site_admin": false
  },
  "body": "Currently log recovery begins as soon as we instantiate `LogManager`, but when using a Raft-based metadata quorum we won't have configs until after we catch up on the metadata log.  We therefore defer log recovery until we actually invoke `startup()` on the `LogManager` instance.  This timing difference has no effect when using ZooKeeper because we immediately invoke `startup()` on the instantiated instance, but it gives us the necessary flexibility for accurate log recovery with updated configs when using a Raft-based metadata quorum.\r\n\r\nThe `LogCleaner` is currently instantiated during construction just after log recovery completes, and then it is started in `startup()`.  As an extra precaution, since we are no longer performing recovery during construction, we both instantiate and start the log cleaner in `startup()` after log recovery completes.\r\n\r\nWe also convert `LogManager` to use a `ConfigRepository` to load topic configs (which can override the default log configs) instead of having a hard-coded dependency on ZooKeeper.  We retrieve the topic configs when we invoke `startup()` -- which again is effectively no different from a timing perspective than what we do today for the ZooKeeper case.\r\n\r\nOne subtlety is that currently we create the log configs for every topic at this point -- if a topic has no config overrides then we associate a copy of the default configuration with the topic inside a map, and we retrieve the log configs for that topic's partitions from from that map during recovery.  This PR makes a change to this series of events as follows.  We do not associate a copy of the the default configuration with a topic in the map if the topic has no configs set when we query for them.  This saves some memory -- we don't unnecessarily copy the default config many times -- but it also means we have use the default log configs for that topic later on when recovery for each of its partitions begins.\r\n\r\nThe difference is that the default configs are dynamically reconfigurable, and they could potentially change between the time when we invoke `startup()` and when log recovery begins (log recovery can begin quite some time after `startup()` is invoked if shutdown was unclean).  Prior to this patch such a change would not be used; with this patch they could be if they happen before recovery begins.  This actually is better -- we are performing log recovery with the most recent known defaults when a topic had no overrides at all. Also, `Partition.createLog` has logic to handle missed config updates, so the behavior is eventually the same.\r\n\r\nThe transition of the broker state from `STARTING` to `RECOVERY` currently happens within the `LogManager`, and it only occurs if the shutdown was unclean.  We move this transition into the broker as it avoids passing a reference to the broker state into the `LogManager`.  We also now always transition the broker into the `RECOVERY` state as dictated by [the KIP-631 broker state machine](https://cwiki.apache.org/confluence/display/KAFKA/KIP-631%3A+The+Quorum-based+Kafka+Controller#KIP631:TheQuorumbasedKafkaController-TheBrokerStateMachine).\r\n\r\nFinally, a few clean-ups were included. One worth highlighting is that `Partition` no longer requires a `ConfigRepository`.\r\n\r\n### Committer Checklist (excluded from commit message)\r\n- [ ] Verify design and implementation \r\n- [ ] Verify test coverage and CI build status\r\n- [ ] Verify documentation (including upgrade notes)\r\n",
  "created_at": "2021-02-03T16:53:43Z",
  "updated_at": "2021-02-08T14:53:03Z",
  "closed_at": "2021-02-07T23:46:41Z",
  "merged_at": "2021-02-07T23:46:41Z",
  "merge_commit_sha": "42a9355e606bd2bbdb7fd0dd348805e6666dc189",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [],
  "requested_teams": [],
  "labels": [
    {
      "id": 2650268685,
      "node_id": "MDU6TGFiZWwyNjUwMjY4Njg1",
      "url": "https://api.github.com/repos/apache/kafka/labels/kip-500",
      "name": "kip-500",
      "color": "0DE98F",
      "default": false,
      "description": ""
    }
  ],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/apache/kafka/pulls/10039/commits",
  "review_comments_url": "https://api.github.com/repos/apache/kafka/pulls/10039/comments",
  "review_comment_url": "https://api.github.com/repos/apache/kafka/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/apache/kafka/issues/10039/comments",
  "statuses_url": "https://api.github.com/repos/apache/kafka/statuses/04e389af96f21b7490c80ee16fab6853fb2b5172",
  "head": {
    "label": "rondagostino:kip500_LogManager",
    "ref": "kip500_LogManager",
    "sha": "04e389af96f21b7490c80ee16fab6853fb2b5172",
    "user": {
      "login": "rondagostino",
      "id": 6076159,
      "node_id": "MDQ6VXNlcjYwNzYxNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6076159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rondagostino",
      "html_url": "https://github.com/rondagostino",
      "followers_url": "https://api.github.com/users/rondagostino/followers",
      "following_url": "https://api.github.com/users/rondagostino/following{/other_user}",
      "gists_url": "https://api.github.com/users/rondagostino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rondagostino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rondagostino/subscriptions",
      "organizations_url": "https://api.github.com/users/rondagostino/orgs",
      "repos_url": "https://api.github.com/users/rondagostino/repos",
      "events_url": "https://api.github.com/users/rondagostino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rondagostino/received_events",
      "type": "User",
      "site_admin": false
    },
    "repo": {
      "id": 117853091,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMTc4NTMwOTE=",
      "name": "kafka",
      "full_name": "rondagostino/kafka",
      "private": false,
      "owner": {
        "login": "rondagostino",
        "id": 6076159,
        "node_id": "MDQ6VXNlcjYwNzYxNTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6076159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rondagostino",
        "html_url": "https://github.com/rondagostino",
        "followers_url": "https://api.github.com/users/rondagostino/followers",
        "following_url": "https://api.github.com/users/rondagostino/following{/other_user}",
        "gists_url": "https://api.github.com/users/rondagostino/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rondagostino/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rondagostino/subscriptions",
        "organizations_url": "https://api.github.com/users/rondagostino/orgs",
        "repos_url": "https://api.github.com/users/rondagostino/repos",
        "events_url": "https://api.github.com/users/rondagostino/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rondagostino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/rondagostino/kafka",
      "description": "Mirror of Apache Kafka",
      "fork": true,
      "url": "https://api.github.com/repos/rondagostino/kafka",
      "forks_url": "https://api.github.com/repos/rondagostino/kafka/forks",
      "keys_url": "https://api.github.com/repos/rondagostino/kafka/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/rondagostino/kafka/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/rondagostino/kafka/teams",
      "hooks_url": "https://api.github.com/repos/rondagostino/kafka/hooks",
      "issue_events_url": "https://api.github.com/repos/rondagostino/kafka/issues/events{/number}",
      "events_url": "https://api.github.com/repos/rondagostino/kafka/events",
      "assignees_url": "https://api.github.com/repos/rondagostino/kafka/assignees{/user}",
      "branches_url": "https://api.github.com/repos/rondagostino/kafka/branches{/branch}",
      "tags_url": "https://api.github.com/repos/rondagostino/kafka/tags",
      "blobs_url": "https://api.github.com/repos/rondagostino/kafka/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/rondagostino/kafka/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/rondagostino/kafka/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/rondagostino/kafka/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/rondagostino/kafka/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/rondagostino/kafka/languages",
      "stargazers_url": "https://api.github.com/repos/rondagostino/kafka/stargazers",
      "contributors_url": "https://api.github.com/repos/rondagostino/kafka/contributors",
      "subscribers_url": "https://api.github.com/repos/rondagostino/kafka/subscribers",
      "subscription_url": "https://api.github.com/repos/rondagostino/kafka/subscription",
      "commits_url": "https://api.github.com/repos/rondagostino/kafka/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/rondagostino/kafka/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/rondagostino/kafka/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/rondagostino/kafka/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/rondagostino/kafka/contents/{+path}",
      "compare_url": "https://api.github.com/repos/rondagostino/kafka/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/rondagostino/kafka/merges",
      "archive_url": "https://api.github.com/repos/rondagostino/kafka/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/rondagostino/kafka/downloads",
      "issues_url": "https://api.github.com/repos/rondagostino/kafka/issues{/number}",
      "pulls_url": "https://api.github.com/repos/rondagostino/kafka/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/rondagostino/kafka/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/rondagostino/kafka/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/rondagostino/kafka/labels{/name}",
      "releases_url": "https://api.github.com/repos/rondagostino/kafka/releases{/id}",
      "deployments_url": "https://api.github.com/repos/rondagostino/kafka/deployments",
      "created_at": "2018-01-17T15:15:29Z",
      "updated_at": "2021-12-14T19:52:41Z",
      "pushed_at": "2022-12-09T18:23:44Z",
      "git_url": "git://github.com/rondagostino/kafka.git",
      "ssh_url": "git@github.com:rondagostino/kafka.git",
      "clone_url": "https://github.com/rondagostino/kafka.git",
      "svn_url": "https://github.com/rondagostino/kafka",
      "homepage": null,
      "size": 140740,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Java",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": false,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "apache-2.0",
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "url": "https://api.github.com/licenses/apache-2.0",
        "node_id": "MDc6TGljZW5zZTI="
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "trunk"
    }
  },
  "base": {
    "label": "apache:trunk",
    "ref": "trunk",
    "sha": "c4ea6fb0a7cce5cf54e8ddd32bb14e99e639b8df",
    "user": {
      "login": "apache",
      "id": 47359,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apache",
      "html_url": "https://github.com/apache",
      "followers_url": "https://api.github.com/users/apache/followers",
      "following_url": "https://api.github.com/users/apache/following{/other_user}",
      "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
      "organizations_url": "https://api.github.com/users/apache/orgs",
      "repos_url": "https://api.github.com/users/apache/repos",
      "events_url": "https://api.github.com/users/apache/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apache/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "repo": {
      "id": 2211243,
      "node_id": "MDEwOlJlcG9zaXRvcnkyMjExMjQz",
      "name": "kafka",
      "full_name": "apache/kafka",
      "private": false,
      "owner": {
        "login": "apache",
        "id": 47359,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/47359?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apache",
        "html_url": "https://github.com/apache",
        "followers_url": "https://api.github.com/users/apache/followers",
        "following_url": "https://api.github.com/users/apache/following{/other_user}",
        "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
        "organizations_url": "https://api.github.com/users/apache/orgs",
        "repos_url": "https://api.github.com/users/apache/repos",
        "events_url": "https://api.github.com/users/apache/events{/privacy}",
        "received_events_url": "https://api.github.com/users/apache/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "html_url": "https://github.com/apache/kafka",
      "description": "Mirror of Apache Kafka",
      "fork": false,
      "url": "https://api.github.com/repos/apache/kafka",
      "forks_url": "https://api.github.com/repos/apache/kafka/forks",
      "keys_url": "https://api.github.com/repos/apache/kafka/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/apache/kafka/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/apache/kafka/teams",
      "hooks_url": "https://api.github.com/repos/apache/kafka/hooks",
      "issue_events_url": "https://api.github.com/repos/apache/kafka/issues/events{/number}",
      "events_url": "https://api.github.com/repos/apache/kafka/events",
      "assignees_url": "https://api.github.com/repos/apache/kafka/assignees{/user}",
      "branches_url": "https://api.github.com/repos/apache/kafka/branches{/branch}",
      "tags_url": "https://api.github.com/repos/apache/kafka/tags",
      "blobs_url": "https://api.github.com/repos/apache/kafka/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/apache/kafka/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/apache/kafka/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/apache/kafka/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/apache/kafka/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/apache/kafka/languages",
      "stargazers_url": "https://api.github.com/repos/apache/kafka/stargazers",
      "contributors_url": "https://api.github.com/repos/apache/kafka/contributors",
      "subscribers_url": "https://api.github.com/repos/apache/kafka/subscribers",
      "subscription_url": "https://api.github.com/repos/apache/kafka/subscription",
      "commits_url": "https://api.github.com/repos/apache/kafka/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/apache/kafka/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/apache/kafka/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/apache/kafka/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/apache/kafka/contents/{+path}",
      "compare_url": "https://api.github.com/repos/apache/kafka/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/apache/kafka/merges",
      "archive_url": "https://api.github.com/repos/apache/kafka/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/apache/kafka/downloads",
      "issues_url": "https://api.github.com/repos/apache/kafka/issues{/number}",
      "pulls_url": "https://api.github.com/repos/apache/kafka/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/apache/kafka/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/apache/kafka/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/apache/kafka/labels{/name}",
      "releases_url": "https://api.github.com/repos/apache/kafka/releases{/id}",
      "deployments_url": "https://api.github.com/repos/apache/kafka/deployments",
      "created_at": "2011-08-15T18:06:16Z",
      "updated_at": "2022-12-26T18:52:43Z",
      "pushed_at": "2022-12-26T09:06:09Z",
      "git_url": "git://github.com/apache/kafka.git",
      "ssh_url": "git@github.com:apache/kafka.git",
      "clone_url": "https://github.com/apache/kafka.git",
      "svn_url": "https://github.com/apache/kafka",
      "homepage": null,
      "size": 150940,
      "stargazers_count": 23789,
      "watchers_count": 23789,
      "language": "Java",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": false,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 12170,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1012,
      "license": {
        "key": "apache-2.0",
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "url": "https://api.github.com/licenses/apache-2.0",
        "node_id": "MDc6TGljZW5zZTI="
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "kafka",
        "scala"
      ],
      "visibility": "public",
      "forks": 12170,
      "open_issues": 1012,
      "watchers": 23789,
      "default_branch": "trunk"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/apache/kafka/pulls/10039"
    },
    "html": {
      "href": "https://github.com/apache/kafka/pull/10039"
    },
    "issue": {
      "href": "https://api.github.com/repos/apache/kafka/issues/10039"
    },
    "comments": {
      "href": "https://api.github.com/repos/apache/kafka/issues/10039/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/apache/kafka/pulls/10039/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/apache/kafka/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/apache/kafka/pulls/10039/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/apache/kafka/statuses/04e389af96f21b7490c80ee16fab6853fb2b5172"
    }
  },
  "author_association": "CONTRIBUTOR",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": true,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": {
    "login": "ijuma",
    "id": 24747,
    "node_id": "MDQ6VXNlcjI0NzQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/24747?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ijuma",
    "html_url": "https://github.com/ijuma",
    "followers_url": "https://api.github.com/users/ijuma/followers",
    "following_url": "https://api.github.com/users/ijuma/following{/other_user}",
    "gists_url": "https://api.github.com/users/ijuma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ijuma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ijuma/subscriptions",
    "organizations_url": "https://api.github.com/users/ijuma/orgs",
    "repos_url": "https://api.github.com/users/ijuma/repos",
    "events_url": "https://api.github.com/users/ijuma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ijuma/received_events",
    "type": "User",
    "site_admin": false
  },
  "comments": 4,
  "review_comments": 16,
  "maintainer_can_modify": false,
  "commits": 11,
  "additions": 245,
  "deletions": 242,
  "changed_files": 19
}
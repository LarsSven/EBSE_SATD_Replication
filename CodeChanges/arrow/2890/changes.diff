diff --git a/go/README.md b/go/README.md
index 230caee0a448..f35e0747ca96 100644
--- a/go/README.md
+++ b/go/README.md
@@ -22,46 +22,55 @@ Apache Arrow for Go
 
 [![GoDoc](https://godoc.org/github.com/apache/arrow/go/arrow?status.svg)](https://godoc.org/github.com/apache/arrow/go/arrow)
 
-[Apache Arrow][arrow] is a cross-language development platform for in-memory data. It specifies a 
-standardized language-independent columnar memory format for flat and hierarchical data, 
-organized for efficient analytic operations on modern hardware. It also provides computational 
-libraries and zero-copy streaming messaging and inter-process communication.
+[Apache Arrow][arrow] is a cross-language development platform for in-memory
+data. It specifies a standardized language-independent columnar memory format
+for flat and hierarchical data, organized for efficient analytic operations on
+modern hardware. It also provides computational libraries and zero-copy
+streaming messaging and inter-process communication.
 
 
 Reference Counting
 ------------------
 
-arrow makes use of reference counting so that it can track when memory buffers are no longer used. This allows 
-arrow to update resource accounting, pool memory such and track overall memory usage as objects are created 
-and released. Types expose two methods to deal with this pattern. The `Retain` method will increase the 
-reference count by 1 and `Release` method will reduce the count by 1. Once the reference count of an object 
-is zero, any associated object will be freed. `Retain` and `Release` are safe to call from multiple goroutines.
+The library makes use of reference counting so that it can track when memory
+buffers are no longer used. This allows Arrow to update resource accounting,
+pool memory such and track overall memory usage as objects are created and
+released. Types expose two methods to deal with this pattern. The `Retain`
+method will increase the reference count by 1 and `Release` method will reduce
+the count by 1. Once the reference count of an object is zero, any associated
+object will be freed. `Retain` and `Release` are safe to call from multiple
+goroutines.
 
 ### When to call `Retain` / `Release`?
 
-* If you are passed an object and wish to take ownership of it, you must call `Retain`. You must later pair this 
-  with a call to `Release` when you no longer need the object.  "Taking ownership" typically means you
-  wish to access the object outside the scope of the current function call.
-  
-* You own any object you create via functions whose name begins with `New` or `Copy` or when receiving
-  an object over a channel. Therefore you must call `Release` once you no longer need the object.
-  
-* If you send an object over a channel, you must call `Retain` before sending it as the receiver is
-  assumed to own the object and will later call `Release` when it no longer needs the object. 
+* If you are passed an object and wish to take ownership of it, you must call
+  `Retain`. You must later pair this with a call to `Release` when you no
+  longer need the object.  "Taking ownership" typically means you wish to
+  access the object outside the scope of the current function call.
 
+* You own any object you create via functions whose name begins with `New` or
+  `Copy` or when receiving an object over a channel. Therefore you must call
+  `Release` once you no longer need the object.
+
+* If you send an object over a channel, you must call `Retain` before sending
+  it as the receiver is assumed to own the object and will later call `Release`
+  when it no longer needs the object.
 
 Performance
 -----------
 
-The arrow package makes extensive use of [c2goasm][] to leverage LLVM's advanced optimizer and generate PLAN9 
-assembly functions from C/C++ code. The arrow package can be compiled without these optimizations using the `noasm` 
-build tag. Alternatively, by configuring an environment variable, it is possible to dynamically configure which 
-architecture optimizations are used at runtime. 
-See the `cpu` package [README](internal/cpu/README.md) for a description of this environment variable.
+The arrow package makes extensive use of [c2goasm][] to leverage LLVM's
+advanced optimizer and generate PLAN9 assembly functions from C/C++ code. The
+arrow package can be compiled without these optimizations using the `noasm`
+build tag. Alternatively, by configuring an environment variable, it is
+possible to dynamically configure which architecture optimizations are used at
+runtime.  See the `cpu` package [README](internal/cpu/README.md) for a
+description of this environment variable.
 
 ### Example Usage
 
-The following benchmarks demonstrate summing an array of 8192 values using various optimizations. 
+The following benchmarks demonstrate summing an array of 8192 values using
+various optimizations.
 
 Disable no architecture optimizations (thus using AVX2):
 
@@ -111,64 +120,5 @@ PASS
 ok  	github.com/apache/arrow/go/arrow/math	6.179s
 ```
 
-Status
-------
-
-The first milestone was to implement the necessary Array types in order to use
-them internally in the [ifql][] execution engine and storage layers of [InfluxDB][].
-
-
-### Memory Management
-
-- [x] Allocations are 64-byte aligned and padded to 8-bytes
-
-
-### Array and builder support
-
-**Primitive types**
-
-- [x] Signed and unsigned 8, 16, 32 and 64 bit integers
-- [x] 32 and 64 bit floats
-- [x] Packed LSB booleans
-- [x] Variable-length binary
-- [x] String (valid UTF-8)
-- [ ] Half-float (16-bit)
-- [x] Null (no physical storage)
-
-**Parametric types**
-
-- [x] Timestamp
-- [ ] Interval (year/month or day/time)
-- [ ] Date32 (days since UNIX epoch)
-- [ ] Date64 (milliseconds since UNIX epoch)
-- [ ] Time32 (seconds or milliseconds since midnight)
-- [ ] Time64 (microseconds or nanoseconds since midnight)
-- [ ] Decimal (128-bit)
-- [ ] Fixed-sized binary
-- [x] List
-- [x] Struct
-- [ ] Union
-    - [ ] Dense
-    - [ ] Sparse
-- [ ] Dictionary 
-    - [ ] Dictionary encoding
-
-### Type metadata
-
-- [x] Data types (implemented arrays)
-- [x] Field
-- [x] Schema
-  
-
-### I/O 
-
-- [ ] Flat buffers for serializing metadata
-- [x] Record Batch
-- [x] Table
-
-
-
 [arrow]:    https://arrow.apache.org
-[ifql]:     https://github.com/influxdata/ifql
-[InfluxDB]: https://github.com/influxdata/influxdb
 [c2goasm]:  https://github.com/minio/c2goasm

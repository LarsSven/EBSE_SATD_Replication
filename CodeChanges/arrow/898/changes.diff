diff --git a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
index be0ba77f5b2f..b38cf679e2a1 100644
--- a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
+++ b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
@@ -171,7 +171,6 @@ public String getName() {
 
   @Override
   public ArrowBuf getEmpty() {
-    assertOpen();
     return empty;
   }
 
@@ -236,8 +235,6 @@ public ArrowBuf buffer(final int initialRequestSize) {
   }
 
   private ArrowBuf createEmpty() {
-    assertOpen();
-
     return new ArrowBuf(new AtomicInteger(), null, AllocationManager.EMPTY, null, null, 0, 0, true);
   }
 
diff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
index 0fea719da881..88e02495bfc9 100644
--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
@@ -59,8 +59,6 @@ public static List<ArrowBuf> unload(List<BufferBacked> vectors) {
     return result;
   }
 
-  // TODO: Nullable vectors extend BaseDataValueVector but do not use the data field
-  // We should fix the inheritance tree
   protected ArrowBuf data;
 
   public BaseDataValueVector(String name, BufferAllocator allocator) {
@@ -70,23 +68,11 @@ public BaseDataValueVector(String name, BufferAllocator allocator) {
 
   @Override
   public void clear() {
-    if (data != null) {
-      data.release();
-    }
+    data.release();
     data = allocator.getEmpty();
     super.clear();
   }
 
-  @Override
-  public void close() {
-    clear();
-    if (data != null) {
-      data.release();
-      data = null;
-    }
-    super.close();
-  }
-
   @Override
   public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {
     return getTransferPair(ref, allocator);
diff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java
index 0f41c2dd790e..159d534a3107 100644
--- a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java
+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java
@@ -736,6 +736,16 @@ public void testFillEmptiesUsage() {
     }
   }
 
+  @Test
+  public void testMultipleClose() {
+    BufferAllocator vectorAllocator = allocator.newChildAllocator("vector_allocator", 0, Long.MAX_VALUE);
+    NullableIntVector vector = newVector(NullableIntVector.class, EMPTY_SCHEMA_PATH, MinorType.INT, vectorAllocator);
+    vector.close();
+    vectorAllocator.close();
+    vector.close();
+    vectorAllocator.close();
+  }
+
   public static void setBytes(int index, byte[] bytes, NullableVarCharVector vector) {
     final int currentOffset = vector.values.offsetVector.getAccessor().get(index);
 

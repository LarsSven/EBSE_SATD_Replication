diff --git a/core/Makefile b/core/Makefile
index 788c47a11b..2433ab01c9 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -82,11 +82,7 @@ trafci: jdbc_jar
 	cd conn/trafci && $(MAKE) 2>&1 | sed -e "s/$$/	##(TRAFCI)/" ; exit $${PIPESTATUS[0]}
 
 jdbc_type2_jar: verhdr foundation
-	cd conn/jdbc_type2 && $(ANT)  2>&1 | sed -e "s/$$/	##(JDBC_TYPE2)/" ; exit $${PIPESTATUS[0]}
 	cd conn/jdbc_type2 && $(MAKE) 2>&1 | sed -e "s/$$/	##(JDBC_TYPE2)/" ; exit $${PIPESTATUS[0]}
-	$(MAVEN) install:install-file -Dfile=conn/jdbc_type2/dist/jdbcT2.jar \
-	    -DgroupId=org.trafodion.jdbc.t2.T2Driver -DartifactId=t2driver -Dversion="$$TRAFODION_VER" \
-	    -Dpackaging=jar -DgeneratePom=true | sed -e "s/$$/        ##(JDBC_TYPE2)/";exit $${PIPESTATUS[0]}
 
 rest: verhdr jdbc_jar
 	cd rest && $(MAKE) 2>&1 | sed -e "s/$$/  ##(REST)/" ; exit $${PIPESTATUS[0]}
@@ -108,7 +104,7 @@ clean: sqroot
 	cd conn/trafci        &&	$(MAKE) clean
 	cd conn/jdbcT4        &&	$(MAKE) clean
 	cd conn &&			$(MAKE) clean
-	cd conn/jdbc_type2 &&		$(ANT) clean && $(MAKE) clean
+	cd conn/jdbc_type2 &&		$(MAKE) clean
 	cd rest &&			$(MAKE) clean
 	cd conn/odb &&			$(MAKE) clean
 	cd ../dcs &&			$(MAKE) clean 
diff --git a/core/conn/jdbc_type2/.gitignore b/core/conn/jdbc_type2/.gitignore
index 75811d5cc4..1a1eb462d7 100644
--- a/core/conn/jdbc_type2/.gitignore
+++ b/core/conn/jdbc_type2/.gitignore
@@ -1,5 +1,11 @@
+/target/
 buildId
+/target/
 classes/
 native/Vproc.*
-native/org_trafodion_jdbc_t2_*.h
-src/main/java/org/trafodion/jdbc/t2/DriverInfo.java
+native/org_apache_trafodion_jdbc_t2_*.h
+src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java
+src/main/resources/META-INF/LICENSE
+src/main/resources/META-INF/NOTICE
+LICENSE
+NOTICE
diff --git a/core/conn/jdbc_type2/Makefile b/core/conn/jdbc_type2/Makefile
index 165ea24e73..9ed2b4fc3b 100644
--- a/core/conn/jdbc_type2/Makefile
+++ b/core/conn/jdbc_type2/Makefile
@@ -57,7 +57,15 @@ T2_OBJS  = $(OUTDIR)/CommonDiags.o \
        $(OUTDIR)/ResStatisticsStatement.o \
        $(OUTDIR)/Vproc.o \
        $(OUTDIR)/type2version.o
-
+CSES := org.apache.trafodion.jdbc.t2.JdbcDebug \
+		org.apache.trafodion.jdbc.t2.DataWrapper \
+		org.apache.trafodion.jdbc.t2.SQLMXCallableStatement \
+		org.apache.trafodion.jdbc.t2.SQLMXConnection \
+		org.apache.trafodion.jdbc.t2.SQLMXDatabaseMetaData \
+		org.apache.trafodion.jdbc.t2.T2Driver \
+		org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement \
+		org.apache.trafodion.jdbc.t2.SQLMXResultSet \
+		org.apache.trafodion.jdbc.t2.SQLMXStatement
 OBJS = $(COMMON_OBJS) $(T2_OBJS)
 MXODIR = $(TRAF_HOME)/../conn/odbc/src/odbc
 
@@ -70,17 +78,42 @@ CODEGEN = -fPIC
 
 .PHONY: all
 
-all: $(LIBEXPDIR)/libjdbcT2.so
+LN :=/bin/ln -sf
+JAVAH :=$(JAVA_HOME)/bin/javah
+EXPROOT :=  ${TRAF_HOME}/export
+CP := /bin/cp -f
+all: LICENSE NOTICE $(LIBEXPDIR)/libjdbcT2.so  
+
+$(EXPROOT)/lib/jdbcT2.jar:
+	./getBuildInfo
+	$(MAVEN) install -DskipTests
+	$(CP) target/trafjdbcT2-${TRAFODION_VER}.jar $(EXPROOT)/lib
+	`cd ${TRAF_HOME}/export/lib;$(LN) trafjdbcT2-${TRAFODION_VER}.jar jdbcT2.jar` 
+	$(JAVAH) -cp $(EXPROOT)/lib/jdbcT2.jar -d native $(CSES)
 
 $(LIBEXPDIR)/libjdbcT2.so: $(OBJS)
 	$(CXX) -shared $(GCCMODE) -o $@ $(DBG_FLGS) -L$(LIBEXPDIR) -lsbfs -lsbms -levlsq -lwin -ltdm_sqlcli  -larkcmp_dll -larkcmplib -lcommon -lsort -lexecutor -lcomexe -lcli $(OBJS)
 
+$(OBJS): $(EXPROOT)/lib/jdbcT2.jar
+
 $(OUTDIR)/type2version.o: $(TRAF_HOME)/export/include/SCMBuildStr.h
 
 clean:
+	$(MAVEN) clean
 	$(RM) $(LIBEXPDIR)/libjdbcT2.so
+	$(RM) -f $(EXPROOT)/lib/jdbcT2*.jar
 	$(RM) -rf $(OUTDIR)
 	$(RM) -rf $(BUILD_PLAT)
+	echo '$(CSES)'|sed -e 's/\./_/g' -e 's/[[:space:]]/\n/g' |xargs -i rm -f 'native/{}.h'
 
 cleanall: clean
 	$(RM) -rf $(BUILD_PLAT)
+
+LICENSE: ../../../licenses/LICENSE-clients
+	cp -f $? $@
+
+../../../licenses/LICENSE-clients:
+	cd $(@D) && $(MAKE) $(@F)
+
+NOTICE: ../../../NOTICE
+	cp -f $? $@
diff --git a/core/conn/jdbc_type2/build.xml b/core/conn/jdbc_type2/build.xml
deleted file mode 100644
index a55c1a73c7..0000000000
--- a/core/conn/jdbc_type2/build.xml
+++ /dev/null
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!-- @@@ START COPYRIGHT @@@                                                 -->
-<!--                                                                         -->
-<!-- Licensed to the Apache Software Foundation (ASF) under one              -->
-<!-- or more contributor license agreements.  See the NOTICE file            -->
-<!-- distributed with this work for additional information                   -->
-<!-- regarding copyright ownership.  The ASF licenses this file              -->
-<!-- to you under the Apache License, Version 2.0 (the                       -->
-<!-- "License"); you may not use this file except in compliance              -->
-<!-- with the License.  You may obtain a copy of the License at              -->
-<!--                                                                         -->
-<!--   http://www.apache.org/licenses/LICENSE-2.0                            -->
-<!--                                                                         -->
-<!-- Unless required by applicable law or agreed to in writing,              -->
-<!-- software distributed under the License is distributed on an             -->
-<!-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY                  -->
-<!-- KIND, either express or implied.  See the License for the               -->
-<!-- specific language governing permissions and limitations                 -->
-<!-- under the License.                                                      -->
-<!--                                                                         -->
-<!-- @@@ END COPYRIGHT @@@                                                   -->
-
-<project name="jdbcT2" default="dist">
-
-    <property id="base.dir" name="base.dir" value="."/>
-    <exec executable="/bin/sh">
-        <arg line="getBuildInfo"/>
-    </exec>   
-    <property file="buildId"/>
-    <property name="vproc.str" value="Traf_JDBC_Type2_Build_${bldId}"/>
-    <property name="traf_home" value="../../sqf"/>
-    <property name="src.lic" value="${base.dir}/../../../licenses"/>
-    <property name="src.notice" value="${base.dir}/../../.."/>
-
-    <property name="dest.src" value="${base.dir}/src/main/java"/>
-    <property name="package.src" value="${dest.src}/org/trafodion/jdbc/t2"/>
-    <property name="native.src" value="${base.dir}/native"/>
-    <property name="dest.classes" value="${base.dir}/classes"/>
-    <tstamp>
-       <format property="now.timestamp" pattern="yyyy_MM_dd" locale="en" />
-    </tstamp>
-
-    <property environment="my_env"/>
-
-    <target name="ProductVersion">
-       <echo>
-         ${my_env.TRAFODION_VER_PROD}
-         ${my_env.PRODUCT_COPYRIGHT_HEADER}
-       </echo>
-    </target>
-
-    <target name="dist" depends="native">
-       <mkdir dir="dist"/>
-       <property file="${traf_home}/export/include/SCMBuildMan.mf"/>
-       <jar destfile="dist/jdbcT2.jar" compress="true">
-           <include name="LICENSE" />
-           <include name="NOTICE" />
-           <fileset dir="classes"/>
-           <manifest id="mf">
-              <attribute name="Main-Class" value="JdbcT2"/>
-              <attribute name="VPROC" value="${vproc.str}"/>
-	      <attribute name="Implementation-Version-1" value="Version 1.0.0"/>
-              <attribute name="Implementation-Version-2" value="${my_env.TRAFODION_VER_PROD} ${Implementation-Version-2}"/>
-              <attribute name="Implementation-Version-3" value="${Implementation-Version-3}"/>
-              <attribute name="Implementation-Version-4" value="${Implementation-Version-4}"/>
-              <attribute name="Implementation-Version-5" value="${Implementation-Version-5}"/>
-              <attribute name="Implementation-Version-6" value="${Implementation-Version-6}"/>
-           </manifest>
-       </jar>
-      <copy todir="${traf_home}/export/lib" overwrite="yes" file="dist/jdbcT2.jar"/>
-    </target>
-
-    <target name="clean">
-      <delete dir="${dest.classes}"/>
-      <delete>
-        <fileset dir="${native.src}" includes="org_*.h"/>
-      </delete>
-      <delete file="${package.src}/DriverInfo.java"/>
-      <delete dir="dist"/>
-      <exec dir="." executable="/usr/bin/make">
-            <arg line="clean"/>
-      </exec>
-     <delete file="${traf_home}/export/lib/jdbcT2.jar"/>
-     <delete file="buildId"/>
-    </target>
-
-    <target name="init"> 
-      <mkdir dir="${dest.classes}"/>
-    </target>
-
-    <target name="compile" depends="init">
-      <copy todir="${dest.classes}" overwrite="yes" file="${dest.src}/SQLMXT2Messages_en.properties"/>
-      <copy file="${src.lic}/Apache" tofile="${dest.classes}/LICENSE" />
-      <copy todir="${dest.classes}" file="${src.notice}/NOTICE" />
-      <exec executable="/bin/sh">
-         <arg line="../doDrvInfo ${package.src}/DriverInfo.java ${package.src}/DriverInfo.java-tmpl ${vproc.str}"/>
-      </exec>   
-
-      <javac destdir="${dest.classes}" srcdir="${dest.src}" debug="on" includes="**/*.java" classpath="${java.home}/lib/tools.jar:${dest.classes}" includeAntRuntime="false"/>
-    </target>
-
-    <target name="jni" depends="compile">
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.JdbcDebug" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.DataWrapper" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXCallableStatement" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXConnection" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXDatabaseMetaData" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.T2Driver" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXPreparedStatement" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXResultSet" destdir="${native.src}" />
-       <javah verbose="no" classpath="${dest.classes}" class="org.trafodion.jdbc.t2.SQLMXStatement" destdir="${native.src}" />
-    </target>
-
-    <target name="native" depends="jni" >
-     </target>
-
-</project>
diff --git a/core/conn/jdbc_type2/native/Debug.cpp b/core/conn/jdbc_type2/native/Debug.cpp
index 39b66a08eb..f2c8539541 100644
--- a/core/conn/jdbc_type2/native/Debug.cpp
+++ b/core/conn/jdbc_type2/native/Debug.cpp
@@ -37,7 +37,7 @@
 //     memory is allocated during initialization.
 
 #include "Debug.h"
-#include "org_trafodion_jdbc_t2_DataWrapper.h"
+#include "org_apache_trafodion_jdbc_t2_DataWrapper.h"
 
 #ifdef _DEBUG
 
@@ -1942,7 +1942,7 @@ SQLCLI_LIB_FUNC long CliDebug_SetStmtAttr(SQLSTMT_ID *statement_id, long attrNam
 										  long numeric_value, char *string_value,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetStmtAttr",("statement_id=0x%08x,attrName=%s,numeric_value=%ld,string_value=%s",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetStmtAttr",("statement_id=0x%08x,attrName=%s,numeric_value=%ld,string_value=%s",
 			statement_id,
 			DebugSqlAttrTypeStr(attrName),
 			numeric_value,
@@ -1957,7 +1957,7 @@ SQLCLI_LIB_FUNC long CliDebug_SetDescItem(SQLDESC_ID *sql_descriptor, long entry
 										  long what_to_set, long numeric_value, char * string_value,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetDescItem",("sql_descriptor=0x%08x, entry=%d, what_to_set=%s, numeric_value=%ld, string_value=%s",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetDescItem",("sql_descriptor=0x%08x, entry=%d, what_to_set=%s, numeric_value=%ld, string_value=%s",
 		   sql_descriptor,
 		   entry,
 		   CliDebugDescItemStr(what_to_set),
@@ -1974,7 +1974,7 @@ SQLCLI_LIB_FUNC long CliDebug_SETROWSETDESCPOINTERS(SQLDESC_ID * desc_id, long r
 													struct SQLCLI_QUAD_FIELDS quad_fields[],
 													const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SETROWSETDESCPOINTERS",("desc_id=0x%08x, rowset_size=%ld, rowset_status_ptr=0x%08x, starting_entry=%ld, num_quadruple_fields=%ld, quad_fields=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SETROWSETDESCPOINTERS",("desc_id=0x%08x, rowset_size=%ld, rowset_status_ptr=0x%08x, starting_entry=%ld, num_quadruple_fields=%ld, quad_fields=0x%08x",
 			desc_id,
 			rowset_size,
 			rowset_status_ptr,
@@ -1991,7 +1991,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDescItems2(SQLDESC_ID * sql_descriptor,
 											long no_of_desc_items, SQLDESC_ITEM desc_items[],
 											const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescItems2",("sql_descriptor=0x%08x, no_of_desc_items=%d, desc_items=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescItems2",("sql_descriptor=0x%08x, no_of_desc_items=%d, desc_items=0x%08x",
 			sql_descriptor,
 			no_of_desc_items,
 			desc_items),
@@ -2004,7 +2004,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDescItems2(SQLDESC_ID * sql_descriptor,
 SQLCLI_LIB_FUNC long CliDebug_SetCursorName(SQLSTMT_ID * statement_id, SQLSTMT_ID * cursor_name,
 											const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetCursorName",("statement_id=0x%08x, cursor_name=0x%08x)",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SetCursorName",("statement_id=0x%08x, cursor_name=0x%08x)",
 			statement_id,
 			cursor_name),
 		filename, line);
@@ -2017,7 +2017,7 @@ SQLCLI_LIB_FUNC long CliDebug_ExecFetch(SQLSTMT_ID * statement_id,
 										SQLDESC_ID * input_descriptor, long num_ptr_pairs,
 										const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ExecFetch",("statement_id=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%d",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ExecFetch",("statement_id=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%d",
 			statement_id,
 			input_descriptor,
 			num_ptr_pairs),
@@ -2030,7 +2030,7 @@ SQLCLI_LIB_FUNC long CliDebug_ExecFetch(SQLSTMT_ID * statement_id,
 SQLCLI_LIB_FUNC long CliDebug_CloseStmt(SQLSTMT_ID *statement_id,
 										const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CloseStmt",("statement_id=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CloseStmt",("statement_id=0x%08x",
 			statement_id),
 		filename, line);
 
@@ -2043,7 +2043,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDiagnosticsCondInfo2(long what_to_get, long con
 													  long max_string_len, int *len_of_item,
 													  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDiagnosticsCondInfo2",("what_to_get=%s, conditionNum=%ld, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDiagnosticsCondInfo2",("what_to_get=%s, conditionNum=%ld, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=0x%08x",
 			DebugSqlDiagCondStr(what_to_get),
 			conditionNum,
 			numeric_value,
@@ -2056,9 +2056,9 @@ SQLCLI_LIB_FUNC long CliDebug_GetDiagnosticsCondInfo2(long what_to_get, long con
 	if (max_string_len) *string_value = 0;
 	long rc = SQL_EXEC_GetDiagnosticsCondInfo2(what_to_get, conditionNum, numeric_value, string_value, max_string_len, len_of_item);
 	if (numeric_value)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
 	if (max_string_len)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
 
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
@@ -2066,7 +2066,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDiagnosticsCondInfo2(long what_to_get, long con
 SQLCLI_LIB_FUNC long CliDebug_SwitchContext(SQLCTX_HANDLE context_handle, SQLCTX_HANDLE * prev_context_handle,
 										    const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SwitchContext",("context_handle=%ld, prev_context_handle=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_SwitchContext",("context_handle=%ld, prev_context_handle=0x%08x",
 			context_handle,
 			prev_context_handle),
 		filename, line);
@@ -2074,7 +2074,7 @@ SQLCLI_LIB_FUNC long CliDebug_SwitchContext(SQLCTX_HANDLE context_handle, SQLCTX
 
 	long rc = SQL_EXEC_SwitchContext(context_handle, &prev_handle);
 	if (prev_context_handle) *prev_context_handle = prev_handle;
-	DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("prev_handle=%ld",prev_handle),
+	DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("prev_handle=%ld",prev_handle),
 		filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
@@ -2082,7 +2082,7 @@ SQLCLI_LIB_FUNC long CliDebug_SwitchContext(SQLCTX_HANDLE context_handle, SQLCTX
 SQLCLI_LIB_FUNC long CliDebug_DeleteContext(SQLCTX_HANDLE contextHandle,
 										    const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeleteContext",("contextHandle=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeleteContext",("contextHandle=%ld",
 			contextHandle),
 		filename, line);
 
@@ -2094,14 +2094,14 @@ SQLCLI_LIB_FUNC long CliDebug_CreateContext(SQLCTX_HANDLE *context_handle,
 											char* sqlAuthId, long suppressAutoXactStart,
 										    const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CreateContext",("context_handle=0x%08x, sqlAuthId=0x%08x, suppressAutoXactStart=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CreateContext",("context_handle=0x%08x, sqlAuthId=0x%08x, suppressAutoXactStart=%ld",
 			context_handle,
 			sqlAuthId,
 			suppressAutoXactStart),
 		filename, line);
 
 	long rc = SQL_EXEC_CreateContext(context_handle, sqlAuthId, suppressAutoXactStart);
-	DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("context_handle=%ld",*context_handle),
+	DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("context_handle=%ld",*context_handle),
 		filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
@@ -2109,7 +2109,7 @@ SQLCLI_LIB_FUNC long CliDebug_CreateContext(SQLCTX_HANDLE *context_handle,
 SQLCLI_LIB_FUNC long CliDebug_CurrentContext(SQLCTX_HANDLE *contextHandle,
 						const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CurrentContext",("contextHandle=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CurrentContext",("contextHandle=0x%08x",
 			contextHandle),
 		filename, line);
 
@@ -2120,7 +2120,7 @@ SQLCLI_LIB_FUNC long CliDebug_CurrentContext(SQLCTX_HANDLE *contextHandle,
 SQLCLI_LIB_FUNC long CliDebug_ClearDiagnostics (SQLSTMT_ID *statement_id,
 											    const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ClearDiagnostics",("statement_id=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ClearDiagnostics",("statement_id=0x%08x",
 			statement_id),
 		filename, line);
 
@@ -2132,7 +2132,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDiagnosticsStmtInfo2(SQLSTMT_ID *statement_id,
 													  long max_string_len, int *len_of_item,
 													  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDiagnosticsStmtInfo2",("statement_id=0x%08x, what_to_get=%s, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDiagnosticsStmtInfo2",("statement_id=0x%08x, what_to_get=%s, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=%ld",
 			statement_id,
 			DebugSqlDiagCondStr(what_to_get),
 			numeric_value,
@@ -2143,16 +2143,16 @@ SQLCLI_LIB_FUNC long CliDebug_GetDiagnosticsStmtInfo2(SQLSTMT_ID *statement_id,
 
 	long rc = SQL_EXEC_GetDiagnosticsStmtInfo2(statement_id, what_to_get, numeric_value, string_value, max_string_len, len_of_item);
 	if (numeric_value)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",(Int64 *)numeric_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",(Int64 *)numeric_value),filename,line);
 	if (max_string_len)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
 
 SQLCLI_LIB_FUNC long CliDebug_DeallocDesc(SQLDESC_ID *desc_id,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeallocDesc",("desc_id=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeallocDesc",("desc_id=0x%08x",
 			desc_id),
 		filename, line);
 
@@ -2163,7 +2163,7 @@ SQLCLI_LIB_FUNC long CliDebug_DeallocDesc(SQLDESC_ID *desc_id,
 SQLCLI_LIB_FUNC long CliDebug_DeallocStmt(SQLSTMT_ID *statement_id,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeallocStmt",("statement_id=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DeallocStmt",("statement_id=0x%08x",
 			statement_id),
 		filename, line);
 
@@ -2174,7 +2174,7 @@ SQLCLI_LIB_FUNC long CliDebug_ExecDirect(SQLSTMT_ID *statement_id, SQLDESC_ID *s
 										 SQLDESC_ID *input_descriptor, long num_ptr_pairs,
 										 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ExecDirect",("statement_id=0x%08x, sql_source=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ExecDirect",("statement_id=0x%08x, sql_source=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%ld",
 			statement_id,
 			sql_source,
 			input_descriptor,
@@ -2188,7 +2188,7 @@ SQLCLI_LIB_FUNC long CliDebug_ExecDirect(SQLSTMT_ID *statement_id, SQLDESC_ID *s
 SQLCLI_LIB_FUNC long CliDebug_Exec(SQLSTMT_ID *statement_id, SQLDESC_ID *input_descriptor,long num_ptr_pairs,
 								   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Exec",("statement_id=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Exec",("statement_id=0x%08x, input_descriptor=0x%08x, num_ptr_pairs=%ld",
 			statement_id,
 			input_descriptor,
 			num_ptr_pairs),
@@ -2202,7 +2202,7 @@ SQLCLI_LIB_FUNC long CliDebug_Exec(SQLSTMT_ID *statement_id, SQLDESC_ID *input_d
 SQLCLI_LIB_FUNC long CliDebug_Prepare(SQLSTMT_ID *statement_id, SQLDESC_ID *sql_source,
 									  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Prepare",("statement_id=0x%08x,sql_source=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Prepare",("statement_id=0x%08x,sql_source=0x%08x",
 			statement_id,
 			sql_source),
 		filename, line);
@@ -2215,7 +2215,7 @@ SQLCLI_LIB_FUNC long CliDebug_DescribeStmt(SQLSTMT_ID *statement_id,
 										   SQLDESC_ID *input_descriptor, SQLDESC_ID *output_descriptor,
 										   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DescribeStmt",("statement_id=0x%08x,input_descriptor=0x%08x,output_descriptor=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_DescribeStmt",("statement_id=0x%08x,input_descriptor=0x%08x,output_descriptor=0x%08x",
 			statement_id,
 			input_descriptor,
 			output_descriptor),
@@ -2228,21 +2228,21 @@ SQLCLI_LIB_FUNC long CliDebug_DescribeStmt(SQLSTMT_ID *statement_id,
 SQLCLI_LIB_FUNC long CliDebug_GetDescEntryCount(SQLDESC_ID *sql_descriptor, int *num_entries,
 												const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescEntryCount",("sql_descriptor=0x%08x, num_entries=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescEntryCount",("sql_descriptor=0x%08x, num_entries=0x%08x",
 			sql_descriptor,
 			num_entries),
 		filename, line);
 
 	long rc = SQL_EXEC_GetDescEntryCount(sql_descriptor, num_entries);
 	if (num_entries)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("num_entries=%ld",*num_entries),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("num_entries=%ld",*num_entries),filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
 
 SQLCLI_LIB_FUNC long CliDebug_Fetch(SQLSTMT_ID *statement_id, SQLDESC_ID *output_descriptor, long num_ptr_pairs,
 									const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Fetch",("statement_id=0x%08x, output_descriptor=0x%08x, num_ptr_pairs=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Fetch",("statement_id=0x%08x, output_descriptor=0x%08x, num_ptr_pairs=%ld",
 			statement_id,
 			output_descriptor,
 			num_ptr_pairs),
@@ -2250,7 +2250,7 @@ SQLCLI_LIB_FUNC long CliDebug_Fetch(SQLSTMT_ID *statement_id, SQLDESC_ID *output
 
 	long rc = SQL_EXEC_Fetch(statement_id, output_descriptor, num_ptr_pairs);
 
-	DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("statement_id=0x%08x, output_descriptor=0x%08x, num_ptr_pairs=%ld",
+	DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("statement_id=0x%08x, output_descriptor=0x%08x, num_ptr_pairs=%ld",
 		statement_id,output_descriptor,num_ptr_pairs),
 		filename,line);
 
@@ -2262,7 +2262,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetDescItem(SQLDESC_ID *sql_descriptor, long entry
 										  int *len_of_item, long start_from_offset,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescItem",("sql_descriptor=0x%08x, entry=%ld, what_to_get=%s, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=0x%08x, start_from_offset=%ld",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetDescItem",("sql_descriptor=0x%08x, entry=%ld, what_to_get=%s, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=0x%08x, start_from_offset=%ld",
 			sql_descriptor,
 			entry,
 			CliDebugDescItemStr(what_to_get),
@@ -2277,16 +2277,16 @@ SQLCLI_LIB_FUNC long CliDebug_GetDescItem(SQLDESC_ID *sql_descriptor, long entry
 	if (max_string_len) *string_value = 0;
 	long rc = SQL_EXEC_GetDescItem(sql_descriptor, entry, what_to_get, numeric_value, string_value, max_string_len, len_of_item, start_from_offset);
 	if (numeric_value)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
 	if (max_string_len)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
 
 SQLCLI_LIB_FUNC long CliDebug_Cancel(SQLSTMT_ID *statement_id,
 									 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Cancel",("statement_id=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_Cancel",("statement_id=0x%08x",
 			statement_id),
 		filename, line);
 
@@ -2296,7 +2296,7 @@ SQLCLI_LIB_FUNC long CliDebug_Cancel(SQLSTMT_ID *statement_id,
 SQLCLI_LIB_FUNC long CliDebug_AllocStmt(SQLSTMT_ID * new_statement_id, SQLSTMT_ID *cloned_statement,
 										const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AllocStmt",("new_statement_id=0x%08x, cloned_statement=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AllocStmt",("new_statement_id=0x%08x, cloned_statement=0x%08x",
 			new_statement_id,
 			cloned_statement),
 		filename, line);
@@ -2308,7 +2308,7 @@ SQLCLI_LIB_FUNC long CliDebug_AllocStmt(SQLSTMT_ID * new_statement_id, SQLSTMT_I
 SQLCLI_LIB_FUNC long CliDebug_ResDescName(SQLDESC_ID *statement_id, SQLSTMT_ID *from_statement, long what_desc,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ResDescName",("statement_id=0x%08x, from_statement=0x%08x, what_desc=%s",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ResDescName",("statement_id=0x%08x, from_statement=0x%08x, what_desc=%s",
 			statement_id,
 			from_statement,
 			DebugSqlWhatDescStr(what_desc)),
@@ -2321,7 +2321,7 @@ SQLCLI_LIB_FUNC long CliDebug_ResDescName(SQLDESC_ID *statement_id, SQLSTMT_ID *
 SQLCLI_LIB_FUNC long CliDebug_AllocDesc(SQLDESC_ID *desc_id, SQLDESC_ID *input_descriptor,
 										const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AllocDesc",("desc_id=0x%08x, input_descriptor=0x%08x",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AllocDesc",("desc_id=0x%08x, input_descriptor=0x%08x",
 			desc_id,
 			input_descriptor),
 		filename, line);
@@ -2333,7 +2333,7 @@ SQLCLI_LIB_FUNC long CliDebug_AllocDesc(SQLDESC_ID *desc_id, SQLDESC_ID *input_d
 SQLCLI_LIB_FUNC long CliDebug_AllocStmtForRS (SQLSTMT_ID *callStmtId, long resultSetIndex, 
 											  SQLSTMT_ID *resultSetStmtId, const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelStmt,"SQL_EXEC_AllocStmtForRS",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelStmt,"SQL_EXEC_AllocStmtForRS",
 		("callStmtId=0x%08x, resultSetIndex=%ld, resultSetStmtId=0x%08x",
 			callStmtId,
 			resultSetIndex,
@@ -2351,7 +2351,7 @@ SQLCLI_LIB_FUNC long CliDebug_AllocStmtForRS (SQLSTMT_ID *callStmtId, long resul
 SQLCLI_LIB_FUNC long CliDebug_AssocFileNumber(SQLSTMT_ID *statement_id, short file_number,
 											  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AssocFileNumber",("statement_id=0x%08x, file_number=%d",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_AssocFileNumber",("statement_id=0x%08x, file_number=%d",
 			statement_id,
 			file_number),
 		filename, line);
@@ -2362,7 +2362,7 @@ SQLCLI_LIB_FUNC long CliDebug_AssocFileNumber(SQLSTMT_ID *statement_id, short fi
 
 SQLCLI_LIB_FUNC long CliDebug_CLI_VERSION(const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CLI_VERSION",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_CLI_VERSION",(NULL),
 		filename, line);
 
 	long rc = SQL_EXEC_CLI_VERSION();
@@ -2374,7 +2374,7 @@ SQLCLI_LIB_FUNC long CliDebug_ClearExecFetchClose(SQLSTMT_ID *statement_id, SQLD
 												  long num_output_ptr_pairs, long num_total_ptr_pairs,
 												  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ClearExecFetchClose",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_ClearExecFetchClose",
 		("statement_id=0x%08x, input_descriptor=0x%08x, output_descriptor=0x%08x, num_input_ptr_pairs=%ld, num_output_ptr_pairs=%ld, num_total_ptr_pairs=%ld",
 			statement_id,
 			input_descriptor,
@@ -2398,7 +2398,7 @@ SQLCLI_LIB_FUNC long CliDebug_GetStmtAttr(SQLSTMT_ID *statement_id, long attrNam
 										  long max_string_len, int *len_of_item,
 										  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetStmtAttr",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,"SQL_EXEC_GetStmtAttr",
 		("statement_id=0x%08x, attrName=%s, numeric_value=0x%08x, string_value=0x%08x, max_string_len=%ld, len_of_item=0x%08x",
 			statement_id,
 			CliDebugSqlAttrType(attrName),
@@ -2417,16 +2417,16 @@ SQLCLI_LIB_FUNC long CliDebug_GetStmtAttr(SQLSTMT_ID *statement_id, long attrNam
                                    max_string_len,
 								   len_of_item);
 	if (numeric_value)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("numeric_value=%ld",*numeric_value),filename,line);
 	if (max_string_len)
-		DEBUG_OUT_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
+		DEBUG_OUT_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI,("string_value=%s",string_value),filename,line);
 	CLI_DEBUG_RETURN_SQL_LOC(rc,filename,line);
 }
 
 jsize JNIDebug_GetArrayLength(JNIEnv *jenv, jarray array,
 							  const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetArrayLength",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetArrayLength",(NULL),
 		filename, line);
 	jsize dataLen = jenv->GetArrayLength(array);
 	FUNCTION_RETURN_NUMERIC_LOC(dataLen,(NULL),filename,line);
@@ -2436,7 +2436,7 @@ jsize JNIDebug_GetArrayLength(JNIEnv *jenv, jarray array,
 jobject JNIDebug_GetObjectArrayElement(JNIEnv *jenv, jobjectArray array, jsize index,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectArrayElement",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectArrayElement",
 		("index=%ld",index),
 		filename, line);
 	jobject jobj = jenv->GetObjectArrayElement(array, index);
@@ -2446,7 +2446,7 @@ jobject JNIDebug_GetObjectArrayElement(JNIEnv *jenv, jobjectArray array, jsize i
 jobject JNIDebug_GetObjectField(JNIEnv *jenv, jobject jobj, jfieldID fieldID,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectField",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectField",(NULL),
 		filename, line);
 	jobject rc = jenv->GetObjectField(jobj,fieldID);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2455,7 +2455,7 @@ jobject JNIDebug_GetObjectField(JNIEnv *jenv, jobject jobj, jfieldID fieldID,
 jbyte *JNIDebug_GetByteArrayElements(JNIEnv *jenv, jbyteArray array, jboolean *isCopy,
 									const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetByteArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetByteArrayElements",(NULL),
 		filename, line);
 	jbyte *count = jenv->GetByteArrayElements(array, isCopy);
 	FUNCTION_RETURN_PTR_LOC(count,(NULL),filename,line);
@@ -2464,7 +2464,7 @@ jbyte *JNIDebug_GetByteArrayElements(JNIEnv *jenv, jbyteArray array, jboolean *i
 void JNIDebug_ReleaseByteArrayElements(JNIEnv *jenv, jbyteArray array, jbyte *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseByteArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseByteArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseByteArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2473,7 +2473,7 @@ void JNIDebug_ReleaseByteArrayElements(JNIEnv *jenv, jbyteArray array, jbyte *el
 jshort *JNIDebug_GetShortArrayElements(JNIEnv *jenv, jshortArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetShortArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetShortArrayElements",(NULL),
 		filename, line);
 	jshort *rc = jenv->GetShortArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2482,7 +2482,7 @@ jshort *JNIDebug_GetShortArrayElements(JNIEnv *jenv, jshortArray array, jboolean
 void JNIDebug_ReleaseShortArrayElements(JNIEnv *jenv, jshortArray array, jshort *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseShortArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseShortArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseShortArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2491,7 +2491,7 @@ void JNIDebug_ReleaseShortArrayElements(JNIEnv *jenv, jshortArray array, jshort
 jint *JNIDebug_GetIntArrayElements(JNIEnv *jenv, jintArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetIntArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetIntArrayElements",(NULL),
 		filename, line);
 	jint *rc = jenv->GetIntArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2500,7 +2500,7 @@ jint *JNIDebug_GetIntArrayElements(JNIEnv *jenv, jintArray array, jboolean *isCo
 void JNIDebug_ReleaseIntArrayElements(JNIEnv *jenv, jintArray array, jint *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseIntArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseIntArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseIntArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2509,7 +2509,7 @@ void JNIDebug_ReleaseIntArrayElements(JNIEnv *jenv, jintArray array, jint *elems
 jlong *JNIDebug_GetLongArrayElements(JNIEnv *jenv, jlongArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetLongArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetLongArrayElements",(NULL),
 		filename, line);
 	jlong *rc = jenv->GetLongArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2518,7 +2518,7 @@ jlong *JNIDebug_GetLongArrayElements(JNIEnv *jenv, jlongArray array, jboolean *i
 void JNIDebug_ReleaseLongArrayElements(JNIEnv *jenv, jlongArray array, jlong *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseLongArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseLongArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseLongArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2527,7 +2527,7 @@ void JNIDebug_ReleaseLongArrayElements(JNIEnv *jenv, jlongArray array, jlong *el
 jfloat *JNIDebug_GetFloatArrayElements(JNIEnv *jenv, jfloatArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetFloatArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetFloatArrayElements",(NULL),
 		filename, line);
 	jfloat *rc = jenv->GetFloatArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2536,7 +2536,7 @@ jfloat *JNIDebug_GetFloatArrayElements(JNIEnv *jenv, jfloatArray array, jboolean
 void JNIDebug_ReleaseFloatArrayElements(JNIEnv *jenv, jfloatArray array, jfloat *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseFloatArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseFloatArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseFloatArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2545,7 +2545,7 @@ void JNIDebug_ReleaseFloatArrayElements(JNIEnv *jenv, jfloatArray array, jfloat
 jdouble *JNIDebug_GetDoubleArrayElements(JNIEnv *jenv, jdoubleArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetDoubleArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetDoubleArrayElements",(NULL),
 		filename, line);
 	jdouble *rc = jenv->GetDoubleArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2554,7 +2554,7 @@ jdouble *JNIDebug_GetDoubleArrayElements(JNIEnv *jenv, jdoubleArray array, jbool
 void JNIDebug_ReleaseDoubleArrayElements(JNIEnv *jenv, jdoubleArray array, jdouble *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseDoubleArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseDoubleArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseDoubleArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2563,7 +2563,7 @@ void JNIDebug_ReleaseDoubleArrayElements(JNIEnv *jenv, jdoubleArray array, jdoub
 jboolean *JNIDebug_GetBooleanArrayElements(JNIEnv *jenv, jbooleanArray array, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetBooleanArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetBooleanArrayElements",(NULL),
 		filename, line);
 	jboolean *rc = jenv->GetBooleanArrayElements(array,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2572,7 +2572,7 @@ jboolean *JNIDebug_GetBooleanArrayElements(JNIEnv *jenv, jbooleanArray array, jb
 void JNIDebug_ReleaseBooleanArrayElements(JNIEnv *jenv, jbooleanArray array, jboolean *elems, jint mode,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseBooleanArrayElements",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseBooleanArrayElements",(NULL),
 		filename, line);
 	jenv->ReleaseBooleanArrayElements(array, elems, mode);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2581,7 +2581,7 @@ void JNIDebug_ReleaseBooleanArrayElements(JNIEnv *jenv, jbooleanArray array, jbo
 const char *JNIDebug_GetStringUTFChars(JNIEnv *jenv, jstring jstr, jboolean *isCopy,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetStringUTFChars",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetStringUTFChars",(NULL),
 		filename, line);
 	const char *rc = jenv->GetStringUTFChars(jstr,isCopy);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2590,7 +2590,7 @@ const char *JNIDebug_GetStringUTFChars(JNIEnv *jenv, jstring jstr, jboolean *isC
 void JNIDebug_ReleaseStringUTFChars(JNIEnv *jenv, jstring jstr, const char* chars,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseStringUTFChars",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ReleaseStringUTFChars",(NULL),
 		filename, line);
 	jenv->ReleaseStringUTFChars(jstr, chars);
 	FUNCTION_RETURN_VOID_LOC((NULL),filename,line);
@@ -2599,7 +2599,7 @@ void JNIDebug_ReleaseStringUTFChars(JNIEnv *jenv, jstring jstr, const char* char
 jmethodID JNIDebug_GetMethodID(JNIEnv *jenv, jclass jcls, const char *name, const char *sig,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetMethodID",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetMethodID",
 		("name='%s' sig='%s'",name,sig),
 		filename, line);
 	jmethodID rc = jenv->GetMethodID(jcls, name, sig);
@@ -2609,7 +2609,7 @@ jmethodID JNIDebug_GetMethodID(JNIEnv *jenv, jclass jcls, const char *name, cons
 jfieldID JNIDebug_GetFieldID(JNIEnv *jenv, jclass jcls, const char *name, const char *sig,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetFieldID",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetFieldID",
 		("name='%s' sig='%s'",name,sig),
 		filename, line);
 	jfieldID rc = jenv->GetFieldID(jcls, name, sig);
@@ -2619,7 +2619,7 @@ jfieldID JNIDebug_GetFieldID(JNIEnv *jenv, jclass jcls, const char *name, const
 jclass JNIDebug_GetObjectClass(JNIEnv *jenv, jobject jobj,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectClass",(NULL),
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->GetObjectClass",(NULL),
 		filename, line);
 	jclass rc = jenv->GetObjectClass(jobj);
 	FUNCTION_RETURN_PTR_LOC(rc,(NULL),filename,line);
@@ -2628,7 +2628,7 @@ jclass JNIDebug_GetObjectClass(JNIEnv *jenv, jobject jobj,
 jboolean JNIDebug_IsInstanceOf(JNIEnv *jenv, jobject jobj, jclass clazz,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->IsInstanceOf",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->IsInstanceOf",
 		("jobj=0x%08x, clazz=0x%08x",jobj,clazz),
 		filename, line);
 	jboolean rc = jenv->IsInstanceOf(jobj,clazz);
@@ -2638,7 +2638,7 @@ jboolean JNIDebug_IsInstanceOf(JNIEnv *jenv, jobject jobj, jclass clazz,
 void JNIDebug_SetObjectField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jobject val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetObjectField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetObjectField",
 		(NULL),
 		filename, line);
 	jenv->SetObjectField(jobj,fieldID,val);
@@ -2648,7 +2648,7 @@ void JNIDebug_SetObjectField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jobje
 void JNIDebug_SetBooleanField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jboolean val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetBooleanField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetBooleanField",
 		("val=%d",val),
 		filename, line);
 	jenv->SetBooleanField(jobj, fieldID, val);
@@ -2658,7 +2658,7 @@ void JNIDebug_SetBooleanField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jboo
 void JNIDebug_SetByteField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jbyte val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetByteField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetByteField",
 		("val=%d",val),
 		filename, line);
 	jenv->SetByteField(jobj, fieldID, val);
@@ -2668,7 +2668,7 @@ void JNIDebug_SetByteField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jbyte v
 void JNIDebug_SetShortField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jshort val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetShortField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetShortField",
 		("val=%d",val),
 		filename, line);
 	jenv->SetShortField(jobj, fieldID, val);
@@ -2677,7 +2677,7 @@ void JNIDebug_SetShortField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jshort
 void JNIDebug_SetIntField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jint val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetIntField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetIntField",
 		("val=%ld",val),
 		filename, line);
 	jenv->SetIntField(jobj, fieldID, val);
@@ -2687,7 +2687,7 @@ void JNIDebug_SetIntField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jint val
 void JNIDebug_SetLongField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jlong val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetLongField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetLongField",
 		("val=%Ld",val),
 		filename, line);
 	jenv->SetLongField(jobj, fieldID, val);
@@ -2697,7 +2697,7 @@ void JNIDebug_SetLongField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jlong v
 void JNIDebug_SetFloatField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jfloat val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetFloatField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetFloatField",
 		("val=%f",val),
 		filename, line);
 	jenv->SetFloatField(jobj, fieldID, val);
@@ -2707,7 +2707,7 @@ void JNIDebug_SetFloatField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jfloat
 void JNIDebug_SetDoubleField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jdouble val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetDoubleField",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetDoubleField",
 		("val=%g",val),
 		filename, line);
 	jenv->SetDoubleField(jobj, fieldID, val);
@@ -2717,7 +2717,7 @@ void JNIDebug_SetDoubleField(JNIEnv *jenv, jobject jobj, jfieldID fieldID, jdoub
 void JNIDebug_SetObjectArrayElement(JNIEnv *jenv, jobjectArray array, jsize index, jobject val,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetObjectArrayElement",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetObjectArrayElement",
 		("index=%ld",index),
 		filename, line);
 	jenv->SetObjectArrayElement(array, index, val);
@@ -2728,7 +2728,7 @@ void JNIDebug_SetObjectArrayElement(JNIEnv *jenv, jobjectArray array, jsize inde
 void JNIDebug_SetBooleanArrayRegion(JNIEnv *jenv, jbooleanArray array, jsize start, jsize len, jboolean *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetBooleanArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetBooleanArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetBooleanArrayRegion(array, start, len, buf);
@@ -2738,7 +2738,7 @@ void JNIDebug_SetBooleanArrayRegion(JNIEnv *jenv, jbooleanArray array, jsize sta
 void JNIDebug_SetByteArrayRegion(JNIEnv *jenv, jbyteArray array, jsize start, jsize len, jbyte *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetByteArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetByteArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetByteArrayRegion(array, start, len, buf);
@@ -2748,7 +2748,7 @@ void JNIDebug_SetByteArrayRegion(JNIEnv *jenv, jbyteArray array, jsize start, js
 void JNIDebug_SetCharArrayRegion(JNIEnv *jenv, jcharArray array, jsize start, jsize len, jchar *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetCharArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetCharArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetCharArrayRegion(array, start, len, buf);
@@ -2758,7 +2758,7 @@ void JNIDebug_SetCharArrayRegion(JNIEnv *jenv, jcharArray array, jsize start, js
 void JNIDebug_SetShortArrayRegion(JNIEnv *jenv, jshortArray array, jsize start, jsize len, jshort *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetShortArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetShortArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetShortArrayRegion(array, start, len, buf);
@@ -2768,7 +2768,7 @@ void JNIDebug_SetShortArrayRegion(JNIEnv *jenv, jshortArray array, jsize start,
 void JNIDebug_SetIntArrayRegion(JNIEnv *jenv, jintArray array, jsize start, jsize len, jint *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetIntArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetIntArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetIntArrayRegion(array, start, len, buf);
@@ -2778,7 +2778,7 @@ void JNIDebug_SetIntArrayRegion(JNIEnv *jenv, jintArray array, jsize start, jsiz
 void JNIDebug_SetLongArrayRegion(JNIEnv *jenv, jlongArray array, jsize start, jsize len, jlong *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetLongArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetLongArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetLongArrayRegion(array, start, len, buf);
@@ -2788,7 +2788,7 @@ void JNIDebug_SetLongArrayRegion(JNIEnv *jenv, jlongArray array, jsize start, js
 void JNIDebug_SetFloatArrayRegion(JNIEnv *jenv, jfloatArray array, jsize start, jsize len, jfloat *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetFloatArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetFloatArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetFloatArrayRegion(array, start, len, buf);
@@ -2798,7 +2798,7 @@ void JNIDebug_SetFloatArrayRegion(JNIEnv *jenv, jfloatArray array, jsize start,
 void JNIDebug_SetDoubleArrayRegion(JNIEnv *jenv, jdoubleArray array, jsize start, jsize len, jdouble *buf,
 									   const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetDoubleArrayRegion",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->SetDoubleArrayRegion",
 		((NULL)),
 		filename, line);
 	jenv->SetDoubleArrayRegion(array, start, len, buf);
@@ -2808,7 +2808,7 @@ void JNIDebug_SetDoubleArrayRegion(JNIEnv *jenv, jdoubleArray array, jsize start
 jbyteArray JNIDebug_NewByteArray(JNIEnv *jenv, jsize len,
 								 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewByteArray",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewByteArray",
 		("len=%ld",len),
 		filename, line);
 	jbyteArray rc = jenv->NewByteArray(len);
@@ -2818,7 +2818,7 @@ jbyteArray JNIDebug_NewByteArray(JNIEnv *jenv, jsize len,
 jintArray JNIDebug_NewIntArray(JNIEnv *jenv, jsize len,
 								 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewIntArray",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewIntArray",
 		("len=%ld",len),
 		filename, line);
 	jintArray rc = jenv->NewIntArray(len);
@@ -2828,7 +2828,7 @@ jintArray JNIDebug_NewIntArray(JNIEnv *jenv, jsize len,
 jobjectArray JNIDebug_NewObjectArray(JNIEnv *jenv, jsize len, jclass clazz, jobject init,
 								 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewObjectArray",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewObjectArray",
 		("len=%ld",len),
 		filename, line);
 	jobjectArray rc = jenv->NewObjectArray(len, clazz, init);
@@ -2838,7 +2838,7 @@ jobjectArray JNIDebug_NewObjectArray(JNIEnv *jenv, jsize len, jclass clazz, jobj
 void JNIDebug_ExceptionClear(JNIEnv *jenv,
 							 const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ExceptionClear",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->ExceptionClear",
 		((NULL)),
 		filename, line);
 	jenv->ExceptionClear();
@@ -2848,7 +2848,7 @@ void JNIDebug_ExceptionClear(JNIEnv *jenv,
 jint JNIDebug_Throw(JNIEnv *jenv, jthrowable obj,
 					const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->Throw",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->Throw",
 		((NULL)),
 		filename, line);
 	jint rc = jenv->Throw(obj);
@@ -2858,7 +2858,7 @@ jint JNIDebug_Throw(JNIEnv *jenv, jthrowable obj,
 jclass JNIDebug_FindClass(JNIEnv *jenv, const char *name,
 					const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->FindClass",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->FindClass",
 		(("name=%s",name)),
 		filename, line);
 	jclass rc = jenv->FindClass(name);
@@ -2867,7 +2867,7 @@ jclass JNIDebug_FindClass(JNIEnv *jenv, const char *name,
 jobject JNIDebug_NewGlobalRef(JNIEnv *jenv, jobject lobj,
 					const char *filename, unsigned long line)
 {
-	FUNCTION_ENTRY_LEVEL_LOC(org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewGlobalRef",
+	FUNCTION_ENTRY_LEVEL_LOC(org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry,"jenv->NewGlobalRef",
 		((NULL)),
 		filename, line);
 	jobject rc = jenv->NewGlobalRef(lobj);
@@ -2879,33 +2879,33 @@ const char *WrapperDataTypeStr(jbyte dataType)
 	static char rc[80];
 	switch (dataType)
 	{
-	case org_trafodion_jdbc_t2_DataWrapper_UNKNOWN:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_UNKNOWN:
 		return("DataWrapper.UNKNOWN");
-	case org_trafodion_jdbc_t2_DataWrapper_BYTE:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_BYTE:
 		return("DataWrapper.BYTE");
-	case org_trafodion_jdbc_t2_DataWrapper_SHORT:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_SHORT:
 		return("DataWrapper.SHORT");
-	case org_trafodion_jdbc_t2_DataWrapper_INTEGER:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_INTEGER:
 		return("DataWrapper.INTEGER");
-	case org_trafodion_jdbc_t2_DataWrapper_LONG:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_LONG:
 		return("DataWrapper.LONG");
-	case org_trafodion_jdbc_t2_DataWrapper_FLOAT:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_FLOAT:
 		return("DataWrapper.FLOAT");
-	case org_trafodion_jdbc_t2_DataWrapper_DOUBLE:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_DOUBLE:
 		return("DataWrapper.DOUBLE");
-	case org_trafodion_jdbc_t2_DataWrapper_BOOLEAN:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_BOOLEAN:
 		return("DataWrapper.BOOLEAN");
-	case org_trafodion_jdbc_t2_DataWrapper_STRING:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_STRING:
 		return("DataWrapper.STRING");
-	case org_trafodion_jdbc_t2_DataWrapper_BYTES:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_BYTES:
 		return("DataWrapper.BYTES");
-	case org_trafodion_jdbc_t2_DataWrapper_BLOB:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_BLOB:
 		return("DataWrapper.BLOB");
-	case org_trafodion_jdbc_t2_DataWrapper_CLOB:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_CLOB:
 		return("DataWrapper.CLOB");
-	case org_trafodion_jdbc_t2_DataWrapper_BIG_DECIMAL:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_BIG_DECIMAL:
 		return("DataWrapper.BIG_DECIMAL");
-	case org_trafodion_jdbc_t2_DataWrapper_OBJECT:
+	case org_apache_trafodion_jdbc_t2_DataWrapper_OBJECT:
 		return("DataWrapper.OBJECT");
 	}
 	sprintf(rc,"Unknown DataWrapper data type (%ld)",dataType);
diff --git a/core/conn/jdbc_type2/native/Debug.h b/core/conn/jdbc_type2/native/Debug.h
index 7875c4c2b6..a7ad553d24 100644
--- a/core/conn/jdbc_type2/native/Debug.h
+++ b/core/conn/jdbc_type2/native/Debug.h
@@ -133,7 +133,7 @@
 		}
 
 #if defined(_DEBUG) || defined(_BENCHMARK)
-#include "org_trafodion_jdbc_t2_JdbcDebug.h"
+#include "org_apache_trafodion_jdbc_t2_JdbcDebug.h"
 #endif
 extern std::map<long,SRVR_STMT_HDL*> tempStmtIdMap;
 #ifdef _DEBUG
@@ -148,25 +148,25 @@ const char *getCharsetEncoding(long charset);
 
 // All valid debug levels and flags.
 // High byte is reserved for flags.
-#define DEBUG_FLAG_THREADS		org_trafodion_jdbc_t2_JdbcDebug_debugFlagThreads
-#define DEBUG_FLAG_DIRTY_MEM	org_trafodion_jdbc_t2_JdbcDebug_debugFlagDirtyMem
-#define DEBUG_FLAG_TIMER		org_trafodion_jdbc_t2_JdbcDebug_debugFlagTimer
-#define DEBUG_FLAG_NOTIME		org_trafodion_jdbc_t2_JdbcDebug_debugFlagNoTime
-#define DEBUG_FLAG_TESTWARE		org_trafodion_jdbc_t2_JdbcDebug_debugFlagTestware
-#define DEBUG_LEVEL_ENTRY		org_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry
-#define DEBUG_LEVEL_JAVA		org_trafodion_jdbc_t2_JdbcDebug_debugLevelJava
-#define DEBUG_LEVEL_MEM			org_trafodion_jdbc_t2_JdbcDebug_debugLevelMem
-#define DEBUG_LEVEL_MEMLEAK		org_trafodion_jdbc_t2_JdbcDebug_debugLevelMemLeak
-#define DEBUG_LEVEL_CLI			org_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI
-#define DEBUG_LEVEL_DATA		org_trafodion_jdbc_t2_JdbcDebug_debugLevelData
-#define DEBUG_LEVEL_TXN			org_trafodion_jdbc_t2_JdbcDebug_debugLevelTxn
-#define DEBUG_LEVEL_ROWSET		org_trafodion_jdbc_t2_JdbcDebug_debugLevelRowset
-#define DEBUG_LEVEL_ERROR		org_trafodion_jdbc_t2_JdbcDebug_debugLevelError
-#define DEBUG_LEVEL_METADATA	org_trafodion_jdbc_t2_JdbcDebug_debugLevelMetadata
-#define DEBUG_LEVEL_UNICODE		org_trafodion_jdbc_t2_JdbcDebug_debugLevelUnicode
-#define DEBUG_LEVEL_POOLING		org_trafodion_jdbc_t2_JdbcDebug_debugLevelPooling
-#define DEBUG_LEVEL_STMT		org_trafodion_jdbc_t2_JdbcDebug_debugLevelStmt
-#define DEBUG_LEVEL_ALL			org_trafodion_jdbc_t2_JdbcDebug_debugLevelAll
+#define DEBUG_FLAG_THREADS		org_apache_trafodion_jdbc_t2_JdbcDebug_debugFlagThreads
+#define DEBUG_FLAG_DIRTY_MEM	org_apache_trafodion_jdbc_t2_JdbcDebug_debugFlagDirtyMem
+#define DEBUG_FLAG_TIMER		org_apache_trafodion_jdbc_t2_JdbcDebug_debugFlagTimer
+#define DEBUG_FLAG_NOTIME		org_apache_trafodion_jdbc_t2_JdbcDebug_debugFlagNoTime
+#define DEBUG_FLAG_TESTWARE		org_apache_trafodion_jdbc_t2_JdbcDebug_debugFlagTestware
+#define DEBUG_LEVEL_ENTRY		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelEntry
+#define DEBUG_LEVEL_JAVA		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelJava
+#define DEBUG_LEVEL_MEM			org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelMem
+#define DEBUG_LEVEL_MEMLEAK		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelMemLeak
+#define DEBUG_LEVEL_CLI			org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelCLI
+#define DEBUG_LEVEL_DATA		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelData
+#define DEBUG_LEVEL_TXN			org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelTxn
+#define DEBUG_LEVEL_ROWSET		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelRowset
+#define DEBUG_LEVEL_ERROR		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelError
+#define DEBUG_LEVEL_METADATA	org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelMetadata
+#define DEBUG_LEVEL_UNICODE		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelUnicode
+#define DEBUG_LEVEL_POOLING		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelPooling
+#define DEBUG_LEVEL_STMT		org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelStmt
+#define DEBUG_LEVEL_ALL			org_apache_trafodion_jdbc_t2_JdbcDebug_debugLevelAll
 
 #define MEMORY_ALLOC_MEMORY		0
 #define MEMORY_ALLOC_OBJECT		1
diff --git a/core/conn/jdbc_type2/native/JdbcDebug.cpp b/core/conn/jdbc_type2/native/JdbcDebug.cpp
index 0433d2d12d..25ae2a0011 100644
--- a/core/conn/jdbc_type2/native/JdbcDebug.cpp
+++ b/core/conn/jdbc_type2/native/JdbcDebug.cpp
@@ -23,15 +23,15 @@
 //
 // MODULE: JdbcDebug.cpp
 //
-#include "org_trafodion_jdbc_t2_JdbcDebug.h"
+#include "org_apache_trafodion_jdbc_t2_JdbcDebug.h"
 #include "Debug.h"
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    getDebugHandle
  * Signature: (I)I
  */
-JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_getDebugHandle(JNIEnv *jenv, jclass jcls,
+JNIEXPORT jlong JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_getDebugHandle(JNIEnv *jenv, jclass jcls,
 																	  jlong method_name_handle)
 {
 	jlong handle = 0;
@@ -42,11 +42,11 @@ JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_getDebugHandle(JNIE
 }
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    getMethodNameHandle
  * Signature: (Ljava/lang/String;)I
  */
-JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_getMethodNameHandle(JNIEnv *jenv, jclass jcls,
+JNIEXPORT jlong JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_getMethodNameHandle(JNIEnv *jenv, jclass jcls,
 																		   jstring method_name)
 {
 	jlong rc = 0;
@@ -58,11 +58,11 @@ JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_getMethodNameHandle
 }
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    methodEntry
  * Signature: (III)V
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodEntry(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodEntry(JNIEnv *jenv, jclass jcls,
 																   jlong debug_handle,
 																   jint debug_level,
 																   jlong method_name_handle)
@@ -76,11 +76,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodEntry(JNIEnv *
 }
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    methodReturn
  * Signature: (ILjava/lang/String;)V
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodReturn(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodReturn(JNIEnv *jenv, jclass jcls,
 																	jlong debug_handle,
 																	jstring comment)
 {
@@ -94,11 +94,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodReturn(JNIEnv
 }
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    methodExit
  * Signature: (I)V
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodExit(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodExit(JNIEnv *jenv, jclass jcls,
 																  jlong debug_handle)
 {
 #if defined(_DEBUG)
@@ -111,11 +111,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_methodExit(JNIEnv *j
 }
 
 /*
- * Class:     org_trafodion_jdbc_t2_JdbcDebug
+ * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug
  * Method:    traceOut
  * Signature: (IILjava/lang/String;)V
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_JdbcDebug_traceOut(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_traceOut(JNIEnv *jenv, jclass jcls,
 																	jlong debug_handle,
 																	jint debug_level,
 																	jstring comment)
diff --git a/core/conn/jdbc_type2/native/NskUtil.cpp b/core/conn/jdbc_type2/native/NskUtil.cpp
index afd2531f45..14edc7ecc2 100644
--- a/core/conn/jdbc_type2/native/NskUtil.cpp
+++ b/core/conn/jdbc_type2/native/NskUtil.cpp
@@ -176,7 +176,7 @@ BOOL envGetCatalogsTable(char *catalogsTableNm)
 	// BTW: 'MP not installed' is signified by string '\0' in
 	// the first character position in array catalogsTableNm[].
 	// catalogsTableNm[] is stored srvrGlobal->NskSystemCatalogName[]
-	// See Java_org_trafodion_jdbc_t2_SQLMXDriver_SQLMXInitialize().
+	// See Java_org_apache_trafodion_jdbc_t2_SQLMXDriver_SQLMXInitialize().
 	if(errorCode == FEEOF)
 	{
 		catalogsTableNm[0] = '\0';
diff --git a/core/conn/jdbc_type2/native/SQLMXCallableStatement.cpp b/core/conn/jdbc_type2/native/SQLMXCallableStatement.cpp
index d778d3db0d..9373fa14be 100644
--- a/core/conn/jdbc_type2/native/SQLMXCallableStatement.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXCallableStatement.cpp
@@ -25,7 +25,7 @@
 //
 /*Change Log
  * Solution Number:10-091103-5969
- * Methods Changed: Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall(JNIEnv *, jobject, jstring, jint, jint, jboolean, jint, jstring, jstring, jint, jint, jint)
+ * Methods Changed: Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall(JNIEnv *, jobject, jstring, jint, jint, jboolean, jint, jstring, jstring, jint, jint, jint)
  * Changed By: gargesh
  */
 #include <platform_ndcs.h>
@@ -37,18 +37,18 @@
 #include <sqlext.h>
 #include "CoreCommon.h"
 #include "JdbcDriverGlobal.h"
-#include "org_trafodion_jdbc_t2_SQLMXCallableStatement.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXCallableStatement.h"
 #include "SQLMXCommonFunctions.h"
 #include "CSrvrStmt.h"
 #include "SrvrCommon.h"
 #include "Debug.h"
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit, jint txnMode, jstring stmtLabel, jstring sql,
  jint queryTimeout, jint holdability, jint fetchSize)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall",("... fetchSize=%ld",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_prepareCall",("... fetchSize=%ld",
 		fetchSize));
 
 	long					estimatedCost;
@@ -191,12 +191,12 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_prepare
 	FUNCTION_RETURN_VOID((NULL));
 }
 //venu changed from int to long for 64 bit
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_executeCall
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_executeCall
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit, jint txnMode, jlong stmtId,
  jint paramCount, jobject paramValues, jint queryTimeout, jstring iso88591Encoding)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_executeCall",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_executeCall",("..."));
 
 	SQLValueList_def				outputSqlValueList;
 	ERROR_DESC_LIST_def				sqlWarning;
@@ -294,13 +294,13 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_execute
 	FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_cpqPrepareCall
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_cpqPrepareCall
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit, jint txnMode,
  jstring moduleName, jint moduleVersion, jlong moduleTimestamp, jstring stmtName,
  jint queryTimeout, jint holdability, jint fetchSize)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXCallableStatement_cpqPrepareCall",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXCallableStatement_cpqPrepareCall",("..."));
 
 	long							estimatedCost;
 	long							inputParamOffset;
diff --git a/core/conn/jdbc_type2/native/SQLMXCommonFunctions.cpp b/core/conn/jdbc_type2/native/SQLMXCommonFunctions.cpp
index 50fdc56758..15b1c93769 100644
--- a/core/conn/jdbc_type2/native/SQLMXCommonFunctions.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXCommonFunctions.cpp
@@ -38,15 +38,15 @@
 #include <float.h>
 #include "sqlcli.h"
 #include "JdbcDriverGlobal.h"
-#include "org_trafodion_jdbc_t2_SQLMXConnection.h"
-#include "org_trafodion_jdbc_t2_DataWrapper.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXConnection.h"
+#include "org_apache_trafodion_jdbc_t2_DataWrapper.h"
 #include "SQLMXCommonFunctions.h"
 #include "CoreCommon.h"
 #include "SrvrCommon.h"
 #include "SrvrOthers.h"
 #include "Debug.h"
 #include "GlobalInformation.h"
-#include "org_trafodion_jdbc_t2_T2Driver.h"  //spjrs
+#include "org_apache_trafodion_jdbc_t2_T2Driver.h"  //spjrs
 
 static const int INVALID_TRANSACTION_STATE = -1;
 
@@ -213,7 +213,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			}
 		}
 		JNI_SetObjectArrayElement(wrapperInfo->jenv,wrapperInfo->bytesValueObject,paramNumber,value);
-		setWrapperDataType(wrapperInfo,paramNumber,org_trafodion_jdbc_t2_DataWrapper_BYTES);
+		setWrapperDataType(wrapperInfo,paramNumber,org_apache_trafodion_jdbc_t2_DataWrapper_BYTES);
 		FUNCTION_RETURN_VOID((NULL));
 	}
 
@@ -247,7 +247,7 @@ static Charset_def CHARSET_INFORMATION[] = {
             }
         }
         JNI_SetObjectArrayElement(wrapperInfo->jenv,wrapperInfo->SQLbytesValueObject,paramNumber,value);
-        setWrapperDataType(wrapperInfo,paramNumber,org_trafodion_jdbc_t2_DataWrapper_BYTES);
+        setWrapperDataType(wrapperInfo,paramNumber,org_apache_trafodion_jdbc_t2_DataWrapper_BYTES);
         FUNCTION_RETURN_VOID((NULL));
     }
 //============================
@@ -299,7 +299,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			paramNumber,
 			WrapperDataTypeStr(data_type)));
 
-		if (data_type==org_trafodion_jdbc_t2_DataWrapper_STRING)
+		if (data_type==org_apache_trafodion_jdbc_t2_DataWrapper_STRING)
 			DEBUG_OUT(DEBUG_LEVEL_ENTRY,("String Value=%s",DebugJString(wrapperInfo->jenv,value)));
 
 		if (wrapperInfo->objectValueObject==NULL)
@@ -403,7 +403,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			DEBUG_ASSERT(wrapperInfo->longValue!=NULL,("GetLongArrayElements() failed"));
 		}
 		wrapperInfo->longValue[paramNumber] = value;
-		setWrapperDataType(wrapperInfo,paramNumber,org_trafodion_jdbc_t2_DataWrapper_LONG);
+		setWrapperDataType(wrapperInfo,paramNumber,org_apache_trafodion_jdbc_t2_DataWrapper_LONG);
 		FUNCTION_RETURN_VOID((NULL));
 	}
 
@@ -440,7 +440,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			DEBUG_ASSERT(wrapperInfo->floatValue!=NULL,("GetFloatArrayElements() failed"));
 		}
 		wrapperInfo->floatValue[paramNumber] = value;
-		setWrapperDataType(wrapperInfo,paramNumber,org_trafodion_jdbc_t2_DataWrapper_FLOAT);
+		setWrapperDataType(wrapperInfo,paramNumber,org_apache_trafodion_jdbc_t2_DataWrapper_FLOAT);
 		FUNCTION_RETURN_VOID((NULL));
 	}
 
@@ -477,7 +477,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			DEBUG_ASSERT(wrapperInfo->doubleValue!=NULL,("GetDoubleArrayElements() failed"));
 		}
 		wrapperInfo->doubleValue[paramNumber] = value;
-		setWrapperDataType(wrapperInfo,paramNumber,org_trafodion_jdbc_t2_DataWrapper_DOUBLE);
+		setWrapperDataType(wrapperInfo,paramNumber,org_apache_trafodion_jdbc_t2_DataWrapper_DOUBLE);
 		FUNCTION_RETURN_VOID((NULL));
 	}
 
@@ -1519,7 +1519,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 					DEBUG_OUT(DEBUG_LEVEL_DATA|DEBUG_LEVEL_UNICODE,("  dataType=%s",CliDebugSqlTypeCode(dataType)));
 					DEBUG_OUT(DEBUG_LEVEL_DATA|DEBUG_LEVEL_UNICODE,("  octetLength=%ld", octetLength));
 
-					if (getWrapperDataType(&wrapperInfo,paramNumber)!=org_trafodion_jdbc_t2_DataWrapper_BYTES)
+					if (getWrapperDataType(&wrapperInfo,paramNumber)!=org_apache_trafodion_jdbc_t2_DataWrapper_BYTES)
 					{
 						// Non byte array value
 						DEBUG_OUT(DEBUG_LEVEL_DATA|DEBUG_LEVEL_UNICODE,
@@ -2474,7 +2474,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 				FUNCTION_RETURN_NUMERIC(status,("currentTxid != 0"));
 			}
 			// suspend external txn when in "internal" txn mode
-			if (txnMode == org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL)
+			if (txnMode == org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL)
 			{
 				if ((status = suspendExtTxn(externalTxid)) != 0)
 					FUNCTION_RETURN_NUMERIC(status,
@@ -2574,7 +2574,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 				FUNCTION_RETURN_NUMERIC(status,("Invalid transaction state -- currentTxid != 0 "));
 			}
 			// suspend external txn when in "internal" txn mode
-			if (txnMode == org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL)
+			if (txnMode == org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL)
 			{
 				if ((status = suspendExtTxn(externalTxid)) != 0)
 				{
@@ -2767,8 +2767,8 @@ static Charset_def CHARSET_INFORMATION[] = {
 
 		switch (txnMode)
 		{
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL:
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_MIXED:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_MIXED:
 			if (holdability == CLOSE_CURSORS_AT_COMMIT)
 			{
 				status = resumeTxn(jenv, currentTxid, externalTxid, txnMode);
@@ -2784,7 +2784,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 					status, currentTxid));
 			}
 			break;
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_EXTERNAL:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_EXTERNAL:
 			break;
 		default:
 			// This is a programming error if it ever gets to hers
@@ -2842,7 +2842,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 		short status = 0;
 		switch (txnMode)
 		{
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_INTERNAL:
 			status = suspendOrEndTxn(jenv, currentTxid, txid, autoCommit, exception_nr, isSelect);
 			DEBUG_OUT(DEBUG_LEVEL_TXN,("suspendOrEndTxn returned %d for currentTxid 0x%08x , txid = 0x%08x",
 				status, currentTxid, txid));
@@ -2874,7 +2874,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 				}
 			}
 			break;
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_MIXED:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_MIXED:
 			if (externalTxid == 0)
 			{
 				DEBUG_OUT(DEBUG_LEVEL_TXN,("Not an external txn: currentTxid = 0x%08x, txid = 0x%08x", currentTxid, txid));
@@ -2882,7 +2882,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 				DEBUG_OUT(DEBUG_LEVEL_TXN,("suspendOrEndTxn returned %d for currentTxid (0x%08x)", status, currentTxid));
 			}
 			break;
-		case org_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_EXTERNAL:
+		case org_apache_trafodion_jdbc_t2_SQLMXConnection_TXN_MODE_EXTERNAL:
 			break;
 		default:
 			// This is a programming error if it ever gets to hers
@@ -2933,14 +2933,14 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.setNextWarningMethodId == NULL"));
 
 		//SQLMXHandle
-		jclass  handleClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXHandle");
+		jclass  handleClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXHandle");
 		gJNICache.sqlWarningMethodId = JNI_GetMethodID(jenv,handleClass, "setSqlWarning",
 			"(Ljava/sql/SQLWarning;)V");
 		if (gJNICache.sqlWarningMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.sqlWarningMethodId == NULL"));
 
 		//SQLMXDesc
-		jclass SQLMXDescClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXDesc");
+		jclass SQLMXDescClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXDesc");
 		if (SQLMXDescClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXDescClass == NULL"));
 		gJNICache.SQLMXDescClass = (jclass)JNI_NewGlobalRef(jenv,SQLMXDescClass);
@@ -2950,29 +2950,29 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.SQLMXDescConstructorId == NULL"));
 
 		// SQLMXPreparedStatement
-		jclass  SQLMXPreparedStatementClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXPreparedStatement");
+		jclass  SQLMXPreparedStatementClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXPreparedStatement");
 		if (SQLMXPreparedStatementClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXPreparedStatementClass == NULL"));
 		gJNICache.prepareOutputsMethodId = JNI_GetMethodID(jenv,SQLMXPreparedStatementClass, "setPrepareOutputs",
-			"([Lorg/trafodion/jdbc/t2/SQLMXDesc;[Lorg/trafodion/jdbc/t2/SQLMXDesc;IIIJ)V");
+			"([Lorg/apache/trafodion/jdbc/t2/SQLMXDesc;[Lorg/apache/trafodion/jdbc/t2/SQLMXDesc;IIIJ)V");
 		if (gJNICache.prepareOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.prepareOutputsMethodId == NULL"));
 		gJNICache.executeOutputsMethodId = JNI_GetMethodID(jenv,SQLMXPreparedStatementClass, "setExecuteOutputs",
-			"([II[Lorg/trafodion/jdbc/t2/DataWrapper;II)V");
+			"([II[Lorg/apache/trafodion/jdbc/t2/DataWrapper;II)V");
 		if (gJNICache.executeOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.executeOutputsMethodId == NULL"));
 
 		// SQLMXStatement
-		jclass  SQLMXStatementClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXStatement");
+		jclass  SQLMXStatementClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXStatement");
 		if (SQLMXStatementClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXStatementClass == NULL"));
 		gJNICache.execDirectOutputsMethodId = JNI_GetMethodID(jenv,SQLMXStatementClass, "setExecDirectOutputs",
-			"([Lorg/trafodion/jdbc/t2/SQLMXDesc;I[Lorg/trafodion/jdbc/t2/DataWrapper;IIJI)V");
+			"([Lorg/apache/trafodion/jdbc/t2/SQLMXDesc;I[Lorg/apache/trafodion/jdbc/t2/DataWrapper;IIJI)V");
 		if (gJNICache.execDirectOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.execDirectOutputsMethodId == NULL"));
 
 		gJNICache.execRSOutputsMethodId = JNI_GetMethodID(jenv,SQLMXStatementClass, "setExecRSOutputs",
-			"([Lorg/trafodion/jdbc/t2/SQLMXDesc;IJI)V");
+			"([Lorg/apache/trafodion/jdbc/t2/SQLMXDesc;IJI)V");
 		if (gJNICache.execRSOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.execRSOutputsMethodId == NULL"));
 
@@ -2990,16 +2990,16 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.setCurrentStmtIdMethodId == NULL"));
 
 		// SQLMXResultSet
-		jclass  SQLMXResultSetClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXResultSet");
+		jclass  SQLMXResultSetClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXResultSet");
 		if (SQLMXResultSetClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXResultSetClass == NULL"));
 		gJNICache.SQLMXResultSetClass = (jclass) JNI_NewGlobalRef(jenv,SQLMXResultSetClass);
 		gJNICache.fetchOutputsMethodId = JNI_GetMethodID(jenv,SQLMXResultSetClass, "setFetchOutputs",
-			"([Lorg/trafodion/jdbc/t2/DataWrapper;IZI)V");
+			"([Lorg/apache/trafodion/jdbc/t2/DataWrapper;IZI)V");
 		if (gJNICache.fetchOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.fetchOutputsMethodId == NULL"));
 		gJNICache.SQLMXResultSetConstructorId = JNI_GetMethodID(jenv,SQLMXResultSetClass, "<init>",
-			"(Lorg/trafodion/jdbc/t2/SQLMXDatabaseMetaData;[Lorg/trafodion/jdbc/t2/SQLMXDesc;IJ)V");
+			"(Lorg/apache/trafodion/jdbc/t2/SQLMXDatabaseMetaData;[Lorg/apache/trafodion/jdbc/t2/SQLMXDesc;IJ)V");
 		if (gJNICache.SQLMXResultSetConstructorId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.SQLMXResultSetConstructorId == NULL"));
 		gJNICache.setCurrentTxidRSMethodId = JNI_GetMethodID(jenv,SQLMXResultSetClass, "setCurrentTxid",
@@ -3008,7 +3008,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.setCurrentTxidRSMethodId == NULL"));
 
 		//SQLMXDatabaseMetaData
-		jclass  SQLMXDatabaseMetaDataClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXDatabaseMetaData");
+		jclass  SQLMXDatabaseMetaDataClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXDatabaseMetaData");
 		if (SQLMXDatabaseMetaDataClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXDatabaseMetaDataClass == NULL"));
 		gJNICache.setCurrentTxidDBMMethodId = JNI_GetMethodID(jenv,SQLMXDatabaseMetaDataClass, "setCurrentTxid",
@@ -3017,17 +3017,17 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.setCurrentTxidDBMMethodId == NULL"));
 
 		//SQLMXCallableStatement
-		jclass  SQLMXCallableStatementClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXCallableStatement");
+		jclass  SQLMXCallableStatementClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXCallableStatement");
 		if (SQLMXCallableStatementClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - SQLMXCallableStatementClass == NULL"));
 		gJNICache.executeCallOutputsMethodId = JNI_GetMethodID(jenv,SQLMXCallableStatementClass, "setExecuteCallOutputs",
-			"(Lorg/trafodion/jdbc/t2/DataWrapper;SIIIZ)V");
+			"(Lorg/apache/trafodion/jdbc/t2/DataWrapper;SIIIZ)V");
 
 
 		if (gJNICache.executeCallOutputsMethodId == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.executeCallOutputsMethodId == NULL"));
 
-		gJNICache.SQLMXConnectionClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/SQLMXConnection");
+		gJNICache.SQLMXConnectionClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/SQLMXConnection");
 		if (gJNICache.SQLMXConnectionClass == NULL)
 		{
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.SQLMXConnectionClass == NULL"));
@@ -3057,7 +3057,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - gJNICache.getBytesEncodedMethodId == NULL"));
 
 		// Create reference to the DataWrapper class
-		jclass wrapperClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/DataWrapper");
+		jclass wrapperClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/DataWrapper");
 		if (wrapperClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - wrapperClass == NULL"));
 		gJNICache.wrapperClass = (jclass)JNI_NewGlobalRef(jenv,wrapperClass);
@@ -3080,7 +3080,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 //------------
 		// SPJRS
 		// Create reference to the ResultSetInfo class
-		jclass ResultSetInfoClass = JNI_FindClass(jenv,"org/trafodion/jdbc/t2/ResultSetInfo");
+		jclass ResultSetInfoClass = JNI_FindClass(jenv,"org/apache/trafodion/jdbc/t2/ResultSetInfo");
 		if (ResultSetInfoClass == NULL)
 			FUNCTION_RETURN_NUMERIC(FALSE,("FALSE - ResultSetInfoClass == NULL"));
 		gJNICache.ResultSetInfoClass = (jclass)JNI_NewGlobalRef(jenv,ResultSetInfoClass);
@@ -3541,7 +3541,7 @@ static Charset_def CHARSET_INFORMATION[] = {
 			else
 			{
 				jstring jstr = wrapperInfo->jenv->NewStringUTF(strDataPtr);
-				if (!setWrapperObject(wrapperInfo,columnIndex,jstr,org_trafodion_jdbc_t2_DataWrapper_STRING))
+				if (!setWrapperObject(wrapperInfo,columnIndex,jstr,org_apache_trafodion_jdbc_t2_DataWrapper_STRING))
 				{
 					throwSQLException(wrapperInfo->jenv, JVM_MEM_ALLOC_ERROR, NULL, "HY000");
 					FUNCTION_RETURN_NUMERIC(FALSE,("setWrapper - JVM_MEM_ALLOC_ERROR"));
diff --git a/core/conn/jdbc_type2/native/SQLMXConnection.cpp b/core/conn/jdbc_type2/native/SQLMXConnection.cpp
index 8c42bf7e8f..11758d46dd 100644
--- a/core/conn/jdbc_type2/native/SQLMXConnection.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXConnection.cpp
@@ -27,7 +27,7 @@
 #include <sql.h>
 #include <sqlext.h>
 #include "JdbcDriverGlobal.h"
-#include "org_trafodion_jdbc_t2_SQLMXConnection.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXConnection.h"
 #include "SQLMXCommonFunctions.h"
 #include "CoreCommon.h"
 #include "SrvrCommon.h"
@@ -64,10 +64,10 @@ void setConnectAttr(JNIEnv *jenv, jobject jobj, jstring server, long dialogueId,
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setCatalog
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setCatalog
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jstring catalog)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_setCatalog",("jenv=0x%08x, server=%s, dialogueId=0x%08x, catalog=%s",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setCatalog",("jenv=0x%08x, server=%s, dialogueId=0x%08x, catalog=%s",
                     jenv,
                     DebugJString(jenv,server),
                     dialogueId,
@@ -87,10 +87,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setCatalog
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setAutoCommit
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setAutoCommit
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jboolean autoCommit)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_setAutoCommit",("jenv=0x%08x, server=%s, dialogueId=0x%08x, autoCommit=%d",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setAutoCommit",("jenv=0x%08x, server=%s, dialogueId=0x%08x, autoCommit=%d",
                     jenv,
                     DebugJString(jenv,server),
                     dialogueId,
@@ -102,7 +102,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setAutoCommit
 }
 
 //spjrs
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setIsSpjRSFlag
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setIsSpjRSFlag
 (JNIEnv *jenv, jobject jobj, jlong dialogueId, jboolean isSpjrsOn)
 {
     SRVR_CONNECT_HDL *pConnect;
@@ -112,10 +112,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setIsSpjRSFlag
     }
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setTransactionIsolation
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setTransactionIsolation
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint transactionIsolation)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_setTransactionIsolation",("jenv=0x%08x, server=%s, dialogueId=0x%08x, transactionIsolation=%ld",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setTransactionIsolation",("jenv=0x%08x, server=%s, dialogueId=0x%08x, transactionIsolation=%ld",
                     jenv,
                     DebugJString(jenv,server),
                     dialogueId,
@@ -181,9 +181,9 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setTransaction
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connect(
+JNIEXPORT jlong JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connect(
         JNIEnv *jenv, jobject jobj, jstring server, jstring uid, jstring pwd) {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_connect",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connect",
             ("jenv=0x%08x, server=%s, uid=%ld, pwd=%s", jenv, DebugJString(jenv,
                     server), uid, DebugJString(jenv, pwd)));
 
@@ -230,10 +230,10 @@ JNIEXPORT jlong JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connect(
             ("jdbcConnect=0x%08x", jdbcConnect));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_close
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_close
 (JNIEnv *jenv, jclass jcls, jstring server, jlong dialogueId)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_close",("jenv=0x%08x, server=%s, dialogueId=0x%08x",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_close",("jenv=0x%08x, server=%s, dialogueId=0x%08x",
                     jenv,
                     DebugJString(jenv,server),
                     dialogueId));
@@ -276,10 +276,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_close
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_commit
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_commit
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_commit",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_commit",
             ("jenv=0x%08x, server=%s, dialogueId=0x%08x, txid=0x%08x",
                     jenv,
                     DebugJString(jenv,server),
@@ -310,10 +310,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_commit
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_rollback
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_rollback
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_rollback",("jenv=0x%08x, server=%s, dialogueId=0x%08x, txid=0x%08x",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_rollback",("jenv=0x%08x, server=%s, dialogueId=0x%08x, txid=0x%08x",
                     jenv,
                     DebugJString(jenv,server),
                     dialogueId,
@@ -343,10 +343,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_rollback
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_beginTransaction(
+JNIEXPORT jint JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_beginTransaction(
         JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId) {
     FUNCTION_ENTRY(
-            "Java_org_trafodion_jdbc_t2_SQLMXConnection_beginTransaction",
+            "Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_beginTransaction",
             ("jenv=0x%08x, server=%s, dialogueId=0x%08x", jenv, DebugJString(
                     jenv, server), dialogueId));
 
@@ -378,14 +378,14 @@ JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_beginTransacti
     FUNCTION_RETURN_NUMERIC(currentTxid, ("currentTxid=0x%08x", currentTxid));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectInit
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connectInit
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jstring catalog,
         jstring schema, jstring mploc, jboolean isReadOnly, jboolean autoCommit, jint transactionIsolation,
         jint loginTimeout, jint queryTimeout, jstring modulecaching, jstring compiledmodulelocation, jboolean blnDoomUsrTxn,
         jint statisticsIntervalTime, jint statisticsLimitTime, jstring statisticsType, jstring programStatisticsEnabled, jstring statisticsSqlPlanEnabled)
 {
 
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_connectInit",("..."));
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connectInit",("..."));
     DEBUG_OUT(DEBUG_LEVEL_ENTRY,("  jenv=0x%08x, server=%s, dialogueId=0x%08x",
                     jenv,
                     DebugJString(jenv,server),
@@ -439,16 +439,16 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectInit
     // defined in SQLMXConnection.java.  This is added as a safety means to detect
     // if they get out of sync with each other and exit. Furthermore, this will
     // get detected only during new development efforts and will not occur in the field.
-    DEBUG_ASSERT(org_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL == SQL_CONTROL, ("Mismatch on SQL_CONTROL enum sql stmt type"));
-    DEBUG_ASSERT(org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION == SQL_SET_TRANSACTION, ("Mismatch on SQL_SET_TRANSACTION enum sql stmt type"));
-    DEBUG_ASSERT(org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG == SQL_SET_CATALOG, ("Mismatch on SQL_SET_CATALOG enum sql stmt type"));
-    DEBUG_ASSERT(org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA == SQL_SET_SCHEMA, ("Mismatch on SQL_SET_SCHEMA enum sql stmt type"));
+    DEBUG_ASSERT(org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL == SQL_CONTROL, ("Mismatch on SQL_CONTROL enum sql stmt type"));
+    DEBUG_ASSERT(org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION == SQL_SET_TRANSACTION, ("Mismatch on SQL_SET_TRANSACTION enum sql stmt type"));
+    DEBUG_ASSERT(org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG == SQL_SET_CATALOG, ("Mismatch on SQL_SET_CATALOG enum sql stmt type"));
+    DEBUG_ASSERT(org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA == SQL_SET_SCHEMA, ("Mismatch on SQL_SET_SCHEMA enum sql stmt type"));
 
 #ifdef _DEBUG
-    if((org_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL != SQL_CONTROL) ||
-            (org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION != SQL_SET_TRANSACTION ) ||
-            (org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG != SQL_SET_CATALOG) ||
-            (org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA != SQL_SET_SCHEMA))
+    if((org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL != SQL_CONTROL) ||
+            (org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION != SQL_SET_TRANSACTION ) ||
+            (org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG != SQL_SET_CATALOG) ||
+            (org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA != SQL_SET_SCHEMA))
     {
         printf("The SQLATTR_QUERY_TYPE enum's do not match to values defined in SQLMXConnection.\n");
         exit(1);
@@ -818,11 +818,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectInit
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connectReuse
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint conReuseBitMap, jstring catalog,
         jstring schema, jstring mploc, jint transactionIsolation)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse",("..."));
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_connectReuse",("..."));
     DEBUG_OUT(DEBUG_LEVEL_ENTRY,("  jenv=0x%08x, server=%s, dialogueId=0x%08x",
                     jenv,
                     DebugJString(jenv,server),
@@ -856,7 +856,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
     nMploc = JNI_GetStringUTFChars(jenv,mploc, NULL);
 
     // Need to reset all if any CONTROL cmds were issued
-    if (conReuseBitMap & org_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL_FLAG)
+    if (conReuseBitMap & org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_CONTROL_FLAG)
     {
         odbc_SQLSvc_SetConnectionOption_sme_(NULL, NULL,
                 &setConnectException,
@@ -996,7 +996,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
     else // Check what other connection unique attributes have changed
     {
         // Upate catalog if "set catalog" bit is set
-        if (conReuseBitMap & org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG_FLAG)
+        if (conReuseBitMap & org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_CATALOG_FLAG)
         {
             // Set catalog or clear catalog (if null)
             if (catalog)
@@ -1037,7 +1037,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
             }
         }
         // Upate schema if "set schema" bit is set
-        if (conReuseBitMap & org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA_FLAG)
+        if (conReuseBitMap & org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_SCHEMA_FLAG)
         {
             // Set schema or clear schema (if null)
             if (schema)
@@ -1078,7 +1078,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
             }
         }
         // Upate transaction isolation
-        if (conReuseBitMap & org_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION_FLAG)
+        if (conReuseBitMap & org_apache_trafodion_jdbc_t2_SQLMXConnection_SQL_SET_TRANSACTION_FLAG)
         {
             odbc_SQLSvc_SetConnectionOption_sme_(NULL, NULL,
                     &setConnectException,
@@ -1100,13 +1100,13 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_connectReuse
     FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT jstring JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_getCharsetEncoding(
+JNIEXPORT jstring JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_getCharsetEncoding(
         JNIEnv *jenv, jclass jcls, jstring server, jlong dialogueId,
         jint charset, jstring charsetOverride) {
     jstring rc;
 
     FUNCTION_ENTRY(
-            "Java_org_trafodion_jdbc_t2_SQLMXConnection_getCharsetEncoding",
+            "Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_getCharsetEncoding",
             ("jenv=0x%08x, server=%s, dialogueId=0x%08x, charset=%ld, charsetOverride=%s", jenv, DebugJString(
                     jenv, server), dialogueId, charset, DebugJString(jenv,
                     charsetOverride)));
@@ -1123,10 +1123,10 @@ JNIEXPORT jstring JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_getCharsetE
     FUNCTION_RETURN_PTR(rc, ("%s", DebugJString(jenv, rc)));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setCharsetEncodingOverride
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setCharsetEncodingOverride
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint charset, jstring encodingOverride)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_setCharsetEncodingOverride",
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_setCharsetEncodingOverride",
             ("jenv=0x%08x, server=%s, dialogueId=0x%08x, charset=%ld, encodingOverride=%s",
                     jenv,
                     DebugJString(jenv,server),
@@ -1153,14 +1153,14 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_setCharsetEnco
 
 //Sol. 10-100618-1186
 /*
- * Class:     org_trafodion_jdbc_t2_SQLMXConnection
+ * Class:     org_apache_trafodion_jdbc_t2_SQLMXConnection
  * Method:    clearSetOfCQDs
  * Signature: ()V
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXConnection_clearSetOfCQDs
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_clearSetOfCQDs
 (JNIEnv *jenv, jobject obj, jlong dialogueId)
 {
-    FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXConnection_clearSetOfCQDs",("..."));
+    FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXConnection_clearSetOfCQDs",("..."));
 //cleare CQD's upon a logical connection close.
     ((SRVR_CONNECT_HDL*)dialogueId)->listOfCQDs.clear();
     FUNCTION_RETURN_VOID((NULL));
diff --git a/core/conn/jdbc_type2/native/SQLMXDatabaseMetaData.cpp b/core/conn/jdbc_type2/native/SQLMXDatabaseMetaData.cpp
index a3638fff05..4f4b57c839 100644
--- a/core/conn/jdbc_type2/native/SQLMXDatabaseMetaData.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXDatabaseMetaData.cpp
@@ -39,17 +39,17 @@
 #include "JdbcDriverGlobal.h"
 #include "CoreCommon.h"
 #include "SQLMXCommonFunctions.h"
-#include "org_trafodion_jdbc_t2_SQLMXDatabaseMetaData.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData.h"
 #include "Debug.h"
 #define SQL_API_JDBC                    9999
 #define SQL_API_SQLTABLES_JDBC          SQL_API_SQLTABLES + SQL_API_JDBC
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCatalogs
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCatalogs
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalogPattern)
 
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCatalogs",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCatalogs",("..."));
 
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId, txid, autoCommit, txnMode,
 		SQL_API_SQLTABLES_JDBC, catalogPattern,
@@ -59,11 +59,11 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCa
 }
 
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getSchemas
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getSchemas
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, 
   jboolean autoCommit, jint txnMode, jstring schemaPattern)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getSchemas",("server=%s, dialogueId=0x%08x, txid=0x%08x, autoCommit=%s, txnMode=%ld, schemaPattern=%s",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getSchemas",("server=%s, dialogueId=0x%08x, txid=0x%08x, autoCommit=%s, txnMode=%ld, schemaPattern=%s",
 		DebugJString(jenv,server),
 		dialogueId,
 		txid,
@@ -78,12 +78,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getSc
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTables
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTables
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, 
 		jstring schemaPattern, jstring tableNamePattern, jstring tableType)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTables",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTables",("..."));
 
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId, txid, autoCommit, txnMode, 
 		SQL_API_SQLTABLES, catalog, schemaPattern, 
@@ -92,11 +92,11 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTa
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTableTypes
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTableTypes
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTableTypes",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTableTypes",("..."));
 
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLTABLES, NULL, NULL, 
@@ -104,12 +104,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTa
 
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumns
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumns
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schemaPattern, 
   jstring tableNamePattern, jstring columnNamePattern)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumns",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumns",("..."));
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLCOLUMNS, catalog, schemaPattern, 
 		tableNamePattern, NULL, columnNamePattern, 0, 0, 0, 0, 0, 0, 1, NULL, NULL, NULL);
@@ -117,12 +117,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCo
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPrimaryKeys
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPrimaryKeys
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPrimaryKeys",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPrimaryKeys",("..."));
 
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLPRIMARYKEYS, catalog, schema, 
@@ -131,12 +131,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPr
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIndexInfo
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIndexInfo
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table, jboolean unique, jboolean approximate)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIndexInfo",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIndexInfo",("..."));
 	long	uniqueness = SQL_INDEX_ALL;
 	
 	if (unique)
@@ -149,11 +149,11 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIn
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTypeInfo
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTypeInfo
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTypeInfo",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTypeInfo",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLGETTYPEINFO, NULL, NULL, 
@@ -163,12 +163,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTy
 }
 
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getBestRowIdentifier
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getBestRowIdentifier
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table, jint scope, jboolean nullable)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getBestRowIdentifier",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getBestRowIdentifier",("..."));
 
 	long nullableODBC;
 
@@ -185,12 +185,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getBe
 }
 
 // getTablePrivileges added for V31 release 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTablePrivileges
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTablePrivileges
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTablePrivileges",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTablePrivileges",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLTABLEPRIVILEGES, catalog, schema, 
@@ -200,12 +200,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getTa
 }
 
 // getColumnPrivileges added for V31 release 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumnPrivileges
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumnPrivileges
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, 
 		jstring schemaPattern, jstring table, jstring columnNamePattern)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumnPrivileges",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getColumnPrivileges",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId, txid, autoCommit, txnMode, 
 		SQL_API_SQLCOLUMNPRIVILEGES, catalog, schemaPattern, 
@@ -214,12 +214,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCo
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
  
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getExportedKeys
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getExportedKeys
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getExportedKeys",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getExportedKeys",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLFOREIGNKEYS, catalog, schema, 
@@ -228,12 +228,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getEx
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getImportedKeys
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getImportedKeys
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring fkcatalog, jstring fkschema, 
 		jstring fktable)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getImportedKeys",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getImportedKeys",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLFOREIGNKEYS, NULL, NULL, 
@@ -242,12 +242,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getIm
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCrossReference
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCrossReference
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, jstring table, jstring fkcatalog, jstring fkschema, 
 		jstring fktable)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCrossReference",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCrossReference",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLFOREIGNKEYS, catalog, schema, 
@@ -256,12 +256,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getCr
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getVersionColumns
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getVersionColumns
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,  jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, jstring schema, 
 		jstring table)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getVersionColumns",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getVersionColumns",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId,  txid, autoCommit, txnMode, 
 		SQL_API_SQLSPECIALCOLUMNS, catalog, schema, 
@@ -270,12 +270,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getVe
 	FUNCTION_RETURN_PTR(rc, (NULL));
 }
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedures
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedures
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, 
 		jstring schemaPattern, jstring procNamePattern)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedures",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedures",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId, txid, autoCommit, txnMode,
 		SQL_API_SQLPROCEDURES, catalog, schemaPattern, 
@@ -285,12 +285,12 @@ JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getPr
 }
 
 
-JNIEXPORT jobject JNICALL Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedureColumns
+JNIEXPORT jobject JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedureColumns
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, 
   jboolean autoCommit, jint txnMode, jstring catalog, 
 		jstring schemaPattern, jstring procNamePattern, jstring columnNamePattern)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedureColumns",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXDatabaseMetaData_getProcedureColumns",("..."));
 	
 	jobject rc = getSQLCatalogsInfo(jenv, jobj, server, dialogueId, txid, autoCommit, txnMode, 
 		SQL_API_SQLPROCEDURECOLUMNS, catalog, schemaPattern, 
diff --git a/core/conn/jdbc_type2/native/SQLMXDriver.cpp b/core/conn/jdbc_type2/native/SQLMXDriver.cpp
index 1e844451ad..0f2a3e8122 100644
--- a/core/conn/jdbc_type2/native/SQLMXDriver.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXDriver.cpp
@@ -25,7 +25,7 @@
 //
 /**************************************************************************/
 /*
-  * Methods Changed: Java_org_trafodion_jdbc_t2_T2Driver_SQLMXInitialize(JNIEnv *, jclass, jstring, jint, jstring, jstring)
+  * Methods Changed: Java_org_apache_trafodion_jdbc_t2_T2Driver_SQLMXInitialize(JNIEnv *, jclass, jstring, jint, jstring, jstring)
   */
 #include <platform_ndcs.h>
 #include <sys/types.h> /* optional except for POSIX.1 */
@@ -45,7 +45,7 @@
 #include "SrvrCommon.h"
 #include "JdbcDriverGlobal.h"
 #include "SQLMXCommonFunctions.h"
-#include "org_trafodion_jdbc_t2_T2Driver.h"
+#include "org_apache_trafodion_jdbc_t2_T2Driver.h"
 #include "Debug.h"
 #include "GlobalInformation.h"
 #include "CommonLogger.h"
@@ -66,20 +66,20 @@ void setTM_enable_cleanup ()
   sv_envvar_setup = true;
 }
 
-JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_T2Driver_getPid (JNIEnv *env, jclass cls)
+JNIEXPORT jint JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_getPid (JNIEnv *env, jclass cls)
 {
 	return (jint)getpid();
 }
 /*
-* Class:     org_trafodion_jdbc_t2_T2Driver
+* Class:     org_apache_trafodion_jdbc_t2_T2Driver
 * Method:    SQLMXInitialize
 * Signature: (Ljava/lang/String;I)V
 */
 // MFC - added two parameters to set the MFC on/off and the directory
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_SQLMXInitialize(JNIEnv *jenv, jclass cls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_SQLMXInitialize(JNIEnv *jenv, jclass cls,
 																		 jstring language, jint nowaitOn, jstring moduleCaching, jstring compiledModuleLocation)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_SQLMXInitialize",("language=%s, nowaitOn=%ld",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_SQLMXInitialize",("language=%s, nowaitOn=%ld",
 		DebugJString(jenv,language),
 		nowaitOn));
 	const char 					*nLanguage;
@@ -236,14 +236,14 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_SQLMXInitialize(JNIEn
 
 
 /*
-* Class:     org_trafodion_jdbc_t2_T2Driver
+* Class:     org_apache_trafodion_jdbc_t2_T2Driver
 * Method:    setDefaultEncoding
 * Signature: (Ljava/lang/String;)V
 */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_setDefaultEncoding(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_setDefaultEncoding(JNIEnv *jenv, jclass jcls,
 																			jstring encoding)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_setDefaultEncoding",("encoding=%s",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_setDefaultEncoding",("encoding=%s",
 		DebugJString(jenv,encoding)));
 	gJNICache.defaultCharset = SQLCHARSETCODE_UNKNOWN;
 	if (encoding)
@@ -260,17 +260,17 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_setDefaultEncoding(JN
 
 
 /*
-* Class:     org_trafodion_jdbc_t2_T2Driver
+* Class:     org_apache_trafodion_jdbc_t2_T2Driver
 * Method:    setCharsetEncodingOverride
 * Signature: (I)Ljava/lang/String;
 * Note: This function is a generic implementation to allow setting the
 *       char set override encoding for the given charset (currently only the ISO88591
 *       column is allowed to be overriden)
 */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_setCharsetEncodingOverride(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_setCharsetEncodingOverride(JNIEnv *jenv, jclass jcls,
 																					jint charset, jstring encodingOverride)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_setCharsetEncodingOverride",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_setCharsetEncodingOverride",
 		("charset=%ld, encodingOverride=%s",charset, DebugJString(jenv,encodingOverride)));
 
 	//Added for connect/disconnect impro.
@@ -295,11 +295,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_setCharsetEncodingOve
 }
 
 /*
-* Class:     org_trafodion_jdbc_t2_T2Driver
+* Class:     org_apache_trafodion_jdbc_t2_T2Driver
 * Method:    checkLibraryVersion
 * Signature: (Ljava/lang/String;)V
 */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_checkLibraryVersion(JNIEnv *jenv, jclass jcls,
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_checkLibraryVersion(JNIEnv *jenv, jclass jcls,
 																			 jstring javaVproc)
 {
 
@@ -318,7 +318,7 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_checkLibraryVersion(J
 	//Added for R3.0 Transaction issue sol. 10-100430-9906
 
 
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_checkLibraryVersion",("javaVproc=%s",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_checkLibraryVersion",("javaVproc=%s",
 		DebugJString(jenv,javaVproc)));
 
 	// Set the TMLIB cleanup 
@@ -360,9 +360,9 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_T2Driver_checkLibraryVersion(J
 	FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_T2Driver_getDatabaseMajorVersionJNI(JNIEnv *jenv, jclass jcls)
+JNIEXPORT jint JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_getDatabaseMajorVersionJNI(JNIEnv *jenv, jclass jcls)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_getDatabaseMajorVersionJNI",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_getDatabaseMajorVersionJNI",("..."));
 
 	int databaseMajorVersion = TRAFODION_JDBCT2_VER_MAJOR;
 
@@ -370,9 +370,9 @@ JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_T2Driver_getDatabaseMajorVersi
 		("Database Major Version = %d", databaseMajorVersion));
 }
 
-JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_T2Driver_getDatabaseMinorVersionJNI(JNIEnv *jenv, jclass jcls)
+JNIEXPORT jint JNICALL Java_org_apache_trafodion_jdbc_t2_T2Driver_getDatabaseMinorVersionJNI(JNIEnv *jenv, jclass jcls)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_T2Driver_getDatabaseMinorVersionJNI",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_T2Driver_getDatabaseMinorVersionJNI",("..."));
 
 	int databaseMinorVersion=TRAFODION_JDBCT2_VER_MINOR;
 
diff --git a/core/conn/jdbc_type2/native/SQLMXPreparedStatement.cpp b/core/conn/jdbc_type2/native/SQLMXPreparedStatement.cpp
index 542e9f80f7..568239e1c2 100644
--- a/core/conn/jdbc_type2/native/SQLMXPreparedStatement.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXPreparedStatement.cpp
@@ -35,7 +35,7 @@
 #include <sqlext.h>
 #include "CoreCommon.h"
 #include "JdbcDriverGlobal.h"
-#include "org_trafodion_jdbc_t2_SQLMXPreparedStatement.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement.h"
 #include "SQLMXCommonFunctions.h"
 #ifdef _FASTPATH
 #include "CSrvrStmt.h"
@@ -46,14 +46,14 @@
 #include<sys/stat.h>// MFC
 
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_prepare
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_prepare
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit, jstring stmtLabel, jstring sql, jboolean isSelect,
  jint queryTimeout, jint holdability, jint jbatchSize, jint jfetchSize)
 {
 		int batchSize = jbatchSize;
 		int fetchSize = jfetchSize;
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_prepare",("..., isSelect=%d, batchSize=%ld, fetchSize=%ld, ...",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_prepare",("..., isSelect=%d, batchSize=%ld, fetchSize=%ld, ...",
 		isSelect,
 		batchSize,
 		fetchSize));
@@ -187,14 +187,14 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_prepare
 * execute() now contains an additional argument: contBatchOnError
 * venu changed dialogueId and stmtId from int to long
 */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_execute
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_execute
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit,  jint txnMode, jlong stmtId,
  jstring cursorName, jboolean isSelect, jint paramRowCount, jint paramCount,
  jobject paramValues, jint queryTimeout, jboolean isAnyLob, jstring iso88591Encoding,
  jobject resultSet, jboolean contBatchOnError)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_execute",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_execute",
 		("...txid=%ld, autoCommit=%s, txnMode=%ld, isSelect=%s, isAnyLob=%s, iso88591Encoding=%s resultSet=0x%08x, contBatchOnError=%s",
 		txid,
 		DebugBoolStr(autoCommit),
@@ -518,10 +518,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_execute
 	FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_resetFetchSize
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_resetFetchSize
   (JNIEnv *, jobject, jlong dialogueId, jlong stmtId, jint fetchSize)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_resetFetchSize",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_resetFetchSize",
 		("... dialogueId=0x%08x, , stmtId=%ld, fetchSize=%ld",
 		dialogueId,
 		stmtId,
@@ -531,13 +531,13 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_resetFe
 	FUNCTION_RETURN_VOID((NULL));
 }
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_cpqPrepareJNI
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_cpqPrepareJNI
 (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId,
  jint txid, jboolean autoCommit, jint txnMode,
  jstring moduleName, jint moduleVersion, jlong moduleTimestamp, jstring stmtName,
  jboolean isSelect, jint queryTimeout, jint holdability, jint batchSize, jint fetchSize, jstring  sql,jboolean isISUD)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXPreparedStatement_cpqPrepare",("...txid=%ld, autoCommit=%s, ...\
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXPreparedStatement_cpqPrepare",("...txid=%ld, autoCommit=%s, ...\
 																			  txnMode=%ld, isSelect=%s, \
 																			  holdability=%ld, isISUD=%d...",
 																			  txid,
diff --git a/core/conn/jdbc_type2/native/SQLMXResultSet.cpp b/core/conn/jdbc_type2/native/SQLMXResultSet.cpp
index a4c032e489..0b187dac84 100644
--- a/core/conn/jdbc_type2/native/SQLMXResultSet.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXResultSet.cpp
@@ -42,18 +42,18 @@
 #include "JdbcDriverGlobal.h"
 #include "CoreCommon.h"
 #include "SQLMXCommonFunctions.h"
-#include "org_trafodion_jdbc_t2_SQLMXResultSet.h"
-#include "org_trafodion_jdbc_t2_SQLMXStatement.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXResultSet.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXStatement.h"
 #include "CSrvrStmt.h"
 #include "SrvrCommon.h"
 #include "Debug.h"
 
-JNIEXPORT jboolean JNICALL Java_org_trafodion_jdbc_t2_SQLMXResultSet_fetchN
+JNIEXPORT jboolean JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_fetchN
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, jint txnMode,
 		jlong stmtId, 
 		jint maxRowCnt, jint queryTimeout, jint holdability)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXResultSet_fetchN",("server=%s, dialogueId=0x%08x, txid=0x%08x, txnMode=%ld, stmtId=0x%08x, maxRowCnt=%ld, queryTimeout=%ld, holdability=%ld",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_fetchN",("server=%s, dialogueId=0x%08x, txid=0x%08x, txnMode=%ld, stmtId=0x%08x, maxRowCnt=%ld, queryTimeout=%ld, holdability=%ld",
 		DebugJString(jenv,server),
 		dialogueId,
 		txid,
@@ -146,11 +146,11 @@ JNIEXPORT jboolean JNICALL Java_org_trafodion_jdbc_t2_SQLMXResultSet_fetchN
 
 //venu changed dialogueId and stmtId from int to long for 64 bit
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXResultSet_close
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_close
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, jboolean autoCommit, jint txnMode,
 	jlong stmtId, jboolean dropStmt)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXResultSet_close",("server=%s, dialogueId=0x%08x, txid=0x%08x, autoCommit=%s, txnMode=%ld, stmtId=0x%08x, dropStmt=%s",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_close",("server=%s, dialogueId=0x%08x, txid=0x%08x, autoCommit=%s, txnMode=%ld, stmtId=0x%08x, dropStmt=%s",
 		DebugJString(jenv,server),
 		dialogueId,
 		txid,
@@ -227,10 +227,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXResultSet_close
 }
 
 //venu changed dialogueId and stmtId from int to long for 64 bit 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXResultSet_getResultSetInfo
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_getResultSetInfo
   (JNIEnv *jenv, jobject jobj, jlong dialogueId, jlong stmtId, jobject RSInfo)
 {
-	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT,"Java_org_trafodion_jdbc_t2_SQLMXResultSet_getResultSetInfo",
+	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT,"Java_org_apache_trafodion_jdbc_t2_SQLMXResultSet_getResultSetInfo",
 		("dialogueId=0x%08x, stmtId=0x%08x, RSInfo=0x%08x",
 		dialogueId,
 		stmtId,
diff --git a/core/conn/jdbc_type2/native/SQLMXStatement.cpp b/core/conn/jdbc_type2/native/SQLMXStatement.cpp
index fb75f2b497..a10c2406c8 100644
--- a/core/conn/jdbc_type2/native/SQLMXStatement.cpp
+++ b/core/conn/jdbc_type2/native/SQLMXStatement.cpp
@@ -33,17 +33,17 @@
 #include <sqlext.h>
 #include "JdbcDriverGlobal.h"
 #include "CoreCommon.h"
-#include "org_trafodion_jdbc_t2_SQLMXStatement.h"
+#include "org_apache_trafodion_jdbc_t2_SQLMXStatement.h"
 #include "SQLMXCommonFunctions.h"
 #include "CSrvrConnect.h"
 #include "Debug.h"
 
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeDirect
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeDirect
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, jboolean autoCommit, jint txnMode, 
   jstring stmtLabel, jstring cursorName, jstring sql, jboolean isSelect, jint queryTimeout,
   jint holdability, jobject resultSet, jlong currentStmtId)
 {
-	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT,"Java_org_trafodion_jdbc_t2_SQLMXStatement_executeDirect",
+	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT,"Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeDirect",
 		("... dialogueId=0x%08x, txid=%ld, autoCommit=%s, stmtLabel=%s, cursorName=%s, sql=%s, txnMode=%ld, isSelect=%s, holdability=%ld, resultSet=0x%08x",
 		dialogueId,
 		txid,
@@ -200,11 +200,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeDirect
 }
 
 //venu changed dialogueId and stmtId from int to long for 64 bit
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeRS
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeRS
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, jboolean autoCommit, jint txnMode,
   jstring stmtLabel, jstring RSstmtLabel,  jboolean isSelect, jlong stmtId, jint ResultSetIndex, jobject resultSet)
 {
-	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT, "Java_org_trafodion_jdbc_t2_SQLMXStatement_executeRS",
+	FUNCTION_ENTRY_LEVEL(DEBUG_LEVEL_STMT, "Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeRS",
 	("...dialogueId=0x%08x, txid=0x%08x, stmtLabel=%s, RSstmtLabel=%s, isSelect=%s, stmtId=0x%08x, ResultSetIndex=%ld, resultSet=0x%08x",
         dialogueId,
 		txid,
@@ -311,11 +311,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeRS
 }
 
 //venu changed dialogueId and stmtId from int to long for 64 bit
-JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_close
+JNIEXPORT jint JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_close
   (JNIEnv *jenv, jclass jclass, jstring server, jlong dialogueId, 
 		jlong stmtId, jboolean dropStmt)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXStatement_close",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_close",
 		("... dialogueId=0x%08x, stmtId=%ld, dropStmt=%s",
 		dialogueId,
 		stmtId,
@@ -361,11 +361,11 @@ JNIEXPORT jint JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_close
 /* RFE: Batch update improvements
  * executeBatch() now contains an additional argument: contBatchOnError
  */
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeBatch
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeBatch
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jint txid, jboolean autoCommit, jint txnMode,  
   jstring stmtLabel, jstring cursorName, jobjectArray sqlCommands, jboolean isSelect, jint queryTimeout, jboolean contBatchOnError, jlong currentStmtId)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXStatement_executeBatch",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_executeBatch",
 		("... dialogueId=0x%08x, txid=%ld, autoCommit=%s, stmtLabel=%s, cursorName=%s,txnMode=%ld, isSelect=%s,contBatchOnError=%s ...",
 		dialogueId,
 		txid,
@@ -597,11 +597,11 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_executeBatch
 	FUNCTION_RETURN_VOID((NULL));
 }
 		
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_closeUsingLabel
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_closeUsingLabel
   (JNIEnv *jenv, jclass jclass, jstring server, jlong dialogueId, 
 		jstring stmtLabel, jboolean dropStmt)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXStatement_closeUsingLabel",("... stmtLabel=%s, dialogueId=0x%08x, dropStmt=%s",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_closeUsingLabel",("... stmtLabel=%s, dialogueId=0x%08x, dropStmt=%s",
 		DebugJString(jenv,stmtLabel),
 		dialogueId,
 		DebugBoolStr(dropStmt)));
@@ -650,10 +650,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_closeUsingLabel
 }
 
 //venu changed dialogueId and stmtId from int to long for 64 bit
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_cancel
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_cancel
   (JNIEnv *jenv, jobject jobj, jstring server, jlong dialogueId, jlong stmtId)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXStatement_cancel",("..."));
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_cancel",("..."));
 
 	ExceptionStruct				exception_;
 	ERROR_DESC_LIST_def			sqlWarning;
@@ -688,10 +688,10 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_cancel
 
 
 //venu changed dialogueId and stmtId from int to long for 64 bit
-JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_resetFetchSize
+JNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_resetFetchSize
   (JNIEnv *, jobject, jlong dialogueId, jlong stmtId, jint fetchSize)
 {
-	FUNCTION_ENTRY("Java_org_trafodion_jdbc_t2_SQLMXStatement_resetFetchSize",
+	FUNCTION_ENTRY("Java_org_apache_trafodion_jdbc_t2_SQLMXStatement_resetFetchSize",
 		("... dialogueId=0x%08x, , stmtId=%ld, fetchSize=%ld",
 		dialogueId,
 		stmtId,
@@ -704,13 +704,13 @@ JNIEXPORT void JNICALL Java_org_trafodion_jdbc_t2_SQLMXStatement_resetFetchSize
 long SQLMXStatement_EXECUTE_FAILED(void)
 {
 	FUNCTION_ENTRY("SQLMXStatement_EXECUTE_FAILED",(NULL));
-	FUNCTION_RETURN_NUMERIC(org_trafodion_jdbc_t2_SQLMXStatement_JNI_EXECUTE_FAILED,
-		("org_trafodion_jdbc_t2_SQLMXStatement_JNI_EXECUTE_FAILED"));
+	FUNCTION_RETURN_NUMERIC(org_apache_trafodion_jdbc_t2_SQLMXStatement_JNI_EXECUTE_FAILED,
+		("org_apache_trafodion_jdbc_t2_SQLMXStatement_JNI_EXECUTE_FAILED"));
 }
 
 long SQLMXStatement_SUCCESS_NO_INFO(void)
 {
 	FUNCTION_ENTRY("SQLMXStatement_SUCCESS_NO_INFO",(NULL));
-	FUNCTION_RETURN_NUMERIC(org_trafodion_jdbc_t2_SQLMXStatement_JNI_SUCCESS_NO_INFO,
-		("org_trafodion_jdbc_t2_SQLMXStatement_JNI_SUCCESS_NO_INFO"));
+	FUNCTION_RETURN_NUMERIC(org_apache_trafodion_jdbc_t2_SQLMXStatement_JNI_SUCCESS_NO_INFO,
+		("org_apache_trafodion_jdbc_t2_SQLMXStatement_JNI_SUCCESS_NO_INFO"));
 }
diff --git a/core/conn/jdbc_type2/pom.xml b/core/conn/jdbc_type2/pom.xml
new file mode 100644
index 0000000000..038b349858
--- /dev/null
+++ b/core/conn/jdbc_type2/pom.xml
@@ -0,0 +1,107 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <!-- 
+  @@@ START COPYRIGHT @@@                                                       
+
+  Licensed to the Apache Software Foundation (ASF) under one
+  or more contributor license agreements.  See the NOTICE file
+  distributed with this work for additional information
+  regarding copyright ownership.  The ASF licenses this file
+  to you under the Apache License, Version 2.0 (the
+          "License"); you may not use this file except in compliance
+  with the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing,
+  software distributed under the License is distributed on an
+  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  KIND, either express or implied.  See the License for the
+  specific language governing permissions and limitations
+  under the License.
+
+  @@@ END COPYRIGHT @@@
+  -->
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>org.apache.trafodion.jdbc</groupId>
+  <artifactId>trafjdbcT2</artifactId>
+  <packaging>jar</packaging>
+  <version>${env.TRAFODION_VER}</version> 
+  <name>jdbcT2</name>
+  <url>http://maven.apache.org</url>
+  <dependencies>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>3.8.1</version>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+<build>
+<plugins>
+<plugin>
+    <groupId>org.codehaus.mojo</groupId>
+    <artifactId>properties-maven-plugin</artifactId>
+    <version>1.0.0</version>
+    <executions>
+        <execution>
+        <phase>initialize</phase>
+        <goals>
+            <goal>read-project-properties</goal>
+        </goals>
+    <configuration>
+    <files>
+        <file>${basedir}/../../sqf/export/include/SCMBuildMan.mf</file>
+        <file>${basedir}/buildId</file>
+    </files>
+    </configuration>
+    </execution>
+    </executions>
+  </plugin>
+  <plugin>
+    <artifactId>maven-antrun-plugin</artifactId>
+    <version>1.8</version>
+    <executions>
+        <execution>
+        <phase>generate-sources</phase>
+        <configuration>
+        <tasks>
+        <copy file="${basedir}/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java-tmpl" tofile="${basedir}/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java" overwrite="true"/>
+        <replace token= "@@@@"  value="Traf_JDBC_Type2_Build_${bldId}"  file="${basedir}/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java">
+        </replace>
+        <copy file="${basedir}/LICENSE" todir="${basedir}/src/main/resources/META-INF" overwrite="true"/>
+        <copy file="${basedir}/NOTICE" todir="${basedir}/src/main/resources/META-INF" overwrite="true"/>
+        </tasks>
+        </configuration>
+        <goals>
+            <goal>run</goal>
+        </goals>
+        </execution>
+    </executions>
+  </plugin>
+  <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-jar-plugin</artifactId>
+        <version>2.4</version>
+        <configuration>
+            <archive>
+            <addMavenDescriptor>false</addMavenDescriptor>
+            <manifest>
+                <mainClass>org.apache.trafodion.jdbc.t2.DriverInfo</mainClass>
+                <classpathPrefix>dependency-jars/</classpathPrefix>
+            </manifest>
+            <manifestEntries>
+                <Implementation-Version-1>Version ${project.version}</Implementation-Version-1> 
+                <Implementation-Version-2>${TRAFODION_VER_PROD} Release ${project.version}</Implementation-Version-2>
+                <Implementation-Version-3>${Implementation-Version-3}</Implementation-Version-3>
+                <Implementation-Version-4>${Implementation-Version-4}</Implementation-Version-4>
+                <Implementation-Version-5>${Implementation-Version-5}</Implementation-Version-5>
+                <Implementation-Version-6>${Implementation-Version-6}</Implementation-Version-6>
+                <Product-Name>${project.name}</Product-Name>
+            </manifestEntries>
+            </archive>
+        </configuration>
+    </plugin>
+  </plugins>
+   </build>
+</project>
diff --git a/core/conn/jdbc_type2/samples/CreateDataSource.java b/core/conn/jdbc_type2/samples/CreateDataSource.java
index dccd12c85f..254fcbe1fe 100644
--- a/core/conn/jdbc_type2/samples/CreateDataSource.java
+++ b/core/conn/jdbc_type2/samples/CreateDataSource.java
@@ -44,7 +44,7 @@
 //
 import java.util.*;
 import javax.naming.*;
-import org.trafodion.jdbc.t2.SQLMXDataSource;
+import org.apache.trafodion.jdbc.t2.SQLMXDataSource;
 
 public class CreateDataSource {
 
diff --git a/core/conn/jdbc_type2/samples/HoldCursorSample.java b/core/conn/jdbc_type2/samples/HoldCursorSample.java
index ccbf01cdc2..973fe974a0 100644
--- a/core/conn/jdbc_type2/samples/HoldCursorSample.java
+++ b/core/conn/jdbc_type2/samples/HoldCursorSample.java
@@ -36,7 +36,7 @@ public static void main(String args[])
 
         try
         {
-            Class.forName("org.trafodion.jdbc.t2.T2Driver");
+            Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
         }
         catch (Exception e)
         {
diff --git a/core/conn/jdbc_type2/samples/ISO88591Sample.java b/core/conn/jdbc_type2/samples/ISO88591Sample.java
index e31e791ad8..7b136025c5 100644
--- a/core/conn/jdbc_type2/samples/ISO88591Sample.java
+++ b/core/conn/jdbc_type2/samples/ISO88591Sample.java
@@ -26,7 +26,7 @@
 public class ISO88591Sample
 {
     private static final String PROLOG = "ISO88591Sample: ";
-    private static final String JDBCDRIVER = "org.trafodion.jdbc.t2.T2Driver";
+    private static final String JDBCDRIVER = "org.apache.trafodion.jdbc.t2.T2Driver";
     private static final String URL = "jdbc:t2jdbc:";
     private static final String TBLNAME = "ISOTbl";
 
diff --git a/core/conn/jdbc_type2/samples/JdbcRowSetSample.java b/core/conn/jdbc_type2/samples/JdbcRowSetSample.java
index a4a5ae9c82..cec39ede67 100644
--- a/core/conn/jdbc_type2/samples/JdbcRowSetSample.java
+++ b/core/conn/jdbc_type2/samples/JdbcRowSetSample.java
@@ -21,7 +21,7 @@
 
 import java.sql.*;
 import java.math.BigDecimal;
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 public class JdbcRowSetSample
 {
@@ -38,7 +38,7 @@ public static void main(String args[])
 
 		try
 		{
-			Class.forName("org.trafodion.jdbc.t2.T2Driver");
+			Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
 		}
 		catch (Exception e)
 		{
diff --git a/core/conn/jdbc_type2/samples/LobSample.java b/core/conn/jdbc_type2/samples/LobSample.java
index cc1e302a2d..0f2753ad69 100644
--- a/core/conn/jdbc_type2/samples/LobSample.java
+++ b/core/conn/jdbc_type2/samples/LobSample.java
@@ -86,7 +86,7 @@ public static void main (String[] args)
   }
 
   try {
-	Class.forName("org.trafodion.jdbc.t2.T2Driver");
+	Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
   }
   catch (Exception e) {
 	e.printStackTrace();
diff --git a/core/conn/jdbc_type2/samples/MultiThreadTest.java b/core/conn/jdbc_type2/samples/MultiThreadTest.java
index a5fa17a16b..db527e51b2 100644
--- a/core/conn/jdbc_type2/samples/MultiThreadTest.java
+++ b/core/conn/jdbc_type2/samples/MultiThreadTest.java
@@ -33,7 +33,7 @@ public static void main(String[] args)
             noOfThreads = 2;
         try
         {
-            Class.forName("org.trafodion.jdbc.t2.T2Driver");
+            Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
         }
         catch (ClassNotFoundException e1)
         {
diff --git a/core/conn/jdbc_type2/samples/T2Sample.java b/core/conn/jdbc_type2/samples/T2Sample.java
index 0bf93f6767..8a342ca033 100644
--- a/core/conn/jdbc_type2/samples/T2Sample.java
+++ b/core/conn/jdbc_type2/samples/T2Sample.java
@@ -36,7 +36,7 @@ public static void main(String args[])
 
         try
         {
-            Class.forName("org.trafodion.jdbc.t2.T2Driver");
+            Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
         }
         catch (Exception e)
         {
diff --git a/core/conn/jdbc_type2/samples/TestConnectionPool.java b/core/conn/jdbc_type2/samples/TestConnectionPool.java
index 800a6d94a9..38886d3b02 100644
--- a/core/conn/jdbc_type2/samples/TestConnectionPool.java
+++ b/core/conn/jdbc_type2/samples/TestConnectionPool.java
@@ -90,24 +90,24 @@ public static void main(String args[])
                     // Connection using plain DataSource
                     // Statement pooling is enabled
                     ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(100);
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(5);
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMinPoolSize(5);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(100);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(5);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMinPoolSize(5);
                     break;
                 case 1:
                     // Connection using plain DataSource
                     // Statement pooling is disabled
                     ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(0);
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(5);
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMinPoolSize(5);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(0);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(5);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMinPoolSize(5);
                     break;
                 case 2:
                     // Connection using plain DataSource
                     // Statement pooling is disabled
                     ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(0);
-                    ((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(-1);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxStatements(0);
+                    ((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setMaxPoolSize(-1);
                     break;
                 default:
                     System.out.println("Invalid test type.");
diff --git a/core/conn/jdbc_type2/samples/TransactionMode.java b/core/conn/jdbc_type2/samples/TransactionMode.java
index 48643b8255..152145f290 100644
--- a/core/conn/jdbc_type2/samples/TransactionMode.java
+++ b/core/conn/jdbc_type2/samples/TransactionMode.java
@@ -135,17 +135,17 @@ private static void initDS(String[] args)
 				case 1:
 					System.out.println(PROLOG + "Testing 'internal' transactionMode");
 					ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-					((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("internal");
+					((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("internal");
 					break;
 				case 2:
 					System.out.println(PROLOG + "Testing 'mixed' transactionMode");
 					ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-					((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("mixed");
+					((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("mixed");
 					break;
 				case 3:
 					System.out.println(PROLOG + "Testing 'external' transactionMode");
 					ds = (DataSource)ctx.lookup("jdbc/TestDataSource");
-					((org.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("external");
+					((org.apache.trafodion.jdbc.t2.SQLMXDataSource)ds).setTransactionMode("external");
 					break;
 				default:
 					System.out.println(PROLOG + "Invalid test type.");
diff --git a/core/conn/jdbc_type2/src/main/java/JdbcMxLobAdmin.java b/core/conn/jdbc_type2/src/main/java/JdbcMxLobAdmin.java
index 205ad78c78..c3fa7b6e4f 100644
--- a/core/conn/jdbc_type2/src/main/java/JdbcMxLobAdmin.java
+++ b/core/conn/jdbc_type2/src/main/java/JdbcMxLobAdmin.java
@@ -85,7 +85,7 @@ else if(s.equals("-bigblock")){
 		try
 		{
 			if (create || trigger || drop)
-				Class.forName("org.trafodion.jdbc.t2.T2Driver");
+				Class.forName("org.apache.trafodion.jdbc.t2.T2Driver");
 			if (fileName != null)
 				out_ = new PrintStream(new FileOutputStream(fileName, true), true);
 			else
diff --git a/core/conn/jdbc_type2/src/main/java/JdbcT2.java b/core/conn/jdbc_type2/src/main/java/JdbcT2.java
index 273a0121f1..81295a2740 100644
--- a/core/conn/jdbc_type2/src/main/java/JdbcT2.java
+++ b/core/conn/jdbc_type2/src/main/java/JdbcT2.java
@@ -29,6 +29,6 @@ public static void main(String[] args)
            return;
        }
        if (args[0].equals("-version"))
-           System.out.println(org.trafodion.jdbc.t2.T2Driver.driverVproc);
+           System.out.println(org.apache.trafodion.jdbc.t2.T2Driver.driverVproc);
    }
  }
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/CachedPreparedStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/CachedPreparedStatement.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/CachedPreparedStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/CachedPreparedStatement.java
index 18145cfbda..1a6fc273b0 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/CachedPreparedStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/CachedPreparedStatement.java
@@ -29,7 +29,7 @@
  * Methods Changed: getPreparedStatement(), close(boolean ),
  *                  CachedPreparedStatement(PreparedStatement ,String )
  */ 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.*;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DataWrapper.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DataWrapper.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DataWrapper.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DataWrapper.java
index 32ca44bfb7..f0609ecc4a 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DataWrapper.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DataWrapper.java
@@ -26,7 +26,7 @@
  /*
   * Methods Changed: convertStringToNumeric()
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 
 import java.math.BigDecimal;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DriverInfo.java-tmpl b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java-tmpl
similarity index 88%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DriverInfo.java-tmpl
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java-tmpl
index 1ea153bcf0..dbd6051be8 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/DriverInfo.java-tmpl
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/DriverInfo.java-tmpl
@@ -19,15 +19,17 @@
 //
 // @@@ END COPYRIGHT @@@
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 class DriverInfo {
 
 	static final String driverVproc = "@@@@";
-	static final String driverProductVersion = "###";
 	static final int JdbcMajorVersion = 1;
 	static final int JdbcMinorVersion = 0;
 
 	DriverInfo() {
 	}
+    public static void main(String[] args) {
+        System.out.println(driverVproc);
+    }
 }
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebug.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebug.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebug.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebug.java
index 8bb3f30bbf..9f6472b705 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebug.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebug.java
@@ -22,7 +22,7 @@
  * Filename    : JdbcDebug.java
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 class JdbcDebug
 {
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebugCfg.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebugCfg.java
similarity index 96%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebugCfg.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebugCfg.java
index bd0eb887e3..e938a920c8 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/JdbcDebugCfg.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/JdbcDebugCfg.java
@@ -20,7 +20,7 @@
 // @@@ END COPYRIGHT @@@
 
 // Java tracing is always disabled in this build environment
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 class JdbcDebugCfg
 {
 	static final boolean entryActive = false;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/Messages.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/Messages.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/Messages.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/Messages.java
index a8e95a40c4..8bf7d642b6 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/Messages.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/Messages.java
@@ -23,7 +23,7 @@
  * Filename    : Messages.java
  */
  
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.util.MissingResourceException;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/PreparedStatementManager.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/PreparedStatementManager.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/PreparedStatementManager.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/PreparedStatementManager.java
index ce746ba9eb..39648aff75 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/PreparedStatementManager.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/PreparedStatementManager.java
@@ -26,7 +26,7 @@
  /*
  * Method Changed : addPreparedStatement & getPreparedStatement
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.*;
@@ -419,7 +419,7 @@ PreparedStatement getPreparedStatement(SQLMXConnection connect, String sql,
 				if (cachedStmt != null) {
 					if (!cachedStmt.inUse_) {
 						pStmt = cachedStmt.getPreparedStatement();
-						((org.trafodion.jdbc.t2.SQLMXPreparedStatement) pStmt)
+						((org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement) pStmt)
 								.reuse(connect, resultSetType,
 										resultSetConcurrency,
 										resultSetHoldability);
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/ResultSetInfo.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/ResultSetInfo.java
similarity index 97%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/ResultSetInfo.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/ResultSetInfo.java
index 727ff1c71d..47a5ddf495 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/ResultSetInfo.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/ResultSetInfo.java
@@ -23,7 +23,7 @@
  * Filename    : ResultSetInfo.java
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.Connection;
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXBlob.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXBlob.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXBlob.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXBlob.java
index 66dad42680..3bbdf4acfa 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXBlob.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXBlob.java
@@ -25,7 +25,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXCallableStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXCallableStatement.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXCallableStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXCallableStatement.java
index 43f4a06db0..49ae07239f 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXCallableStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXCallableStatement.java
@@ -24,7 +24,7 @@
  * Description :
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.math.BigDecimal;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClob.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClob.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClob.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClob.java
index ed8f24b322..1d9f03b29a 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClob.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClob.java
@@ -25,7 +25,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobReader.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobReader.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobReader.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobReader.java
index 3d269dcf5a..9d2e46d0af 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobReader.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobReader.java
@@ -27,7 +27,7 @@
  *               to read the clob data
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.Reader;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobWriter.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobWriter.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobWriter.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobWriter.java
index e55eee75b5..a489c3e835 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXClobWriter.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXClobWriter.java
@@ -27,7 +27,7 @@
  *      the clob data
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.Writer;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnection.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnection.java
index a1228c47af..0f0835d1e0 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnection.java
@@ -23,7 +23,7 @@
  * Filename	: SQLMXConnection.java
  * Description :
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.FileOutputStream;
 import java.io.PrintWriter;
@@ -2921,15 +2921,15 @@ public long getDialogueId_() throws SQLException {
      * @param tracer the tracer to set
      */
 public void setTracer(PrintWriter tracer) {
-        setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-                + org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
+        setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+                + org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
                 + "]:["
                 + Thread.currentThread()
                 + "]:["
                 + System.identityHashCode(this)
                 + "]:"
                 + this.getClass().getName().substring(
-                        org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, this.getClass().getName()
+                        org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, this.getClass().getName()
                         .length()) + ".");
         this.out_ = tracer;
     }
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java
index f099ab0e7f..ffb3ac6f53 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSource.java
@@ -24,7 +24,7 @@
  * Description :
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.PrintWriter;
 import java.sql.*;
@@ -135,7 +135,7 @@ public Reference getReference() throws NamingException {
 			Reference ref;
 
 			ref = new Reference(this.getClass().getName(),
-					"org.trafodion.jdbc.t2.SQLMXConnectionPoolDataSourceFactory",
+					"org.apache.trafodion.jdbc.t2.SQLMXConnectionPoolDataSourceFactory",
 					null);
 			ref = super.addReferences(ref);
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java
similarity index 97%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java
index e149963ca2..2ce80b7fde 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXConnectionPoolDataSourceFactory.java
@@ -24,7 +24,7 @@
  * Description :
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.util.Enumeration;
 import java.util.Hashtable;
@@ -64,7 +64,7 @@ public Object getObjectInstance(Object refobj, Name name, Context nameCtx,
 			String tmp;
 
 			if (ref.getClassName().equals(
-					"org.trafodion.jdbc.t2.SQLMXConnectionPoolDataSource")) {
+					"org.apache.trafodion.jdbc.t2.SQLMXConnectionPoolDataSource")) {
 				Properties props = new Properties();
 				for (Enumeration enum2 = ref.getAll(); enum2.hasMoreElements();) {
 					RefAddr tRefAddr = (RefAddr) enum2.nextElement();
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataLocator.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataLocator.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataLocator.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataLocator.java
index cad90d419b..487c436fe7 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataLocator.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataLocator.java
@@ -26,7 +26,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 //import com.tandem.tmf.*;		// Linux port - ToDo
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSource.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSource.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSource.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSource.java
index c40af3fa87..bbca284035 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSource.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSource.java
@@ -36,7 +36,7 @@
  * Methods Changed: static{} block
  *                : getConnection()
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.PrintWriter;
 import java.sql.*;
@@ -56,7 +56,7 @@
 import java.lang.ref.*;
 import java.util.HashMap;
 import java.util.logging.Logger;
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import java.io.File;
 import java.io.IOException;
@@ -269,7 +269,7 @@ public Reference getReference() throws NamingException {
 		try {
 			Reference ref;
 
-			ref = new Reference(this.getClass().getName(),"org.trafodion.jdbc.t2.SQLMXDataSourceFactory", null);
+			ref = new Reference(this.getClass().getName(),"org.apache.trafodion.jdbc.t2.SQLMXDataSourceFactory", null);
 			ref = super.addReferences(ref);
 
 			return ref;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSourceFactory.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSourceFactory.java
similarity index 96%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSourceFactory.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSourceFactory.java
index 48c8d0e837..8ec4bdfc41 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDataSourceFactory.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDataSourceFactory.java
@@ -24,7 +24,7 @@
  * Description :
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.util.Enumeration;
 import java.util.Hashtable;
@@ -61,7 +61,7 @@ public Object getObjectInstance(Object refobj,
 			String		dataSourceName = null;
 			String		tmp;
 
-			if (ref.getClassName().equals("org.trafodion.jdbc.t2.SQLMXDataSource"))
+			if (ref.getClassName().equals("org.apache.trafodion.jdbc.t2.SQLMXDataSource"))
 			{
 
 				Properties props = new Properties();
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java
index 643b59050f..77417943a1 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDatabaseMetaData.java
@@ -25,9 +25,13 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
-import java.sql.*;
+import java.sql.Connection;
+import java.sql.ResultSet;
+import java.sql.RowIdLifetime;
+import java.sql.SQLException;
+import java.sql.Types;
 
 /**
  * Comprehensive information about the database as a whole.
@@ -272,7 +276,7 @@ public String getDatabaseProductVersion() throws SQLException {
 	/**
 	 * Retrieves the name of this JDBC driver.
 	 * 
-	 * @return org.trafodion.jdbc.t2.T2Driver
+	 * @return org.apache.trafodion.jdbc.t2.T2Driver
 	 * @throws SQLException
 	 *             - if a database access error occurs
 	 **/
@@ -280,7 +284,7 @@ public String getDriverName() throws SQLException {
 		if (JdbcDebugCfg.entryActive)
 			debug[methodId_getDriverName].methodEntry();
 		try {
-			return new String("org.trafodion.jdbc.t2.T2Driver");
+			return new String("org.apache.trafodion.jdbc.t2.T2Driver");
 		} finally {
 			if (JdbcDebugCfg.entryActive)
 				debug[methodId_getDriverName].methodExit();
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDesc.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDesc.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDesc.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDesc.java
index 34d3c2fa0c..0e8531001b 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXDesc.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXDesc.java
@@ -24,7 +24,7 @@
  * Description :
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.util.Locale;
 import java.sql.*;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXHandle.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXHandle.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXHandle.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXHandle.java
index d84f91ceb0..9c30330e2e 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXHandle.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXHandle.java
@@ -23,7 +23,7 @@
  * Filename    : SQLMXHandle.java
  * Description : 
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.util.Locale;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXJdbcRowSet.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXJdbcRowSet.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXJdbcRowSet.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXJdbcRowSet.java
index 8c9c28358f..7a72a78a56 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXJdbcRowSet.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXJdbcRowSet.java
@@ -24,7 +24,7 @@
  * Description :	
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.*;
 import java.math.BigDecimal;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLob.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLob.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLob.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLob.java
index e610355411..f48c3bae76 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLob.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLob.java
@@ -25,7 +25,7 @@
  *     common methods are implemented here
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobInputStream.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobInputStream.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobInputStream.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobInputStream.java
index 08d990e371..f4cf5e42e0 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobInputStream.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobInputStream.java
@@ -28,7 +28,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobOutputStream.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobOutputStream.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobOutputStream.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobOutputStream.java
index 27ed154952..64da030f38 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXLobOutputStream.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXLobOutputStream.java
@@ -28,7 +28,7 @@
  */
 
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.OutputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java
index b144266525..7413448341 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMaxIdleTimeRunnable.java
@@ -19,7 +19,7 @@
 //
 // @@@ END COPYRIGHT @@@
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.SQLException;
 import java.util.Iterator;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMessages.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMessages.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMessages.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMessages.java
index 5237e0a714..e95b292a2c 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXMessages.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXMessages.java
@@ -25,7 +25,7 @@
  *
  */
  
- package org.trafodion.jdbc.t2;
+ package org.apache.trafodion.jdbc.t2;
 
  import java.sql.*;
  import java.util.MissingResourceException;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXParameterMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXParameterMetaData.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXParameterMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXParameterMetaData.java
index 46ec68ae9c..320b5a2a39 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXParameterMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXParameterMetaData.java
@@ -23,7 +23,7 @@
  * Filename    : SQLMXParameterMetaData.java
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnection.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnection.java
index fa0cc162e3..697593283f 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnection.java
@@ -29,7 +29,7 @@
  * 
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.*;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java
index be260e5085..f0561e3b8c 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPooledConnectionManager.java
@@ -23,14 +23,14 @@
  * Filename : SQLMXPooledConnectionManager.java
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.*;
 import java.util.Properties;
 import java.util.LinkedList;
 import java.io.PrintWriter;
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 import java.util.Date;
 
 public class SQLMXPooledConnectionManager implements javax.sql.ConnectionEventListener
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPreparedStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPreparedStatement.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPreparedStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPreparedStatement.java
index fc1cf2552d..6d83ae8fcb 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXPreparedStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXPreparedStatement.java
@@ -22,7 +22,7 @@
 /* -*-java-*-
  * Filename : SQLMXPreparedStatement.java
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.InputStream;
 import java.io.Reader;
@@ -170,7 +170,7 @@
  * </table>
  *
  * @see ResultSet
- * @see org.trafodion.jdbc.t2.SQLMXConnection#prepareStatement
+ * @see org.apache.trafodion.jdbc.t2.SQLMXConnection#prepareStatement
  * @version HP JDBC/MX
  *
  */
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSet.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSet.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSet.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSet.java
index 56863d4b9a..62c5a4316e 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSet.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSet.java
@@ -26,7 +26,7 @@
  *			that queries the database.
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.InputStream;
 import java.io.PrintWriter;
@@ -2470,7 +2470,7 @@ public boolean next() throws SQLException {
 							// prevent potential customer regression due to
 							// behavior change.
 							if (connection_.isClosed_) {
-								if (stmt_ instanceof org.trafodion.jdbc.t2.SQLMXPreparedStatement)
+								if (stmt_ instanceof org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement)
 									close(false);
 								else
 									close(true);
@@ -3605,7 +3605,7 @@ void close(boolean dropStmt) throws SQLException {
 				} finally {
 					isClosed_ = true;
 					if (stmt_ != null) {
-						if (!(stmt_ instanceof org.trafodion.jdbc.t2.SQLMXPreparedStatement)) {
+						if (!(stmt_ instanceof org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement)) {
 							connection_.removeElement(stmt_);
 							stmt_.resultSet_ = null;
 						}
@@ -4270,11 +4270,11 @@ public void setTraceId(String traceId_) {
 	}
 
 	public String getTraceId() {
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new java.util.Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new java.util.Date()) 
 				+ "]:[" + Thread.currentThread() + "]:["
 				+ System.identityHashCode(this) +  "]:"
-				+ this.getClass().getName().substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,this.getClass().getName().length()) 
+				+ this.getClass().getName().substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,this.getClass().getName().length()) 
 				+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSetMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSetMetaData.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSetMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSetMetaData.java
index ee641aa038..7599f8337f 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXResultSetMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXResultSetMetaData.java
@@ -23,7 +23,7 @@
 // Filename :	SQLMXResultSetMetaData.java
 //
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXStatement.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXStatement.java
index 1a6afa85a4..836a10fac1 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXStatement.java
@@ -24,7 +24,7 @@
  * Description	:
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.lang.ref.WeakReference;
 import java.sql.BatchUpdateException;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXWeakConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXWeakConnection.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXWeakConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXWeakConnection.java
index 282039c14b..e4080f8727 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/SQLMXWeakConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/SQLMXWeakConnection.java
@@ -25,7 +25,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.lang.ref.*;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Driver.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Driver.java
similarity index 97%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Driver.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Driver.java
index ae68a846a0..1555167845 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Driver.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Driver.java
@@ -23,18 +23,19 @@
  * Filename    : T2Driver.java
  * Description :
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
-import java.util.*;
-import java.sql.*;
-import java.util.HashMap;
-import java.io.PrintWriter;
-import java.io.FileOutputStream;
-import java.util.Date;
-import java.util.logging.Logger;
+
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
-
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Locale;
+import java.util.logging.Logger;
 
 public class T2Driver extends T2Properties implements java.sql.Driver {
 	// The vproc needs to be exposed public so JdbcT2.java can access it
@@ -240,7 +241,7 @@ static int getDatabaseMinorVersion() {
 	// Text which will be pre-appended to jdbcTrace output.
 	public static String traceText = "jdbcTrace:[";
 
-	// Number of characters required to strip off the "org.trafodion.jdbc.t2."
+	// Number of characters required to strip off the "org.apache.trafodion.jdbc.t2."
 	// from the method name in jdbcTrace output.
 	public static int REMOVE_PKG_NAME = 17;
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Properties.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Properties.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Properties.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Properties.java
index 17073eb09a..49223aac7c 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/T2Properties.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/T2Properties.java
@@ -19,7 +19,7 @@
 //
 // @@@ END COPYRIGHT @@@
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.File;
 import java.io.FileInputStream;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TBlob.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TBlob.java
similarity index 93%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TBlob.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TBlob.java
index 70078b7038..d7f6fcafb4 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TBlob.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TBlob.java
@@ -24,7 +24,7 @@
  *
  * --------------------------------------------------------------------
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -117,11 +117,11 @@ public String getTraceId() {
             className = blob_.getClass().getName();
 
         // Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText 
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText 
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(blob_) +  "]:"
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
         
 		return traceId_;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TCallableStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TCallableStatement.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TCallableStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TCallableStatement.java
index 96077751b1..0bff65a036 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TCallableStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TCallableStatement.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.math.BigDecimal;
@@ -37,7 +37,7 @@
 import java.io.Reader;
 import java.util.Date;
 
-import org.trafodion.jdbc.t2.SQLMXStatement;
+import org.apache.trafodion.jdbc.t2.SQLMXStatement;
 
 public class TCallableStatement extends TPreparedStatement implements
 		java.sql.CallableStatement {
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClob.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClob.java
similarity index 93%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClob.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClob.java
index e64ba32ebb..3e769d506b 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClob.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClob.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -129,11 +129,11 @@ public String getTraceId() {
             className = clob_.getClass().getName();
 
         // Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(clob_) +  "]:"
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ "."); 
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobReader.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobReader.java
similarity index 91%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobReader.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobReader.java
index 25aa14813b..aad9236f84 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobReader.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobReader.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -120,11 +120,11 @@ public String getTraceId() {
             className = cr_.getClass().getName();
 
         // Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(cr_) +  "]:"
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobWriter.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobWriter.java
similarity index 91%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobWriter.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobWriter.java
index f4bb4b308e..d2d54926db 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TClobWriter.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TClobWriter.java
@@ -24,7 +24,7 @@
  *
  * --------------------------------------------------------------------
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -108,11 +108,11 @@ public String getTraceId() {
             className = cw_.getClass().getName();
 
         // Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(cw_) +  "]:"
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnection.java
similarity index 97%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnection.java
index 503afc3a6a..2ef22da898 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnection.java
@@ -25,12 +25,12 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.PooledConnection;
 
-import org.trafodion.jdbc.t2.SQLMXStatement;
+import org.apache.trafodion.jdbc.t2.SQLMXStatement;
 
 import java.util.Map;
 import java.io.PrintWriter;
@@ -471,8 +471,8 @@ public PreparedStatement cpqPrepareStatement(String moduleName,
 					+ isSelect + ")");
 		}
 
-		if (connection_ instanceof org.trafodion.jdbc.t2.SQLMXConnection) {
-			stmt = ((org.trafodion.jdbc.t2.SQLMXConnection) connection_)
+		if (connection_ instanceof org.apache.trafodion.jdbc.t2.SQLMXConnection) {
+			stmt = ((org.apache.trafodion.jdbc.t2.SQLMXConnection) connection_)
 					.cpqPrepareStatement(moduleName, moduleVersion,
 							moduleTimestamp, stmtName, isSelect);
 		} else {
@@ -509,15 +509,15 @@ public String getTraceId() {
 		// Build up template portion of jdbcTrace output. Pre-appended to
 		// jdbcTrace entries.
 		// jdbcTrace:[XXXX]:[Thread[X,X,X]]:[XXXXXXXX]:ClassName.
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
 				+ "]:["
 				+ Thread.currentThread()
 				+ "]:["
 				+ System.identityHashCode(connection_)
 				+ "]:"
 				+ className.substring(
-						org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
+						org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
 								.length()) + ".");
 
 		return traceId_;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSource.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSource.java
similarity index 89%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSource.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSource.java
index 98d7c209df..b31fcb0482 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSource.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSource.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.PrintWriter;
 import java.sql.*;
@@ -141,7 +141,7 @@ public Reference getReference() throws NamingException
 			out_.println(getTraceId() + "getReference()");			
 		Reference ref;
 		
-		ref = new Reference(this.getClass().getName(), "org.trafodion.jdbc.t2.TConnectionPoolDataSourceFactory", null);
+		ref = new Reference(this.getClass().getName(), "org.apache.trafodion.jdbc.t2.TConnectionPoolDataSourceFactory", null);
 		ref.add(new StringRefAddr("description", description_));
 		ref.add(new StringRefAddr("traceDataSource", traceDataSource_));
 		return ref;
@@ -179,11 +179,11 @@ public String getTraceDataSource()
 			className = cpDS_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(cpDS_) +  "]:" 
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 	}
 
@@ -198,11 +198,11 @@ public String getTraceId() {
 		
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(this) +  "]:" 
-			+ getClass().getName().substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,getClass().getName().length()) 
+			+ getClass().getName().substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,getClass().getName().length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java
similarity index 93%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java
index 88f45d5b78..969a2b9cfb 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TConnectionPoolDataSourceFactory.java
@@ -24,7 +24,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.util.Hashtable;
 import javax.naming.Context;
@@ -50,7 +50,7 @@ public Object getObjectInstance(Object refobj,
 		TConnectionPoolDataSource cpDS;
 		RefAddr		refAddr;
 		
-		if (ref.getClassName().equals("org.trafodion.jdbc.t2.TConnectionPoolDataSource"))
+		if (ref.getClassName().equals("org.apache.trafodion.jdbc.t2.TConnectionPoolDataSource"))
 		{
         	refAddr = ref.get("traceDataSource");
 			if (refAddr != null)
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSource.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSource.java
similarity index 88%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSource.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSource.java
index 07aa01b56a..3f693ca361 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSource.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSource.java
@@ -26,7 +26,7 @@
  */
 
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.io.PrintWriter;
 import java.sql.*;
@@ -128,7 +128,7 @@ public void setLogWriter(PrintWriter out) throws SQLException
 		out_ = out;
 		if (out_ != null) 
 		{
-			out_.println(org.trafodion.jdbc.t2.T2Driver.printTraceVproc);
+			out_.println(org.apache.trafodion.jdbc.t2.T2Driver.printTraceVproc);
 			out_.println(getTraceId() + "setLogWriter("+ out + ")");			
 		}
 
@@ -145,7 +145,7 @@ public Reference getReference() throws NamingException
 			out_.println(getTraceId() + "getReference()");			
 		Reference ref;
 		
-		ref = new Reference(this.getClass().getName(), "org.trafodion.jdbc.t2.TDataSourceFactory", null);
+		ref = new Reference(this.getClass().getName(), "org.apache.trafodion.jdbc.t2.TDataSourceFactory", null);
 		ref.add(new StringRefAddr("description", description_));
 		ref.add(new StringRefAddr("traceDataSource", traceDataSource_));
 		return ref;
@@ -183,11 +183,11 @@ public String getTraceDataSource()
 			className = ds_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(ds_) +  "]:" 
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 	}
 
@@ -201,11 +201,11 @@ public void setTraceId(String traceId_) {
 
 	public String getTraceId() {
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(this) +  "]:" 
-			+ getClass().getName().substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,getClass().getName().length()) 
+			+ getClass().getName().substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,getClass().getName().length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSourceFactory.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSourceFactory.java
similarity index 94%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSourceFactory.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSourceFactory.java
index a44d1674de..a82e39257d 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDataSourceFactory.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDataSourceFactory.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.util.Hashtable;
 import javax.naming.Context;
@@ -51,7 +51,7 @@ public Object getObjectInstance(Object refobj,
 		TDataSource ds;
 		RefAddr		refAddr;
 		
-		if (ref.getClassName().equals("org.trafodion.jdbc.t2.TDataSource"))
+		if (ref.getClassName().equals("org.apache.trafodion.jdbc.t2.TDataSource"))
 		{
         	refAddr = ref.get("traceDataSource");
 			if (refAddr != null)
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDatabaseMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDatabaseMetaData.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDatabaseMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDatabaseMetaData.java
index 0b96a1f314..a1608f20da 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDatabaseMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDatabaseMetaData.java
@@ -25,13 +25,13 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.PrintWriter;
 import java.util.Date;
 
-import org.trafodion.jdbc.t2.SQLMXResultSet;
+import org.apache.trafodion.jdbc.t2.SQLMXResultSet;
 
 public class TDatabaseMetaData implements java.sql.DatabaseMetaData {
 
@@ -2182,15 +2182,15 @@ public String getTraceId() {
 			className = dbMD_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
 				+ "]:["
 				+ Thread.currentThread()
 				+ "]:["
 				+ System.identityHashCode(dbMD_)
 				+ "]:"
 				+ className.substring(
-						org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
+						org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
 								.length()) + ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDriver.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDriver.java
similarity index 87%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDriver.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDriver.java
index 610b3e1ac3..c122ebd280 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TDriver.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TDriver.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
  
- package org.trafodion.jdbc.t2;
+ package org.apache.trafodion.jdbc.t2;
  
  import java.sql.*;
  import java.io.PrintWriter;
@@ -124,11 +124,11 @@ String initTraceId(Driver driver)
 			className = driver.getClass().getName();
 
 			// Build up jdbcTrace output entry	
-			traceId = org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+			traceId = org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 				+ "]:[" + Thread.currentThread() + "]:["
 				+ System.identityHashCode(driver) +  "]:" 
-				+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+				+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 				+ ".";
 		
 		return traceId;
@@ -147,7 +147,7 @@ private Driver loadDriverClass(String url) throws SQLException
 			{
 				if (sqlmxDriver_ == null)
 				{
-					driverClassName = "org.trafodion.jdbc.t2.T2Driver";
+					driverClassName = "org.apache.trafodion.jdbc.t2.T2Driver";
 					driverClass = Class.forName(driverClassName);
 					sqlmxDriver_ = (Driver)driverClass.newInstance();
 				}
@@ -179,8 +179,8 @@ private Driver loadDriverClass(String url) throws SQLException
 		Class	driverClass;
 
 		// jdbcTrace output
-		DriverManager.println(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		DriverManager.println(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:info:Registering with the Driver Manager");
 
 		singleton_ = new TDriver();
@@ -197,8 +197,8 @@ private Driver loadDriverClass(String url) throws SQLException
 		driverClassName = System.getProperty("jdbc.trace.driver");
 
 		// jdbcTrace output
-		DriverManager.println(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		DriverManager.println(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:info:Tracing JDBC Driver " + driverClassName);
 
 		if (driverClassName != null)
@@ -218,8 +218,8 @@ private Driver loadDriverClass(String url) throws SQLException
 			}
 		}
 		// jdbcTrace output
-		DriverManager.println(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		DriverManager.println(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:info:JDBC Driver Tracing started");
 	}
 
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TJdbcRowSet.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TJdbcRowSet.java
similarity index 99%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TJdbcRowSet.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TJdbcRowSet.java
index e32c903573..8fe98ce05e 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TJdbcRowSet.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TJdbcRowSet.java
@@ -25,7 +25,7 @@
  */
 
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
@@ -36,7 +36,7 @@
 import java.util.Calendar;
 import java.util.Date;
 import java.util.Map;
-import org.trafodion.jdbc.t2.SQLMXJdbcRowSet;
+import org.apache.trafodion.jdbc.t2.SQLMXJdbcRowSet;
 
 import javax.sql.RowSetListener;
 import javax.sql.rowset.JdbcRowSet;
@@ -1966,11 +1966,11 @@ public String getTraceId() {
 			className = jrs_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(jrs_) +  "]:"
-			+ jrs_.getClass().getName().substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ jrs_.getClass().getName().substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobInputStream.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobInputStream.java
similarity index 91%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobInputStream.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobInputStream.java
index 016f0b8e28..a85eacd73a 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobInputStream.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobInputStream.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -120,11 +120,11 @@ public String getTraceId() {
 	            className = is_.getClass().getName();
 
 	        // Build up jdbcTrace output entry
-			setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+			setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 				+ "]:[" + Thread.currentThread() + "]:["
 				+ System.identityHashCode(is_) +  "]:"
-				+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+				+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 				+ ".");    
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobOutputStream.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobOutputStream.java
similarity index 90%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobOutputStream.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobOutputStream.java
index d0850ea1a8..76717d12ad 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TLobOutputStream.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TLobOutputStream.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.*;
@@ -93,11 +93,11 @@ public String getTraceId() {
 	            className = os_.getClass().getName();
 
 	        // Build up jdbcTrace output entry
-			setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+			setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 				+ "]:[" + Thread.currentThread() + "]:["
 				+ System.identityHashCode(os_) +  "]:"
-				+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+				+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 				+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TParameterMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TParameterMetaData.java
similarity index 93%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TParameterMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TParameterMetaData.java
index 43243053cd..c3b6ac149f 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TParameterMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TParameterMetaData.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.PrintWriter;
@@ -143,11 +143,11 @@ public String getTraceId() {
 			className = pmd_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(pmd_) +  "]:" 
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 
 		return traceId_;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPooledConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPooledConnection.java
similarity index 91%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPooledConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPooledConnection.java
index 83779cb432..e80d9d2264 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPooledConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPooledConnection.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import javax.sql.*;
@@ -82,11 +82,11 @@ public String getTraceId() {
 			className =  pc_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(pc_) +  "]:" 
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPreparedStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPreparedStatement.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPreparedStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPreparedStatement.java
index aee89d76c6..0eefc5347b 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TPreparedStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TPreparedStatement.java
@@ -23,7 +23,7 @@
  * Description :
  *
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
@@ -34,8 +34,8 @@
 import java.net.URL;
 import java.util.Date;
 
-import org.trafodion.jdbc.t2.SQLMXResultSet;
-import org.trafodion.jdbc.t2.SQLMXStatement;
+import org.apache.trafodion.jdbc.t2.SQLMXResultSet;
+import org.apache.trafodion.jdbc.t2.SQLMXStatement;
 
 public class TPreparedStatement extends TStatement implements
 		java.sql.PreparedStatement {
@@ -348,8 +348,8 @@ public ParameterMetaData getParameterMetaData() throws SQLException {
 		if (out_ != null)
 			out_.println(getTraceId() + "getParameterMetaData()");
 
-		if (stmt_ instanceof org.trafodion.jdbc.t2.SQLMXPreparedStatement)
-			pmd = ((org.trafodion.jdbc.t2.SQLMXPreparedStatement) stmt_)
+		if (stmt_ instanceof org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement)
+			pmd = ((org.apache.trafodion.jdbc.t2.SQLMXPreparedStatement) stmt_)
 					.getParameterMetaData();
 		else
 			pmd = null;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSet.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSet.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSet.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSet.java
index cd8804786b..90b5b0e4cc 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSet.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSet.java
@@ -24,7 +24,7 @@
  *
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.InputStream;
@@ -590,13 +590,13 @@ public Ref getRef(String columnName) throws SQLException
 		return retValue;
 	}
 
-	public org.trafodion.jdbc.t2.ResultSetInfo getResultSetInfo() throws SQLException
+	public org.apache.trafodion.jdbc.t2.ResultSetInfo getResultSetInfo() throws SQLException
 	{
 		if (out_ != null)
 			out_.println(getTraceId() + "getResultSetInfo()");
-		org.trafodion.jdbc.t2.ResultSetInfo retValue;
+		org.apache.trafodion.jdbc.t2.ResultSetInfo retValue;
 		
-		retValue = ((org.trafodion.jdbc.t2.SQLMXResultSet)rs_).getResultSetInfo();
+		retValue = ((org.apache.trafodion.jdbc.t2.SQLMXResultSet)rs_).getResultSetInfo();
 		return retValue;
 	}
 
@@ -1325,11 +1325,11 @@ public void updateRef(String str, Ref ref) throws SQLException
 		out_ = out;
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(rs_) +  "]:"
-			+ rs_.getClass().getName().substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,rs_.getClass().getName().length()) 
+			+ rs_.getClass().getName().substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,rs_.getClass().getName().length()) 
 			+ ".");
 	}
 	
@@ -1353,11 +1353,11 @@ public String getTraceId() {
 			className = rs_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(rs_) +  "]:"
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 		return traceId_;
 	}
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSetMetaData.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSetMetaData.java
similarity index 96%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSetMetaData.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSetMetaData.java
index 557b6b95d6..0a3d934084 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TResultSetMetaData.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TResultSetMetaData.java
@@ -25,7 +25,7 @@
  * --------------------------------------------------------------------
  */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.io.PrintWriter;
@@ -262,11 +262,11 @@ public String getTraceId() {
 			className = rsMD_.getClass().getName();
 
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-			+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+			+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date()) 
 			+ "]:[" + Thread.currentThread() + "]:["
 			+ System.identityHashCode(rsMD_) +  "]:" 
-			+ className.substring(org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
+			+ className.substring(org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME,className.length()) 
 			+ ".");
 
 		return traceId_;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TStatement.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TStatement.java
similarity index 97%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TStatement.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TStatement.java
index 9f14acb7fb..5593ccb511 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/TStatement.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/TStatement.java
@@ -24,7 +24,7 @@
  *
  * --------------------------------------------------------------------
  */
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.lang.String;
@@ -32,8 +32,8 @@
 import java.util.Vector;
 import java.io.PrintWriter;
 
-import org.trafodion.jdbc.t2.SQLMXResultSet;
-import org.trafodion.jdbc.t2.SQLMXStatement;
+import org.apache.trafodion.jdbc.t2.SQLMXResultSet;
+import org.apache.trafodion.jdbc.t2.SQLMXStatement;
 
 public class TStatement implements java.sql.Statement {
 	// java.sql.Statement interface Methods
@@ -423,14 +423,14 @@ public String getTraceId() {
 
 		// Build up jdbcTrace output entry
 		// Build up jdbcTrace output entry
-		setTraceId(org.trafodion.jdbc.t2.T2Driver.traceText
-				+ org.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
+		setTraceId(org.apache.trafodion.jdbc.t2.T2Driver.traceText
+				+ org.apache.trafodion.jdbc.t2.T2Driver.dateFormat.format(new Date())
 				+ "]:["
 				+ Thread.currentThread()
 				+ "]:["
 				+ label+ "]:"
 				+ className.substring(
-						org.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
+						org.apache.trafodion.jdbc.t2.T2Driver.REMOVE_PKG_NAME, className
 								.length()) + ".");
 		}
 		return traceId_;
diff --git a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/WeakConnection.java b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/WeakConnection.java
similarity index 98%
rename from core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/WeakConnection.java
rename to core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/WeakConnection.java
index 4703e023df..54326996ba 100644
--- a/core/conn/jdbc_type2/src/main/java/org/trafodion/jdbc/t2/WeakConnection.java
+++ b/core/conn/jdbc_type2/src/main/java/org/apache/trafodion/jdbc/t2/WeakConnection.java
@@ -24,7 +24,7 @@
 * Description	:
 */
 
-package org.trafodion.jdbc.t2;
+package org.apache.trafodion.jdbc.t2;
 
 import java.sql.*;
 import java.lang.ref.*;
diff --git a/core/rest/src/main/java/org/trafodion/rest/Constants.java b/core/rest/src/main/java/org/trafodion/rest/Constants.java
index 08fa1d7a33..aac952401e 100644
--- a/core/rest/src/main/java/org/trafodion/rest/Constants.java
+++ b/core/rest/src/main/java/org/trafodion/rest/Constants.java
@@ -170,7 +170,7 @@ public final class Constants {
   public static final boolean REST_MASTER_TRAFODION_QUERY_TOOLS_IS_NOT_ENABLED = false;
 
   /** T2 Driver name */
-  public static final String T2_DRIVER_CLASS_NAME = "org.trafodion.jdbc.t2.T2Driver";
+  public static final String T2_DRIVER_CLASS_NAME = "org.apache.trafodion.jdbc.t2.T2Driver";
   /** T2 Driver URL */
   public static final String T2_DRIVER_URL = "jdbc:t2jdbc:"; 
   /** CQD to turn table stats off */
diff --git a/core/sql/langman/LmLangManagerJava.cpp b/core/sql/langman/LmLangManagerJava.cpp
index 38713a921a..eb1f0ad62a 100644
--- a/core/sql/langman/LmLangManagerJava.cpp
+++ b/core/sql/langman/LmLangManagerJava.cpp
@@ -1457,8 +1457,8 @@ LmResult LmLanguageManagerJava::initJavaClasses()
   TIMER_OFF(set2ClsTimer, "Load Set 2 of classes");
     enableType2Conn_ = TRUE;
     mapDefaultConnToType2Conn_ = TRUE;
-    jdbcMxT2Driver_ = loadSysClass("org/trafodion/jdbc/t2/T2Driver",
-	                         "org.trafodion.jdbc.t2.T2Driver", diagsArea_);
+    jdbcMxT2Driver_ = loadSysClass("org/apache/trafodion/jdbc/t2/T2Driver",
+	                         "org.apache.trafodion.jdbc.t2.T2Driver", diagsArea_);
     if (jdbcMxT2Driver_ == NULL)
       return LM_ERR;
 
diff --git a/core/sql/src/main/java/org/trafodion/sql/udr/LmUtility.java b/core/sql/src/main/java/org/trafodion/sql/udr/LmUtility.java
index d321b74644..f6244182fd 100644
--- a/core/sql/src/main/java/org/trafodion/sql/udr/LmUtility.java
+++ b/core/sql/src/main/java/org/trafodion/sql/udr/LmUtility.java
@@ -74,8 +74,8 @@ public class LmUtility {
     static final int RS_INFO_ERROR                = 11235;
     static final int NO_COMPATIBLE_METHODS        = 11239;
 
-    static final String SQLMXRS_CLASS = "org.trafodion.jdbc.t2.SQLMXResultSet";
-    static final String RSINFO_CLASS = "org.trafodion.jdbc.t2.ResultSetInfo";
+    static final String SQLMXRS_CLASS = "org.apache.trafodion.jdbc.t2.SQLMXResultSet";
+    static final String RSINFO_CLASS = "org.apache.trafodion.jdbc.t2.ResultSetInfo";
     static final String GETRSINFO_METHOD = "getResultSetInfo";
     static final String GETVERSION_METHOD = "getVersion";
 
@@ -1243,7 +1243,7 @@ public static boolean initRS( long[] rsInfoVer )
        throws Exception
      {
 
-       // Load org.trafodion.jdbc.t2.SQLMXResultSet class
+       // Load org.apache.trafodion.jdbc.t2.SQLMXResultSet class
        // Get the method ID of SQLMXResultSet::getResultSetInfo()
        try {
          rsT2Cls_ = Class.forName( SQLMXRS_CLASS );
@@ -1262,7 +1262,7 @@ public static boolean initRS( long[] rsInfoVer )
          throw new Exception(t);
        }
 
-       // Load org.trafodion.jdbc.t2.ResultSetInfo class
+       // Load org.apache.trafodion.jdbc.t2.ResultSetInfo class
        // Get the public fields in the above class
        try {
          rsInfoCls_ = Class.forName( RSINFO_CLASS );
@@ -1355,9 +1355,9 @@ else if (type == ResultSet.TYPE_SCROLL_SENSITIVE)
      * Method to get data pertaining to a specific result set object. This
      * method calls the getResultSetInfo() method provided by the JDBC/MX
      * driver. The above method call returns a
-     * org.trafodion.jdbc.t2.ResultSetInfo object whose structure is as below.
+     * org.apache.trafodion.jdbc.t2.ResultSetInfo object whose structure is as below.
 
-     * class org.trafodion.jdbc.t2.ResultSetInfo
+     * class org.apache.trafodion.jdbc.t2.ResultSetInfo
      * {
      *   public:
      *	  boolean LOBDataDetected;
@@ -1423,12 +1423,12 @@ public static void getRSInfo( Object rsObj,
     Object rsInfoObj = null;
     
     // First check if the rsObj is an instance of 
-    // org.trafodion.jdbc.t2.SQLMXResultSet class
+    // org.apache.trafodion.jdbc.t2.SQLMXResultSet class
     if( !(rsT2Cls_.isInstance( rsObj )) ) {
       errCode[0] = RS_INFO_ERROR;
       errDetail[0] =
         "One or more returned result sets are not instances of " +
-        "class org.trafodion.jdbc.t2.SQLMXResultSet";
+        "class org.apache.trafodion.jdbc.t2.SQLMXResultSet";
       return;
     }
     
diff --git a/dcs/pom.xml b/dcs/pom.xml
index 291a5219c3..1fd7149065 100644
--- a/dcs/pom.xml
+++ b/dcs/pom.xml
@@ -658,8 +658,8 @@
          </dependency>
          <!-- JDBCT2 dependencies -->    
          <dependency>    
-            <groupId>org.trafodion.jdbc.t2.T2Driver</groupId>
-            <artifactId>t2driver</artifactId>
+            <groupId>org.apache.trafodion.jdbc</groupId>
+            <artifactId>trafjdbcT2</artifactId>
             <version>${jdbct2.version}</version>
          </dependency>
       </dependencies>
diff --git a/dcs/src/main/java/org/trafodion/dcs/Constants.java b/dcs/src/main/java/org/trafodion/dcs/Constants.java
index ae612157cf..ab20e2d5be 100644
--- a/dcs/src/main/java/org/trafodion/dcs/Constants.java
+++ b/dcs/src/main/java/org/trafodion/dcs/Constants.java
@@ -429,7 +429,7 @@ public final class Constants {
             + "." + TRAFODION_REPOS_SCHEMA + "." + "METRIC_QUERY_AGGR_TABLE";
 
     /** T2 Driver name */
-    public static final String T2_DRIVER_CLASS_NAME = "org.trafodion.jdbc.t2.T2Driver";
+    public static final String T2_DRIVER_CLASS_NAME = "org.apache.trafodion.jdbc.t2.T2Driver";
     /** T2 Driver URL */
     public static final String T2_DRIVER_URL = "jdbc:t2jdbc:";
     /** T2 Driver trace file */
diff --git a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiGetCatalogs.java b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiGetCatalogs.java
index 82b9bbc6be..8d3fec0a4c 100644
--- a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiGetCatalogs.java
+++ b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiGetCatalogs.java
@@ -29,7 +29,7 @@
 import java.nio.channels.spi.*;
 import java.sql.*;
 
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import org.trafodion.dcs.Constants;
 import org.trafodion.dcs.util.*;
diff --git a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecDirect.java b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecDirect.java
index c0eff7142d..4201f17f24 100644
--- a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecDirect.java
+++ b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecDirect.java
@@ -31,7 +31,7 @@
 import java.sql.*;
 import java.util.*;
 
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import org.trafodion.dcs.Constants;
 import org.trafodion.dcs.util.*;
diff --git a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecute.java b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecute.java
index d0c7a64618..4c3f9c0c57 100644
--- a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecute.java
+++ b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlExecute.java
@@ -36,7 +36,7 @@
 import java.text.ParseException;
 import java.math.*;
 
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import org.trafodion.dcs.Constants;
 import org.trafodion.dcs.util.*;
diff --git a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlFetch.java b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlFetch.java
index 911f4a58b2..73ef9a9436 100644
--- a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlFetch.java
+++ b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlFetch.java
@@ -33,7 +33,7 @@
 import java.lang.reflect.Array;
 import java.math.*;
 
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import org.trafodion.dcs.Constants;
 import org.trafodion.dcs.util.*;
diff --git a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlPrepare.java b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlPrepare.java
index 8654ce607e..c66c136e1a 100644
--- a/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlPrepare.java
+++ b/dcs/src/main/java/org/trafodion/dcs/servermt/serverHandler/ServerApiSqlPrepare.java
@@ -31,7 +31,7 @@
 import java.util.*;
 import java.math.*;
 
-import org.trafodion.jdbc.t2.*;
+import org.apache.trafodion.jdbc.t2.*;
 
 import org.trafodion.dcs.Constants;
 import org.trafodion.dcs.util.*;
diff --git a/dcs/src/test/jdbc_test/src/test/java/org/trafodion/jdbc_test/JdbcCommon.java b/dcs/src/test/jdbc_test/src/test/java/org/trafodion/jdbc_test/JdbcCommon.java
index 2005ce6c91..6ab5fca2df 100644
--- a/dcs/src/test/jdbc_test/src/test/java/org/trafodion/jdbc_test/JdbcCommon.java
+++ b/dcs/src/test/jdbc_test/src/test/java/org/trafodion/jdbc_test/JdbcCommon.java
@@ -94,7 +94,7 @@ protected static Connection getConnection() throws Exception {
                 if (_url.contains("t4jdbc"))
                     Class.forName("org.trafodion.jdbc.t4.T4Driver");   // T4 driver
                 else
-                    Class.forName("org.trafodion.jdbc.t2.T2Driver"); // T2 driver
+                    Class.forName("org.apache.trafodion.jdbc.t2.T2Driver"); // T2 driver
                 _driverRegistered = true;
             }
 
diff --git a/tests/phx/phoenix_test.py b/tests/phx/phoenix_test.py
index dc3974bb37..8673b53c77 100755
--- a/tests/phx/phoenix_test.py
+++ b/tests/phx/phoenix_test.py
@@ -575,7 +575,7 @@ def prog_parse_args():
         if req_envs_error_string:
             parser.error(req_envs_error_string)
 
-        myjdbc_groupid = 'org.trafodion.jdbc.t2.T2Driver'
+        myjdbc_groupid = 'org.apache.trafodion.jdbc.t2.T2Driver'
         myjdbc_artid = 't2driver'
 
     # Automatically generate the prop file if the user did not specify one
diff --git a/tests/phx/src/test/java/org/trafodion/phoenix/end2end/BaseTest.java b/tests/phx/src/test/java/org/trafodion/phoenix/end2end/BaseTest.java
index 6036ce6931..cbb5447076 100644
--- a/tests/phx/src/test/java/org/trafodion/phoenix/end2end/BaseTest.java
+++ b/tests/phx/src/test/java/org/trafodion/phoenix/end2end/BaseTest.java
@@ -847,7 +847,7 @@ else if (tgtType.equals("TR"))
                 if (url.contains("t4jdbc"))
                     Class.forName("org.trafodion.jdbc.t4.T4Driver");   // T4 driver
                 else
-                    Class.forName("org.trafodion.jdbc.t2.T2Driver"); // T2 driver
+                    Class.forName("org.apache.trafodion.jdbc.t2.T2Driver"); // T2 driver
                 driverRegistered = true;
             }
 

diff --git a/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/DictionaryBasedInvertedIndexCreator.java b/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/DictionaryBasedInvertedIndexCreator.java
index 329d4ef06ad..7d025c851cd 100644
--- a/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/DictionaryBasedInvertedIndexCreator.java
+++ b/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/DictionaryBasedInvertedIndexCreator.java
@@ -42,7 +42,7 @@
  *
  * <p>To create an inverted index:
  * <ul>
- *   <li>
+ *   <li>R
  *     Construct an instance of <code>InvertedIndexCreator</code>
  *   </li>
  *   <li>
diff --git a/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/inv/RangeIndexCreator.java b/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/inv/RangeIndexCreator.java
index 22c8c145d2f..65d76b48904 100644
--- a/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/inv/RangeIndexCreator.java
+++ b/pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/inv/RangeIndexCreator.java
@@ -167,63 +167,70 @@ public RangeIndexCreator(File indexDir, FieldSpec fieldSpec, FieldSpec.DataType
 
   @Override
   public void add(int value) {
-    addValueToBuffer(value);
-    nextDoc();
+    _numberValueBuffer.put(_nextDocId, value);
+    _docIdBuffer.put(_nextDocId, _nextDocId);
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(int[] values, int length) {
     for (int i = 0; i < length; i++) {
-      addValueToBuffer(values[i]);
-      nextDoc();
+      _numberValueBuffer.put(_nextValueId, values[i]);
+      _docIdBuffer.put(_nextValueId, _nextDocId);
       _nextValueId = _nextValueId + 1;
     }
-    nextDoc();
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(long value) {
-    addValueToBuffer(value);
-    nextDoc();
+    _numberValueBuffer.put(_nextDocId, value);
+    _docIdBuffer.put(_nextDocId, _nextDocId);
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(long[] values, int length) {
     for (int i = 0; i < length; i++) {
-      addValueToBuffer(values[i]);
-      nextDoc();
+      _numberValueBuffer.put(_nextValueId, values[i]);
+      _docIdBuffer.put(_nextValueId, _nextDocId);
+      _nextValueId = _nextValueId + 1;
     }
-    nextDoc();
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(float value) {
-    addValueToBuffer(value);
-    nextDoc();
+    _numberValueBuffer.put(_nextDocId, value);
+    _docIdBuffer.put(_nextDocId, _nextDocId);
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(float[] values, int length) {
     for (int i = 0; i < length; i++) {
-      addValueToBuffer(values[i]);
-      nextDoc();
+      _numberValueBuffer.put(_nextValueId, values[i]);
+      _docIdBuffer.put(_nextValueId, _nextDocId);
+      _nextValueId = _nextValueId + 1;
     }
-    nextDoc();
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(double value) {
-    addValueToBuffer(value);
-    nextDoc();
+    _numberValueBuffer.put(_nextDocId, value);
+    _docIdBuffer.put(_nextDocId, _nextDocId);
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
   public void add(double[] values, int length) {
     for (int i = 0; i < length; i++) {
-      addValueToBuffer(values[i]);
-      nextDoc();
+      _numberValueBuffer.put(_nextValueId, values[i]);
+      _docIdBuffer.put(_nextValueId, _nextDocId);
+      _nextValueId = _nextValueId + 1;
     }
-    nextDoc();
+    _nextDocId = _nextDocId + 1;
   }
 
   @Override
@@ -443,14 +450,6 @@ public void close()
     }
   }
 
-  private void nextDoc() {
-    _nextDocId = _nextDocId + 1;
-  }
-
-  private void addValueToBuffer(Number value) {
-    _numberValueBuffer.put(_nextDocId, value);
-    _docIdBuffer.put(_nextDocId, _nextDocId);
-  }
 
   void dump() {
     StringBuilder docIdAsString = new StringBuilder("DocIdBuffer  [ ");

diff --git a/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy b/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy
index 913d332a3bd9..808d75b7ae1f 100644
--- a/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy
+++ b/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy
@@ -21,27 +21,26 @@ package org.apache.beam.gradle
 import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
 import groovy.json.JsonOutput
 import groovy.json.JsonSlurper
-import org.gradle.api.attributes.Category
 import org.gradle.api.GradleException
 import org.gradle.api.Plugin
 import org.gradle.api.Project
 import org.gradle.api.Task
 import org.gradle.api.artifacts.Configuration
 import org.gradle.api.artifacts.ProjectDependency
+import org.gradle.api.attributes.Category
 import org.gradle.api.file.FileCollection
 import org.gradle.api.file.FileTree
 import org.gradle.api.plugins.quality.Checkstyle
 import org.gradle.api.publish.maven.MavenPublication
+import org.gradle.api.tasks.PathSensitivity
+import org.gradle.api.tasks.JavaExec
 import org.gradle.api.tasks.Copy
 import org.gradle.api.tasks.Delete
 import org.gradle.api.tasks.Exec
-import org.gradle.api.tasks.JavaExec
 import org.gradle.api.tasks.bundling.Jar
 import org.gradle.api.tasks.compile.JavaCompile
 import org.gradle.api.tasks.javadoc.Javadoc
 import org.gradle.api.tasks.testing.Test
-import org.gradle.api.tasks.PathSensitive
-import org.gradle.api.tasks.PathSensitivity
 import org.gradle.testing.jacoco.tasks.JacocoReport
 
 import java.util.concurrent.atomic.AtomicInteger
@@ -101,7 +100,7 @@ class BeamModulePlugin implements Plugin<Project> {
     boolean checkerTooSlowOnTests = false
 
     /** Controls whether the dependency analysis plugin is enabled. */
-    boolean enableStrictDependencies = false
+    boolean enableStrictDependencies = true
 
     /** Override the default "beam-" + `dash separated path` archivesBaseName. */
     String archivesBaseName = null
@@ -855,9 +854,11 @@ class BeamModulePlugin implements Plugin<Project> {
       // configurations because they are never required to be shaded or become a
       // dependency of the output.
       def compileOnlyAnnotationDeps = [
-        "com.google.auto.value:auto-value-annotations:1.7",
+        "com.google.auto.value:auto-value-annotations:1.7.2",
         "com.google.auto.service:auto-service-annotations:1.0-rc6",
         "com.google.j2objc:j2objc-annotations:1.3",
+        "org.checkerframework:checker-qual:3.7.0",
+        "com.google.code.findbugs:jsr305:3.0.2",
         // These dependencies are needed to avoid error-prone warnings on package-info.java files,
         // also to include the annotations to suppress warnings.
         //
diff --git a/buildSrc/src/main/groovy/org/apache/beam/gradle/GrpcVendoring_1_26_0.groovy b/buildSrc/src/main/groovy/org/apache/beam/gradle/GrpcVendoring_1_26_0.groovy
index 898faa2ab5d5..abadcb00db5e 100644
--- a/buildSrc/src/main/groovy/org/apache/beam/gradle/GrpcVendoring_1_26_0.groovy
+++ b/buildSrc/src/main/groovy/org/apache/beam/gradle/GrpcVendoring_1_26_0.groovy
@@ -47,36 +47,10 @@ class GrpcVendoring_1_26_0 {
   /** Returns the list of compile time dependencies. */
   static List<String> dependencies() {
     return [
-      "com.google.guava:guava:$guava_version",
       "com.google.protobuf:protobuf-java:$protobuf_version",
-      "com.google.protobuf:protobuf-java-util:$protobuf_version",
-      "com.google.code.gson:gson:$gson_version",
-      "io.grpc:grpc-auth:$grpc_version",
-      "io.grpc:grpc-core:$grpc_version",
-      "io.grpc:grpc-context:$grpc_version",
-      "io.grpc:grpc-netty:$grpc_version",
       "io.grpc:grpc-protobuf:$grpc_version",
       "io.grpc:grpc-stub:$grpc_version",
-      "io.netty:netty-transport-native-epoll:$netty_version",
-      // tcnative version from https://github.com/grpc/grpc-java/blob/master/SECURITY.md#netty
-      "io.netty:netty-tcnative-boringssl-static:2.0.33.Final",
-      "com.google.auth:google-auth-library-credentials:$google_auth_version",
-      "io.grpc:grpc-testing:$grpc_version",
-      "com.google.api.grpc:proto-google-common-protos:$proto_google_common_protos_version",
-      "io.opencensus:opencensus-api:$opencensus_version",
-      "io.opencensus:opencensus-contrib-grpc-metrics:$opencensus_version",
-      "io.perfmark:perfmark-api:$perfmark_version",
-      "com.github.jponge:lzma-java:$lzma_java_version",
-      "com.google.protobuf.nano:protobuf-javanano:$protobuf_javanano_version",
-      "com.jcraft:jzlib:$jzlib_version",
-      "com.ning:compress-lzf:$compress_lzf_version",
-      "net.jpountz.lz4:lz4:$lz4_version",
-      "org.bouncycastle:bcpkix-jdk15on:$bouncycastle_version",
-      "org.bouncycastle:bcprov-jdk15on:$bouncycastle_version",
-      "org.eclipse.jetty.alpn:alpn-api:$alpn_api_version",
-      "org.eclipse.jetty.npn:npn-api:$npn_api_version",
-      "org.jboss.marshalling:jboss-marshalling:$jboss_marshalling_version",
-      "org.jboss.modules:jboss-modules:$jboss_modules_version"
+      "io.grpc:grpc-api:$grpc_version",
     ]
   }
 
@@ -86,12 +60,7 @@ class GrpcVendoring_1_26_0 {
    */
   static List<String> runtimeDependencies() {
     return [
-      'com.google.errorprone:error_prone_annotations:2.3.3',
-      'commons-logging:commons-logging:1.2',
-      'org.apache.logging.log4j:log4j-api:2.6.2',
-      'org.slf4j:slf4j-api:1.7.30',
       // TODO(BEAM-9288): Enable relocation for conscrypt
-      "org.conscrypt:conscrypt-openjdk-uber:$conscrypt_version"
     ]
   }
 
diff --git a/examples/java/build.gradle b/examples/java/build.gradle
index a1b6827a98ec..c4d045d49fd7 100644
--- a/examples/java/build.gradle
+++ b/examples/java/build.gradle
@@ -73,7 +73,17 @@ dependencies {
   compile library.java.joda_time
   compile library.java.proto_google_cloud_datastore_v1
   compile library.java.slf4j_api
-  compile library.java.slf4j_jdk14
+  compile "com.google.api.grpc:proto-google-cloud-language-v1:1.81.4"
+  compile ("io.confluent:kafka-avro-serializer:5.3.2") {
+    // It depends on "spotbugs-annotations:3.1.9" which clashes with current
+    // "spotbugs-annotations:3.1.12" used in Beam. Not required.
+    exclude group: "org.apache.zookeeper", module: "zookeeper"
+  }
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.apache.httpcomponents:httpclient:4.5.13"
+  compile "org.apache.httpcomponents:httpcore:4.4.13"
+  compile library.java.google_oauth_client
+  compile library.java.vendored_grpc_1_26_0
   runtime project(path: ":runners:direct-java", configuration: "shadow")
   testCompile project(":sdks:java:io:google-cloud-platform")
   testCompile project(":sdks:java:extensions:ml")
diff --git a/examples/kotlin/build.gradle b/examples/kotlin/build.gradle
index e2525298d3a2..79b9fb54d30d 100644
--- a/examples/kotlin/build.gradle
+++ b/examples/kotlin/build.gradle
@@ -59,18 +59,15 @@ dependencies {
   compile library.java.google_api_services_pubsub
   compile library.java.google_auth_library_credentials
   compile library.java.google_auth_library_oauth2_http
-  compile library.java.google_cloud_datastore_v1_proto_client
   compile library.java.google_http_client
   compile library.java.joda_time
-  compile library.java.proto_google_cloud_datastore_v1
   compile library.java.slf4j_api
-  compile library.java.slf4j_jdk14
+  compile "com.google.guava:guava:25.1-jre"
+  compile "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
+  compile "org.jetbrains:annotations:13.0"
   runtime project(path: ":runners:direct-java", configuration: "shadow")
   testCompile project(":sdks:java:io:google-cloud-platform")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
-  testCompile library.java.mockito_core
 
   // Add dependencies for the PreCommit configurations
   // For each runner a project level dependency on the examples project.
@@ -87,7 +84,6 @@ dependencies {
   sparkRunnerPreCommit project(":sdks:java:io:hadoop-file-system")
   sparkRunnerPreCommit library.java.spark_streaming
   sparkRunnerPreCommit library.java.spark_core
-  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
 }
 
 /*
diff --git a/gradle.properties b/gradle.properties
index 65e8637fd50d..ba18daca9a32 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -31,3 +31,6 @@ javaVersion=1.8
 
 docker_image_default_repo_root=apache
 docker_image_default_repo_prefix=beam_
+
+org.gradle.daemon=true
+file.encoding=utf-8
diff --git a/model/fn-execution/build.gradle b/model/fn-execution/build.gradle
index 42f1fe09c8ee..4ebba0cff8c2 100644
--- a/model/fn-execution/build.gradle
+++ b/model/fn-execution/build.gradle
@@ -28,6 +28,8 @@ ext.summary = "Portable definitions for execution user-defined functions."
 dependencies {
   // We purposely depend on the unshaded classes for protobuf compilation and
   // export the shaded variant as the actual runtime dependency.
+  compile "com.google.guava:guava:28.1-android"
   compile project(path: ":model:pipeline", configuration: "unshaded")
   runtime project(path: ":model:pipeline", configuration: "shadow")
+  permitUnusedDeclared library.java.vendored_grpc_1_26_0
 }
diff --git a/model/job-management/build.gradle b/model/job-management/build.gradle
index 1568d8b1d4b2..be6e78dc08f5 100644
--- a/model/job-management/build.gradle
+++ b/model/job-management/build.gradle
@@ -32,4 +32,6 @@ dependencies {
   // export the shaded variant as the actual runtime dependency.
   compile project(path: ":model:pipeline", configuration: "unshaded")
   runtime project(path: ":model:pipeline", configuration: "shadow")
+  permitUnusedDeclared library.java.vendored_grpc_1_26_0
+  compile "com.google.guava:guava:28.1-android"
 }
diff --git a/model/pipeline/build.gradle b/model/pipeline/build.gradle
index 7698e84aa6bf..f167658c4e56 100644
--- a/model/pipeline/build.gradle
+++ b/model/pipeline/build.gradle
@@ -32,3 +32,7 @@ configurations {
 artifacts {
     unshaded jar
 }
+
+dependencies {
+    permitUnusedDeclared library.java.vendored_grpc_1_26_0
+}
diff --git a/release/build.gradle b/release/build.gradle
index 4abe92ff5b16..314e7330506e 100644
--- a/release/build.gradle
+++ b/release/build.gradle
@@ -24,7 +24,6 @@ repositories {
 
 dependencies {
   compile library.groovy.groovy_all
-  compile 'commons-cli:commons-cli:1.2'
 }
 
 task runJavaExamplesValidationTask {
diff --git a/runners/core-construction-java/build.gradle b/runners/core-construction-java/build.gradle
index 99d68592ff27..0fb893ac3c05 100644
--- a/runners/core-construction-java/build.gradle
+++ b/runners/core-construction-java/build.gradle
@@ -60,8 +60,8 @@ dependencies {
   compile library.java.jackson_databind
   compile library.java.joda_time
   compile library.java.slf4j_api
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
+  compile library.java.jackson_annotations
+  compile library.java.avro
   testCompile library.java.junit
   testCompile library.java.mockito_core
   testCompile library.java.jackson_annotations
diff --git a/runners/core-java/build.gradle b/runners/core-java/build.gradle
index 3d57e54a4d16..d1063efa577a 100644
--- a/runners/core-java/build.gradle
+++ b/runners/core-java/build.gradle
@@ -41,17 +41,16 @@ test {
 dependencies {
   compile project(path: ":model:pipeline", configuration: "shadow")
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":model:job-management:", configuration: "shadow")
   compile project(":runners:core-construction-java")
   compile project(":sdks:java:fn-execution")
   compile library.java.vendored_guava_26_0_jre
   compile library.java.joda_time
+  compile library.java.vendored_grpc_1_26_0
+  compile library.java.slf4j_api
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testCompile library.java.slf4j_api
-  testCompile library.java.jackson_dataformat_yaml
   testRuntimeOnly library.java.slf4j_simple
 }
diff --git a/runners/direct-java/build.gradle b/runners/direct-java/build.gradle
index 42e0aa5452e7..5751b8f29650 100644
--- a/runners/direct-java/build.gradle
+++ b/runners/direct-java/build.gradle
@@ -26,7 +26,8 @@ def dependOnProjects = [":runners:core-construction-java",
                         ":runners:core-java",
                         ":runners:local-java",
                         ":runners:java-fn-execution",
-                        ":sdks:java:fn-execution"]
+                        ":sdks:java:fn-execution"
+                        ]
 
 applyJavaNature(
         automaticModuleName: 'org.apache.beam.runners.direct',
@@ -72,17 +73,12 @@ dependencies {
   shadow library.java.vendored_grpc_1_26_0
   shadow library.java.joda_time
   shadow library.java.slf4j_api
-  shadow library.java.args4j
+  compile library.java.jackson_databind
   provided library.java.hamcrest_core
   provided library.java.junit
   shadowTest project(path: ":sdks:java:core", configuration: "shadowTest")
   shadowTest project(path: ":runners:core-java", configuration: "testRuntime")
-  shadowTest library.java.slf4j_jdk14
   shadowTest library.java.mockito_core
-  shadowTest library.java.stax2_api
-  shadowTest library.java.woodstox_core_asl
-  shadowTest library.java.google_cloud_dataflow_java_proto_library_all
-  shadowTest library.java.jackson_dataformat_yaml
   needsRunner project(path: ":runners:core-construction-java", configuration: "testRuntime")
   needsRunner project(path: ":runners:core-java", configuration: "testRuntime")
   needsRunner project(path: ":sdks:java:core", configuration: "shadowTest")
@@ -93,6 +89,10 @@ dependencies {
   validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
   validatesRunner project(path: project.path, configuration: "shadow")
   validatesRunner project(path: project.path, configuration: "shadowTest")
+  //runtime dependencies of the tests
+  permitUnusedDeclared library.java.vendored_grpc_1_26_0
+  permitUnusedDeclared project(":runners:java-fn-execution")
+  permitUnusedDeclared project(":sdks:java:fn-execution")
 }
 
 // windows handles quotes differently from linux,
diff --git a/runners/extensions-java/metrics/build.gradle b/runners/extensions-java/metrics/build.gradle
index 4e8d1be77298..af31d71c634d 100644
--- a/runners/extensions-java/metrics/build.gradle
+++ b/runners/extensions-java/metrics/build.gradle
@@ -26,10 +26,11 @@ description = "Apache Beam :: Runners :: Extensions Java :: Metrics"
 ext.summary = "Beam Runners Extensions Metrics provides implementations of runners core metrics APIs."
 
 dependencies {
-  compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.jackson_databind
   compile library.java.jackson_datatype_joda
+  compile library.java.jackson_core
+  compile library.java.joda_time
   testCompile library.java.joda_time
   testCompile library.java.junit
 }
diff --git a/runners/flink/1.10/job-server/build.gradle b/runners/flink/1.10/job-server/build.gradle
index ee1e8c986970..56dc979d7dbd 100644
--- a/runners/flink/1.10/job-server/build.gradle
+++ b/runners/flink/1.10/job-server/build.gradle
@@ -29,3 +29,7 @@ project.ext {
 
 // Load the main build script which contains all build logic.
 apply from: "$basePath/flink_job_server.gradle"
+
+dependencies {
+  permitUnusedDeclared project(":runners:flink:1.10")
+}
diff --git a/runners/flink/1.11/job-server/build.gradle b/runners/flink/1.11/job-server/build.gradle
index 00801231aaaf..6f0b52131b27 100644
--- a/runners/flink/1.11/job-server/build.gradle
+++ b/runners/flink/1.11/job-server/build.gradle
@@ -29,3 +29,7 @@ project.ext {
 
 // Load the main build script which contains all build logic.
 apply from: "$basePath/flink_job_server.gradle"
+
+dependencies {
+  permitUnusedDeclared project(":runners:flink:1.11")
+}
diff --git a/runners/flink/1.12/job-server/build.gradle b/runners/flink/1.12/job-server/build.gradle
index 890082042c0e..bcb9511dc838 100644
--- a/runners/flink/1.12/job-server/build.gradle
+++ b/runners/flink/1.12/job-server/build.gradle
@@ -29,3 +29,7 @@ project.ext {
 
 // Load the main build script which contains all build logic.
 apply from: "$basePath/flink_job_server.gradle"
+
+dependencies {
+  permitUnusedDeclared project(":runners:flink:1.12")
+}
diff --git a/runners/flink/1.8/build.gradle b/runners/flink/1.8/build.gradle
index 5489aec11194..86edb0e20251 100644
--- a/runners/flink/1.8/build.gradle
+++ b/runners/flink/1.8/build.gradle
@@ -17,7 +17,6 @@
  */
 
 def basePath = '..'
-
 /* All properties required for loading the Flink build script */
 project.ext {
   // Set the version of all Flink-related dependencies here.
diff --git a/runners/flink/1.8/job-server/build.gradle b/runners/flink/1.8/job-server/build.gradle
index 562b6ca6480d..6097cb6b1fe5 100644
--- a/runners/flink/1.8/job-server/build.gradle
+++ b/runners/flink/1.8/job-server/build.gradle
@@ -29,3 +29,7 @@ project.ext {
 
 // Load the main build script which contains all build logic.
 apply from: "$basePath/flink_job_server.gradle"
+
+dependencies {
+  permitUnusedDeclared project(":runners:flink:1.8")
+}
diff --git a/runners/flink/1.9/job-server/build.gradle b/runners/flink/1.9/job-server/build.gradle
index b094ddac437c..3a23bc096c6d 100644
--- a/runners/flink/1.9/job-server/build.gradle
+++ b/runners/flink/1.9/job-server/build.gradle
@@ -29,3 +29,7 @@ project.ext {
 
 // Load the main build script which contains all build logic.
 apply from: "$basePath/flink_job_server.gradle"
+
+dependencies {
+  permitUnusedDeclared project(":runners:flink:1.9")
+}
diff --git a/runners/flink/flink_runner.gradle b/runners/flink/flink_runner.gradle
index 30cf1f770c8b..b828020013d0 100644
--- a/runners/flink/flink_runner.gradle
+++ b/runners/flink/flink_runner.gradle
@@ -41,6 +41,7 @@ description = "Apache Beam :: Runners :: Flink $flink_version"
 evaluationDependsOn(":sdks:java:core")
 evaluationDependsOn(":runners:core-java")
 
+def checker_qual_version = "2.0.0"
 /*
  * Copy & merge source overrides into build directory.
  */
@@ -169,6 +170,17 @@ dependencies {
   validatesRunner project(path: ":runners:core-java", configuration: "testRuntime")
   validatesRunner project(project.path)
   miniCluster "org.apache.flink:flink-runtime-web_2.11:$flink_version"
+  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":model:pipeline", configuration: "shadow")
+  compile project(path: ":model:job-management:", configuration: "shadow")
+  compile project(":sdks:java:fn-execution")
+  compile project(path: ":vendor:sdks-java-extensions-protobuf", configuration: "shadow")
+  permitUnusedDeclared library.java.jackson_annotations
+  compile library.java.jackson_databind
+  compile "org.apache.flink:flink-annotations:$flink_version"
+  compile "org.apache.flink:flink-optimizer_2.11:$flink_version"
+  permitUnusedDeclared "org.apache.flink:flink-clients_2.11:$flink_version"
+  compile "org.checkerframework:checker-qual:$checker_qual_version"
 }
 
 class ValidatesRunnerConfig {
diff --git a/runners/google-cloud-dataflow-java/build.gradle b/runners/google-cloud-dataflow-java/build.gradle
index 197eff83aa43..1e1cb6607a76 100644
--- a/runners/google-cloud-dataflow-java/build.gradle
+++ b/runners/google-cloud-dataflow-java/build.gradle
@@ -78,18 +78,25 @@ dependencies {
   compile library.java.google_api_client
   compile library.java.google_api_services_clouddebugger
   compile library.java.google_api_services_dataflow
-  compile library.java.google_api_services_storage
+  testImplementation 'com.google.apis:google-api-services-storage:v1-rev20200611-1.30.10'
   compile library.java.google_auth_library_credentials
   compile library.java.google_auth_library_oauth2_http
   compile library.java.google_http_client
-  compile library.java.google_http_client_jackson2
+  testImplementation 'com.google.http-client:google-http-client-jackson2:1.34.0'
   compile library.java.jackson_annotations
   compile library.java.jackson_core
   compile library.java.jackson_databind
   compile library.java.joda_time
   compile library.java.slf4j_api
   compile library.java.vendored_grpc_1_26_0
-  testCompile library.java.hamcrest_core
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile "org.hamcrest:hamcrest:2.1"
+  compile "com.google.auth:google-auth-library-credentials:0.19.0"
+  permitUnusedDeclared "com.google.guava:guava:25.1-jre"
+  permitUnusedDeclared "io.opencensus:opencensus-api:0.24.0"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  permitUnusedDeclared "org.conscrypt:conscrypt-openjdk-uber:2.5.1"
+  permitUnusedDeclared "com.google.api.grpc:proto-google-common-protos:1.17.0"
   testCompile library.java.guava_testlib
   testCompile library.java.junit
   testCompile project(path: ":sdks:java:io:google-cloud-platform", configuration: "testRuntime")
@@ -99,8 +106,6 @@ dependencies {
   testCompile library.java.google_cloud_dataflow_java_proto_library_all
   testCompile library.java.jackson_dataformat_yaml
   testCompile library.java.mockito_core
-  testCompile library.java.proto_google_cloud_datastore_v1
-  testCompile library.java.slf4j_jdk14
   validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
   validatesRunner project(project.path)
   validatesRunner project(path: project.path, configuration: "testRuntime")
diff --git a/runners/google-cloud-dataflow-java/worker/build.gradle b/runners/google-cloud-dataflow-java/worker/build.gradle
index 44d7b8e8a177..6bc5e7e0d489 100644
--- a/runners/google-cloud-dataflow-java/worker/build.gradle
+++ b/runners/google-cloud-dataflow-java/worker/build.gradle
@@ -84,7 +84,6 @@ dependencies {
   compile library.java.vendored_grpc_1_26_0
   compile google_api_services_dataflow
   compile library.java.avro
-  compile library.java.google_api_client
   compile library.java.google_http_client
   compile library.java.google_http_client_jackson2
   compile library.java.jackson_annotations
@@ -93,12 +92,18 @@ dependencies {
   compile library.java.joda_time
   shadow library.java.vendored_guava_26_0_jre
   compile library.java.slf4j_api
+  compile "com.google.api.grpc:proto-google-common-protos:1.17.0"
+  permitUnusedDeclared "org.conscrypt:conscrypt-openjdk:1.1.3:linux-x86_64"
   compile "javax.servlet:javax.servlet-api:3.1.0"
-  compile "org.conscrypt:conscrypt-openjdk:2.5.1:linux-x86_64"
   compile "org.eclipse.jetty:jetty-server:9.2.10.v20150310"
   compile "org.eclipse.jetty:jetty-servlet:9.2.10.v20150310"
-  compile library.java.error_prone_annotations
+  compile "com.google.auth:google-auth-library-credentials:0.19.0"
+  compile "com.google.guava:guava:25.1-jre"
+  compile "io.opencensus:opencensus-api:0.24.0"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile "org.conscrypt:conscrypt-openjdk-uber:2.2.1"
   compile library.java.slf4j_jdk14
+  permitUnusedDeclared library.java.slf4j_jdk14
 
   // All test sourceset dependencies can be marked as shadowTest since we create an uber jar without
   // relocating any code.
@@ -107,8 +112,6 @@ dependencies {
   shadowTest project(path: ":sdks:java:core", configuration: "shadowTest")
   shadowTest project(path: ":sdks:java:extensions:google-cloud-platform-core", configuration: "testRuntime")
   shadowTest project(path: ":runners:direct-java", configuration: "shadow")
-  shadowTest library.java.hamcrest_core
-  shadowTest library.java.hamcrest_library
   shadowTest library.java.jsonassert
   shadowTest library.java.junit
   shadowTest library.java.mockito_core
diff --git a/runners/google-cloud-dataflow-java/worker/legacy-worker/build.gradle b/runners/google-cloud-dataflow-java/worker/legacy-worker/build.gradle
index cfd9f1fc15ec..e3ebf8c7dfd0 100644
--- a/runners/google-cloud-dataflow-java/worker/legacy-worker/build.gradle
+++ b/runners/google-cloud-dataflow-java/worker/legacy-worker/build.gradle
@@ -72,7 +72,6 @@ def excluded_dependencies = [
         "com.google.auto.value:auto-value",          // Provided scope added from applyJavaNature
         "org.codehaus.jackson:jackson-core-asl",     // Exclude an old version of jackson-core-asl introduced by google-http-client-jackson
         "org.objenesis:objenesis",                   // Transitive dependency introduced from Beam
-        "org.tukaani:xz",                            // Transitive dependency introduced from Beam
         library.java.commons_compress,               // Transitive dependency introduced from Beam
         library.java.error_prone_annotations,        // Provided scope added in worker
         library.java.hamcrest_core,                  // Test only
@@ -213,11 +212,21 @@ dependencies {
     compile project(":sdks:java:fn-execution")
     compile project(path: ":runners:google-cloud-dataflow-java:worker:windmill", configuration: "shadow")
     shadow library.java.vendored_guava_26_0_jre
-    compile "org.conscrypt:conscrypt-openjdk:2.5.1:linux-x86_64"
     compile "org.eclipse.jetty:jetty-server:9.2.10.v20150310"
     compile "org.eclipse.jetty:jetty-servlet:9.2.10.v20150310"
-    provided library.java.error_prone_annotations
     runtime library.java.slf4j_jdk14
+    permitUnusedDeclared "org.conscrypt:conscrypt-openjdk:1.1.3:linux-x86_64"
+    compile project(path: ":model:pipeline", configuration: "shadow")
+    compile project(path: ":sdks:java:core", configuration: "shadow")
+    compile library.java.jackson_annotations
+    compile library.java.jackson_core
+    compile library.java.jackson_databind
+    compile "javax.servlet:javax.servlet-api:3.1.0"
+    compile library.java.joda_time
+    compile library.java.avro
+    compile library.java.vendored_grpc_1_26_0
+    compile "org.conscrypt:conscrypt-openjdk-uber:1.3.0"
+    compile library.java.slf4j_api
 
     // Any test dependency which intersects with our relocation rules above needs to be relocated
     // as well and placed within the testCompile configuration. Otherwise we can place it within
@@ -227,8 +236,6 @@ dependencies {
     shadowTest project(path: ":runners:direct-java", configuration: "shadow")
     shadowTest project(path: ":sdks:java:harness", configuration: "shadowTest")
     shadowTest project(path: ":sdks:java:core", configuration: "shadowTest")
-    shadowTest library.java.hamcrest_core
-    shadowTest library.java.hamcrest_library
     shadowTest library.java.jsonassert
     shadowTest library.java.junit
     shadowTest library.java.mockito_core
diff --git a/runners/google-cloud-dataflow-java/worker/windmill/build.gradle b/runners/google-cloud-dataflow-java/worker/windmill/build.gradle
index f0233be2b47c..ea597eece59d 100644
--- a/runners/google-cloud-dataflow-java/worker/windmill/build.gradle
+++ b/runners/google-cloud-dataflow-java/worker/windmill/build.gradle
@@ -36,3 +36,8 @@ configurations {
 artifacts {
     unshaded jar
 }
+
+dependencies {
+    compile "com.google.guava:guava:28.1-android"
+    permitUnusedDeclared library.java.vendored_grpc_1_26_0
+}
diff --git a/runners/java-fn-execution/build.gradle b/runners/java-fn-execution/build.gradle
index 94a875c8de62..9ce08c30e902 100644
--- a/runners/java-fn-execution/build.gradle
+++ b/runners/java-fn-execution/build.gradle
@@ -33,16 +33,14 @@ dependencies {
   compile project(":runners:core-construction-java")
   compile project(path: ":vendor:sdks-java-extensions-protobuf", configuration: "shadow")
   compile library.java.vendored_grpc_1_26_0
-  compile library.java.commons_compress
   compile library.java.slf4j_api
-  compile library.java.args4j
+  compile project(path: ":model:job-management", configuration: "shadow")
+  compile library.java.joda_time
   testCompile project(":sdks:java:harness")
   testCompile project(":runners:core-construction-java")
   testCompile project(path: ":runners:core-java", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testRuntimeOnly library.java.slf4j_simple
 }
diff --git a/runners/java-job-service/build.gradle b/runners/java-job-service/build.gradle
index 7fce501a25ee..187a3acc4aae 100644
--- a/runners/java-job-service/build.gradle
+++ b/runners/java-job-service/build.gradle
@@ -26,17 +26,20 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(":runners:core-construction-java")
   compile project(path: ":model:pipeline", configuration: "shadow")
-  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":sdks:java:core", configuration: "shadow")
+  compile project(path: ":model:job-management", configuration: "shadow")
   compile project(":sdks:java:expansion-service")
   compile project(":sdks:java:fn-execution")
   compile project(":runners:core-construction-java")
   compile project(":runners:java-fn-execution")
+  compile library.java.jackson_core
+  compile library.java.jackson_databind
+  compile library.java.joda_time
+  compile "org.apache.commons:commons-compress:1.20"
   compile library.java.vendored_grpc_1_26_0
   compile library.java.slf4j_api
   compile library.java.args4j
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testRuntimeOnly library.java.slf4j_simple
 }
diff --git a/runners/jet/build.gradle b/runners/jet/build.gradle
index 754d68feb929..16b7526d2aed 100644
--- a/runners/jet/build.gradle
+++ b/runners/jet/build.gradle
@@ -42,13 +42,16 @@ configurations {
 dependencies {
     compile project(path: ":sdks:java:core", configuration: "shadow")
     compile project(":runners:core-java")
+    compile project(path: ":model:pipeline", configuration: "shadow")
+    compile project(":runners:core-construction-java")
     compile "com.hazelcast.jet:hazelcast-jet:$jet_version"
+    compile library.java.joda_time
+    compile library.java.vendored_guava_26_0_jre
+    compile library.java.slf4j_api
 
     testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
     testCompile project(path: ":runners:core-java", configuration: "testRuntime")
     testCompile project(path: ":runners:core-construction-java", configuration: "testRuntime")
-    testCompile library.java.hamcrest_core
-    testCompile library.java.junit
     testCompile library.java.joda_time
     testCompile "com.hazelcast.jet:hazelcast-jet-core:$jet_version:tests"
     testCompile "com.hazelcast:hazelcast:$hazelcast_version:tests"
diff --git a/runners/local-java/build.gradle b/runners/local-java/build.gradle
index cf17e94a4ea5..ac1789c264c4 100644
--- a/runners/local-java/build.gradle
+++ b/runners/local-java/build.gradle
@@ -35,7 +35,5 @@ dependencies {
   */
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.joda_time
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
 }
diff --git a/runners/portability/java/build.gradle b/runners/portability/java/build.gradle
index 137769bfff94..68c3a26c9703 100644
--- a/runners/portability/java/build.gradle
+++ b/runners/portability/java/build.gradle
@@ -32,12 +32,19 @@ configurations {
 
 dependencies {
   compile library.java.vendored_guava_26_0_jre
-  compile library.java.hamcrest_library
   compile project(":runners:java-fn-execution")
   compile project(":runners:java-job-service")
   compile project(path: ":sdks:java:harness", configuration: "shadow")
   compile library.java.vendored_grpc_1_26_0
   compile library.java.slf4j_api
+  compile library.java.joda_time
+  compile "org.hamcrest:hamcrest:2.1"
+  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":model:job-management:", configuration: "shadow")
+  compile project(path: ":model:pipeline", configuration: "shadow")
+  compile project(":runners:core-construction-java")
+  permitUsedUndeclared project(":sdks:java:core")
+  compile project(":sdks:java:fn-execution")
 
   testCompile project(path: ":runners:core-construction-java", configuration: "testRuntime")
   testCompile library.java.hamcrest_core
diff --git a/runners/samza/build.gradle b/runners/samza/build.gradle
index 8a14b246a3bf..bcdc13271642 100644
--- a/runners/samza/build.gradle
+++ b/runners/samza/build.gradle
@@ -53,21 +53,28 @@ dependencies {
   compile library.java.slf4j_api
   compile library.java.joda_time
   compile library.java.commons_io
-  compile library.java.commons_lang3
-  compile library.java.args4j
-  compile "javax.servlet:javax.servlet-api:3.1.0"
-  compile "io.dropwizard.metrics:metrics-core:3.1.2"
   compile "org.rocksdb:rocksdbjni:5.7.3"
-  compile "org.apache.commons:commons-collections4:4.0"
   compile "org.scala-lang:scala-library:2.11.8"
   compile "org.apache.samza:samza-api:$samza_version"
   compile "org.apache.samza:samza-core_2.11:$samza_version"
   compile "org.apache.samza:samza-kafka_2.11:$samza_version"
   compile "org.apache.samza:samza-kv_2.11:$samza_version"
+  compile project(":sdks:java:expansion-service")
+  permitUnusedDeclared "org.apache.samza:samza-kafka_2.11:1.5.0"
+  permitUnusedDeclared "org.apache.samza:samza-kv-inmemory_2.11:1.3.0"
+  permitUnusedDeclared "org.apache.samza:samza-kv_2.11:1.5.0"
+  permitUnusedDeclared "org.rocksdb:rocksdbjni:6.5.3"
+  permitUnusedDeclared "org.scala-lang:scala-library:2.11.12"
   compile "org.apache.samza:samza-kv-rocksdb_2.11:$samza_version"
   compile "org.apache.samza:samza-kv-inmemory_2.11:$samza_version"
   compile "org.apache.samza:samza-yarn_2.11:$samza_version"
   compile "org.apache.kafka:kafka-clients:0.11.0.2"
+  permitUnusedDeclared "org.apache.kafka:kafka-clients:2.4.1"
+  compile library.java.vendored_grpc_1_26_0
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile project(path: ":model:job-management:", configuration: "shadow")
+  compile project(path: ":model:pipeline", configuration: "shadow")
+  compile project(":sdks:java:fn-execution")
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":runners:core-java", configuration: "testRuntime")
   testCompile library.java.hamcrest_core
diff --git a/runners/samza/job-server/build.gradle b/runners/samza/job-server/build.gradle
index 7119b906f16d..ec4fe7e0f952 100644
--- a/runners/samza/job-server/build.gradle
+++ b/runners/samza/job-server/build.gradle
@@ -32,7 +32,6 @@ applyJavaNature(
 )
 
 dependencies {
-  compile project(":runners:samza")
   runtime group: "org.slf4j", name: "jcl-over-slf4j", version: dependencies.create(project.library.java.slf4j_api).getVersion()
   runtime library.java.slf4j_simple
 }
diff --git a/runners/spark/build.gradle b/runners/spark/build.gradle
index 315f166e2ee5..61fa3c2049a0 100644
--- a/runners/spark/build.gradle
+++ b/runners/spark/build.gradle
@@ -84,6 +84,12 @@ dependencies {
   compile library.java.slf4j_api
   compile library.java.joda_time
   compile library.java.args4j
+  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":model:job-management:", configuration: "shadow")
+  compile project(":sdks:java:fn-execution")
+  compile library.java.vendored_grpc_1_26_0
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.checkerframework:checker-qual:2.0.0"
   provided library.java.spark_core
   provided library.java.spark_sql
   provided library.java.spark_streaming
@@ -105,7 +111,6 @@ dependencies {
   testCompile library.java.kafka_clients
   testCompile library.java.junit
   testCompile library.java.mockito_core
-  testCompile library.java.jackson_dataformat_yaml
   testCompile "org.apache.zookeeper:zookeeper:3.4.11"
   validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
   validatesRunner project(path: ":runners:core-java", configuration: "testRuntime")
diff --git a/runners/spark/job-server/build.gradle b/runners/spark/job-server/build.gradle
index e08f8ae40cfb..b2c89ecdc641 100644
--- a/runners/spark/job-server/build.gradle
+++ b/runners/spark/job-server/build.gradle
@@ -49,14 +49,12 @@ configurations.all {
 }
 
 dependencies {
-  compile project(sparkRunnerProject)
   compile project(path: sparkRunnerProject, configuration: "provided")
   validatesPortableRunner project(path: sparkRunnerProject, configuration: "testRuntime")
   validatesPortableRunner project(path: sparkRunnerProject, configuration: "provided")
   validatesPortableRunner project(path: ":sdks:java:core", configuration: "shadowTest")
   validatesPortableRunner project(path: ":runners:core-java", configuration: "testRuntime")
   validatesPortableRunner project(path: ":runners:portability:java", configuration: "testRuntime")
-  compile project(":sdks:java:extensions:google-cloud-platform-core")
 //  TODO: Enable AWS and HDFS file system.
 }
 
diff --git a/runners/twister2/build.gradle b/runners/twister2/build.gradle
index ca44ed35dd24..01a7e7e160e9 100644
--- a/runners/twister2/build.gradle
+++ b/runners/twister2/build.gradle
@@ -36,7 +36,23 @@ dependencies {
     compile (project(path: ":runners:core-java")){
         exclude group: 'com.esotericsoftware.kryo', module: 'kryo'
     }
-    compile project(":runners:java-fn-execution")
+    compile project(path: ":model:pipeline", configuration: "shadow")
+    compile project(path: ":runners:core-construction-java")
+    compile project(path: ":sdks:java:core", configuration: "shadow")
+
+    compile library.java.jackson_annotations
+    compile library.java.joda_time
+    compile library.java.vendored_grpc_1_26_0
+    compile "org.checkerframework:checker-qual:2.0.0"
+    compile "org.mortbay.jetty:jetty-util:6.1.26"
+    compile library.java.slf4j_api
+    compile "org.twister2:comms-api-java:0.6.0"
+    compile "org.twister2:config-api-java:0.6.0"
+    compile "org.twister2:dataset-api-java:0.6.0"
+    compile "org.twister2:driver-api-java:0.6.0"
+    compile "org.twister2:exceptions-java:0.6.0"
+    compile "org.twister2:scheduler-api-java:0.6.0"
+    compile "org.twister2:task-api-java:0.6.0"
     compile "org.twister2:api-java:$twister2_version"
     compile "org.twister2:tset-api-java:$twister2_version"
     compile "org.twister2:tset-java:$twister2_version"
diff --git a/sdks/java/container/license_scripts/dep_urls_java.yaml b/sdks/java/container/license_scripts/dep_urls_java.yaml
index 280b1a8cee79..5c96e805fd2f 100644
--- a/sdks/java/container/license_scripts/dep_urls_java.yaml
+++ b/sdks/java/container/license_scripts/dep_urls_java.yaml
@@ -48,5 +48,5 @@ paranamer:
   '2.7':
     license: "https://raw.githubusercontent.com/paul-hammant/paranamer/master/LICENSE.txt"
 xz:
-  '1.8':
-    license: "https://git.tukaani.org/?p=xz-java.git;a=blob_plain;f=COPYING;h=c1d404dc7a6f06a0437bf1055fedaa4a4c89d728;hb=HEAD"
+  '1.5':
+    license: "https://git.tukaani.org/?p=xz-java.git;a=blob;f=COPYING;h=c1d404dc7a6f06a0437bf1055fedaa4a4c89d728;hb=9f1f97a26f090ffec6568c004a38c6534aa82b94"
diff --git a/sdks/java/core/build.gradle b/sdks/java/core/build.gradle
index e8b07f66acae..9aab2a980736 100644
--- a/sdks/java/core/build.gradle
+++ b/sdks/java/core/build.gradle
@@ -68,7 +68,10 @@ test {
 
 dependencies {
   antlr library.java.antlr
+  permitUnusedDeclared "org.antlr:antlr4:4.7"
   // Required to load constants from the model, e.g. max timestamp for global window
+  compile "com.github.luben:zstd-jni:1.4.5-2"
+  permitUnusedDeclared "com.github.luben:zstd-jni:1.4.5-2"
   shadow project(path: ":model:pipeline", configuration: "shadow")
   shadow project(path: ":model:job-management", configuration: "shadow")
   shadow library.java.vendored_bytebuddy_1_10_8
@@ -77,7 +80,7 @@ dependencies {
   compile library.java.antlr_runtime
   compile library.java.commons_compress
   compile library.java.commons_lang3
-  shadow library.java.jsr305
+  shadow library.java.error_prone_annotations
   shadow library.java.jackson_core
   shadow library.java.jackson_annotations
   shadow library.java.jackson_databind
@@ -85,20 +88,15 @@ dependencies {
   shadow library.java.avro
   shadow library.java.snappy_java
   shadow library.java.joda_time
-  shadow "org.tukaani:xz:1.8"
   provided library.java.junit
   provided library.java.hamcrest_core
   provided library.java.hamcrest_library
   provided 'io.airlift:aircompressor:0.16'
   provided 'com.facebook.presto.hadoop:hadoop-apache2:3.2.0-1'
-  shadowTest library.java.jackson_dataformat_yaml
   shadowTest library.java.guava_testlib
   shadowTest library.java.mockito_core
-  shadowTest library.java.hamcrest_core
-  shadowTest library.java.hamcrest_library
   shadowTest "com.esotericsoftware.kryo:kryo:2.21"
   shadowTest library.java.quickcheck_core
   shadowTest library.java.avro_tests
-  shadowTest library.java.zstd_jni
   testRuntimeOnly library.java.slf4j_jdk14
 }
diff --git a/sdks/java/expansion-service/build.gradle b/sdks/java/expansion-service/build.gradle
index 4fbdf1683b05..45add661537b 100644
--- a/sdks/java/expansion-service/build.gradle
+++ b/sdks/java/expansion-service/build.gradle
@@ -34,7 +34,7 @@ test {
 
 dependencies {
   compile project(path: ":model:pipeline", configuration: "shadow")
-  compile project(path: ":model:fn-execution", configuration: "shadow")
+  compile project(path: ":model:job-management:", configuration: "shadow")
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile project(path: ":runners:core-construction-java")
   compile project(path: ":runners:java-fn-execution")
diff --git a/sdks/java/extensions/euphoria/build.gradle b/sdks/java/extensions/euphoria/build.gradle
index 92cbb6766173..382252c5127a 100644
--- a/sdks/java/extensions/euphoria/build.gradle
+++ b/sdks/java/extensions/euphoria/build.gradle
@@ -26,12 +26,11 @@ description = "Apache Beam :: SDKs :: Java :: Extensions :: Euphoria Java 8 DSL"
 
 dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  testCompile library.java.mockito_core
   testCompile project(":sdks:java:extensions:kryo")
-  testCompile library.java.slf4j_api
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
-  testCompile library.java.mockito_core
+  implementation library.java.slf4j_api
+  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.2'
+  implementation library.java.vendored_guava_26_0_jre
+  implementation library.java.joda_time
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/extensions/google-cloud-platform-core/build.gradle b/sdks/java/extensions/google-cloud-platform-core/build.gradle
index 4f290dd48758..5a546bec053f 100644
--- a/sdks/java/extensions/google-cloud-platform-core/build.gradle
+++ b/sdks/java/extensions/google-cloud-platform-core/build.gradle
@@ -36,6 +36,9 @@ test {
 }
 
 dependencies {
+  compile "org.apache.httpcomponents:httpclient:4.5.10"
+  compile "org.apache.httpcomponents:httpcore:4.4.12"
+  compile "org.checkerframework:checker-qual:2.0.0"
   compile enforcedPlatform(library.java.google_cloud_platform_libraries_bom)
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
@@ -51,11 +54,10 @@ dependencies {
   compile library.java.slf4j_api
   compile library.java.joda_time
   compile library.java.jackson_annotations
-  compile library.java.jackson_databind
+  testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
   provided library.java.hamcrest_core
   provided library.java.junit
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testRuntimeOnly library.java.slf4j_jdk14
 }
diff --git a/sdks/java/extensions/jackson/build.gradle b/sdks/java/extensions/jackson/build.gradle
index b36343c37dbe..b9d218792cd9 100644
--- a/sdks/java/extensions/jackson/build.gradle
+++ b/sdks/java/extensions/jackson/build.gradle
@@ -29,8 +29,7 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.jackson_databind
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
+  compile library.java.jackson_core
   testCompile library.java.junit
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/extensions/join-library/build.gradle b/sdks/java/extensions/join-library/build.gradle
index 1257f8f690c0..b63306aeac00 100644
--- a/sdks/java/extensions/join-library/build.gradle
+++ b/sdks/java/extensions/join-library/build.gradle
@@ -24,8 +24,6 @@ description = "Apache Beam :: SDKs :: Java :: Extensions :: Join library"
 dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/extensions/kryo/build.gradle b/sdks/java/extensions/kryo/build.gradle
index 50a2ae54d685..35be1afa6fc0 100644
--- a/sdks/java/extensions/kryo/build.gradle
+++ b/sdks/java/extensions/kryo/build.gradle
@@ -40,6 +40,9 @@ description = 'Apache Beam :: SDKs :: Java :: Extensions :: Kryo'
 
 dependencies {
     compile "com.esotericsoftware:kryo:${kryoVersion}"
+    compile library.java.jackson_annotations
+    compile "org.apache.beam:beam-vendor-guava-26_0-jre:0.1"
+    compile "org.objenesis:objenesis:2.5.1"
     shadow project(path: ':sdks:java:core', configuration: 'shadow')
     testCompile project(path: ':sdks:java:core', configuration: 'shadowTest')
     testRuntimeOnly project(path: ':runners:direct-java', configuration: 'shadow')
diff --git a/sdks/java/extensions/ml/build.gradle b/sdks/java/extensions/ml/build.gradle
index d7ab4caabb5e..cd566183ff1c 100644
--- a/sdks/java/extensions/ml/build.gradle
+++ b/sdks/java/extensions/ml/build.gradle
@@ -27,18 +27,26 @@ description = 'Apache Beam :: SDKs :: Java :: Extensions :: ML'
 
 dependencies {
     compile project(path: ":sdks:java:core", configuration: "shadow")
-    compile project(":sdks:java:expansion-service")
     compile 'com.google.cloud:google-cloud-video-intelligence:1.2.0'
     compile 'com.google.cloud:google-cloud-dlp:1.1.4'
     compile 'com.google.cloud:google-cloud-language:1.99.4'
+    compile 'com.google.api.grpc:proto-google-cloud-dlp-v2:1.1.4'
+    compile 'com.google.api.grpc:proto-google-cloud-language-v1:1.81.4'
+    compile 'com.google.api.grpc:proto-google-cloud-video-intelligence-v1:1.2.0'
+    compile 'com.google.api.grpc:proto-google-cloud-vision-v1:1.81.3'
+    compile 'com.google.api:gax:1.57.1'
+    compile 'com.google.protobuf:protobuf-java:3.11.1'
+    compile 'org.checkerframework:checker-qual:2.0.0'
+    compile library.java.slf4j_api
     provided library.java.junit
     testCompile project(path: ':sdks:java:core', configuration: 'shadowTest')
     compile 'com.google.cloud:google-cloud-vision:1.99.3'
+    permitUsedUndeclared "com.google.auto.value:auto-value-annotations:1.7"
     testCompile library.java.mockito_core
     testCompile 'com.google.cloud:google-cloud-video-intelligence:1.2.0'
-    testCompile 'com.google.cloud:google-cloud-dlp:1.1.4'
+    implementation 'com.google.cloud:google-cloud-dlp:1.1.4'
     testCompile project(path: ":sdks:java:extensions:google-cloud-platform-core", configuration: "testRuntime")
-    testCompile 'com.google.cloud:google-cloud-language:1.99.4'
+    implementation 'com.google.cloud:google-cloud-language:1.99.4'
     testCompile 'com.google.cloud:google-cloud-vision:1.99.3'
     testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
     testRuntimeOnly project(":runners:google-cloud-dataflow-java")
diff --git a/sdks/java/extensions/protobuf/build.gradle b/sdks/java/extensions/protobuf/build.gradle
index 74882d3452ce..a37252c76bbc 100644
--- a/sdks/java/extensions/protobuf/build.gradle
+++ b/sdks/java/extensions/protobuf/build.gradle
@@ -35,10 +35,8 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.protobuf_java
+  compile "org.apache.beam:beam-vendor-bytebuddy-1_10_8:0.1"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
-  testCompile library.java.mockito_core
   testCompile library.java.junit
   testRuntimeOnly library.java.slf4j_jdk14
 }
diff --git a/sdks/java/extensions/schemaio-expansion-service/build.gradle b/sdks/java/extensions/schemaio-expansion-service/build.gradle
index 4129db687b42..55d09251d712 100644
--- a/sdks/java/extensions/schemaio-expansion-service/build.gradle
+++ b/sdks/java/extensions/schemaio-expansion-service/build.gradle
@@ -30,12 +30,13 @@ applyJavaNature(
 )
 
 dependencies {
-    compile project(path: ":sdks:java:expansion-service")
-    compile project(":sdks:java:io:jdbc")
-    compile library.java.postgres
+    compile project(path: ":model:pipeline", configuration: "shadow")
+    compile project(path: ":sdks:java:core", configuration: "shadow")
+    compile library.java.vendored_grpc_1_26_0
+    compile "org.apache.beam:beam-vendor-guava-26_0-jre:0.1"
     testCompile library.java.junit
-    testCompile library.java.powermock_mockito
     testCompile library.java.mockito_core
     // TODO(BEAM-10632): remove this dependency
     testCompile "org.checkerframework:checker-qual:3.5.0"
-}
\ No newline at end of file
+}
+
diff --git a/sdks/java/extensions/sketching/build.gradle b/sdks/java/extensions/sketching/build.gradle
index 84e6f29231ce..9a5891f1d1b3 100644
--- a/sdks/java/extensions/sketching/build.gradle
+++ b/sdks/java/extensions/sketching/build.gradle
@@ -30,11 +30,8 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile "com.clearspring.analytics:stream:$streamlib_version"
   compile "com.tdunning:t-digest:$tdigest_version"
-  compile library.java.slf4j_api
   testCompile library.java.avro
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/extensions/sorter/build.gradle b/sdks/java/extensions/sorter/build.gradle
index f6f0dc6cd0b7..9072fec3a3fc 100644
--- a/sdks/java/extensions/sorter/build.gradle
+++ b/sdks/java/extensions/sorter/build.gradle
@@ -36,10 +36,9 @@ hadoopVersions.each {kv -> configurations.create("hadoopVersion$kv.key")}
 dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.vendored_guava_26_0_jre
+  compile library.java.slf4j_api
   provided library.java.hadoop_mapreduce_client_core
   provided library.java.hadoop_common
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testCompile library.java.junit
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/extensions/sql/build.gradle b/sdks/java/extensions/sql/build.gradle
index f07809f2803e..c6c14d7660c9 100644
--- a/sdks/java/extensions/sql/build.gradle
+++ b/sdks/java/extensions/sql/build.gradle
@@ -62,7 +62,6 @@ dependencies {
   fmppTask "org.freemarker:freemarker:2.3.28"
   fmppTemplates library.java.vendored_calcite_1_20_0
   compile project(":sdks:java:core")
-  compile project(":sdks:java:extensions:join-library")
   compile project(":sdks:java:extensions:sql:udf")
   compile project(path: ":runners:direct-java", configuration: "shadow")
   compile library.java.commons_codec
@@ -73,7 +72,14 @@ dependencies {
   compile "com.alibaba:fastjson:1.2.69"
   compile "org.codehaus.janino:janino:3.0.11"
   compile "org.codehaus.janino:commons-compiler:3.0.11"
-  provided "org.checkerframework:checker-qual:3.4.1"
+  compile library.java.jackson_core
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.mongodb:mongo-java-driver:3.9.1"
+  compile library.java.slf4j_api
+  compile library.java.joda_time
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.checkerframework:checker-qual:2.0.0"
+  permitUnusedDeclared project(":sdks:java:core")
   provided project(":sdks:java:io:kafka")
   provided project(":sdks:java:io:google-cloud-platform")
   compile project(":sdks:java:io:mongodb")
@@ -85,9 +91,6 @@ dependencies {
   testCompile library.java.vendored_calcite_1_20_0
   testCompile library.java.vendored_guava_26_0_jre
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
-  testCompile library.java.mockito_core
   testCompile library.java.quickcheck_core
   testCompile library.java.testcontainers_kafka
   testCompile library.java.google_cloud_bigtable_emulator
diff --git a/sdks/java/extensions/sql/datacatalog/build.gradle b/sdks/java/extensions/sql/datacatalog/build.gradle
index ad1fab0bceb9..c551c5dac582 100644
--- a/sdks/java/extensions/sql/datacatalog/build.gradle
+++ b/sdks/java/extensions/sql/datacatalog/build.gradle
@@ -27,6 +27,15 @@ dependencies {
   compile(library.java.google_cloud_datacatalog_v1beta1) {
     exclude group: 'io.grpc', module: 'grpc-core' // Use Beam's version
   }
+  compile "com.google.api.grpc:proto-google-cloud-datacatalog-v1beta1:0.32.1"
+  compile "com.google.api:gax:1.57.1"
+  compile "com.google.auth:google-auth-library-credentials:0.19.0"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile library.java.vendored_guava_26_0_jre
+  compile library.java.slf4j_api
+  compile project(path: ":sdks:java:core", configuration: "shadow")
+  compile "org.threeten:threetenbp:1.4.5"
+  compile library.java.protobuf_java
   provided project(":sdks:java:extensions:sql")
 
   // Dependencies for the example
@@ -35,6 +44,8 @@ dependencies {
 
   testCompile project(":sdks:java:extensions:sql:zetasql")
   testRuntimeOnly library.java.slf4j_simple
+  permitUnusedDeclared "org.threeten:threetenbp:1.4.5"
+  permitUnusedDeclared library.java.protobuf_java
 }
 
 task runDataCatalogExample(type: JavaExec) {
diff --git a/sdks/java/extensions/sql/expansion-service/build.gradle b/sdks/java/extensions/sql/expansion-service/build.gradle
index aabd3b1ed0c2..2578510cc689 100644
--- a/sdks/java/extensions/sql/expansion-service/build.gradle
+++ b/sdks/java/extensions/sql/expansion-service/build.gradle
@@ -34,7 +34,9 @@ ext.summary = """Contains code to run a SQL Expansion Service."""
 dependencies {
   compile project(path: ":sdks:java:extensions:sql")
   compile project(path: ":sdks:java:extensions:sql:zetasql")
-  compile project(path: ":sdks:java:expansion-service")
+  compile project(path: ":sdks:java:core", configuration: "shadow")
+  compile "org.apache.beam:beam-vendor-guava-26_0-jre:0.1"
+  compile "org.checkerframework:checker-qual:2.0.0"
 }
 
 task runExpansionService (type: JavaExec) {
diff --git a/sdks/java/extensions/sql/hcatalog/build.gradle b/sdks/java/extensions/sql/hcatalog/build.gradle
index 678492eed4c9..81bca1a62f97 100644
--- a/sdks/java/extensions/sql/hcatalog/build.gradle
+++ b/sdks/java/extensions/sql/hcatalog/build.gradle
@@ -38,6 +38,5 @@ dependencies {
   testCompile("org.apache.hive.hcatalog:hive-hcatalog-core:$hive_version") {
     // Hive brings full Calcite 1.6 + Avatica with JDBC driver which
     // gets registered and gets started instead of ours
-    exclude group: "org.apache.calcite", module:"calcite-avatica"
   }
 }
diff --git a/sdks/java/extensions/sql/jdbc/build.gradle b/sdks/java/extensions/sql/jdbc/build.gradle
index f1919053a9e7..f051f5a3ebf3 100644
--- a/sdks/java/extensions/sql/jdbc/build.gradle
+++ b/sdks/java/extensions/sql/jdbc/build.gradle
@@ -32,18 +32,17 @@ configurations {
 
 dependencies {
   compile project(":sdks:java:extensions:sql")
-  compile "jline:jline:2.14.6"
   compile "sqlline:sqlline:1.4.0"
-  compile library.java.slf4j_jdk14
+  compile library.java.vendored_guava_26_0_jre
   testCompile project(path: ":sdks:java:io:google-cloud-platform", configuration: "testRuntime")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   // Depending on outputs so integrationTest can run with only test dependencies.
   // This enables us to test the JDBC jar being loaded on a custom classloader.
   integrationTest sourceSets.test.output
   integrationTest sourceSets.main.output
   integrationTest library.java.junit
+  compile project(path: ":sdks:java:core", configuration: "shadow")
+  compile "org.checkerframework:checker-qual:2.0.0"
 }
 
 processResources {
diff --git a/sdks/java/extensions/sql/zetasql/build.gradle b/sdks/java/extensions/sql/zetasql/build.gradle
index 9589301e90ca..e486bc805dac 100644
--- a/sdks/java/extensions/sql/zetasql/build.gradle
+++ b/sdks/java/extensions/sql/zetasql/build.gradle
@@ -31,25 +31,24 @@ def zetasql_version = "2020.10.1"
 
 dependencies {
   compile enforcedPlatform(library.java.google_cloud_platform_libraries_bom)
-  compile project(":sdks:java:core")
+  compile project(path: ":sdks:java:core", configuration: "shadow")
   compile project(":sdks:java:extensions:sql")
   compile library.java.vendored_calcite_1_20_0
   compile library.java.guava
   compile library.java.grpc_api
   compile library.java.protobuf_java
-  compile library.java.protobuf_java_util
-  compile "com.google.api.grpc:proto-google-common-protos:1.12.0" // Interfaces with ZetaSQL use this
-  compile "com.google.api.grpc:grpc-google-common-protos:1.12.0" // Interfaces with ZetaSQL use this
-  compile "com.google.zetasql:zetasql-jni-channel:$zetasql_version"
   compile "com.google.zetasql:zetasql-client:$zetasql_version"
   compile "com.google.zetasql:zetasql-types:$zetasql_version"
+  compile library.java.joda_time
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.checkerframework:checker-qual:2.0.0"
+  permitUnusedDeclared library.java.protobuf_java_util
+  compile "com.google.zetasql:zetasql-jni-channel:$zetasql_version"
+  permitUnusedDeclared "com.google.zetasql:zetasql-jni-channel:$zetasql_version"
   testCompile library.java.vendored_calcite_1_20_0
   testCompile library.java.vendored_guava_26_0_jre
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
-  testCompile library.java.quickcheck_core
   testRuntimeClasspath library.java.slf4j_jdk14
 }
 
diff --git a/sdks/java/extensions/zetasketch/build.gradle b/sdks/java/extensions/zetasketch/build.gradle
index ab1f7bf7a444..292e0fa6e1dd 100644
--- a/sdks/java/extensions/zetasketch/build.gradle
+++ b/sdks/java/extensions/zetasketch/build.gradle
@@ -33,6 +33,7 @@ dependencies {
     compile library.java.vendored_guava_26_0_jre
     compile project(path: ":sdks:java:core", configuration: "shadow")
     compile "com.google.zetasketch:zetasketch:$zetasketch_version"
+    compile "org.checkerframework:checker-qual:2.8.1"
     testCompile library.java.junit
     testCompile project(":sdks:java:io:google-cloud-platform")
     testRuntimeOnly library.java.slf4j_simple
diff --git a/sdks/java/fn-execution/build.gradle b/sdks/java/fn-execution/build.gradle
index ffb92cbc7ea2..ae98dee4c158 100644
--- a/sdks/java/fn-execution/build.gradle
+++ b/sdks/java/fn-execution/build.gradle
@@ -35,8 +35,6 @@ dependencies {
   compile library.java.joda_time
   provided library.java.junit
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testRuntimeOnly library.java.slf4j_jdk14
 }
diff --git a/sdks/java/harness/build.gradle b/sdks/java/harness/build.gradle
index 45891b0ac86f..01e727a90539 100644
--- a/sdks/java/harness/build.gradle
+++ b/sdks/java/harness/build.gradle
@@ -61,16 +61,13 @@ dependencies {
   dependOnProjects.each {
     compile project(it)
   }
-  compile library.java.jackson_databind
   shadow library.java.vendored_guava_26_0_jre
   shadowTest library.java.powermock
   shadowTest library.java.powermock_mockito
   compile library.java.joda_time
   compile library.java.slf4j_api
   compile library.java.vendored_grpc_1_26_0
-  provided library.java.error_prone_annotations
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
+  compile "org.checkerframework:checker-qual:2.0.0"
   testCompile library.java.junit
   testCompile library.java.mockito_core
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
diff --git a/sdks/java/io/amazon-web-services/build.gradle b/sdks/java/io/amazon-web-services/build.gradle
index c7c3874b2af4..f190088c7cb3 100644
--- a/sdks/java/io/amazon-web-services/build.gradle
+++ b/sdks/java/io/amazon-web-services/build.gradle
@@ -39,11 +39,12 @@ dependencies {
   compile library.java.aws_java_sdk_sns
   compile library.java.aws_java_sdk_sqs
   compile library.java.aws_java_sdk_sts
-  compile "commons-lang:commons-lang:2.6"
   compile library.java.jackson_core
   compile library.java.jackson_annotations
   compile library.java.jackson_databind
   compile library.java.slf4j_api
+  compile library.java.joda_time
+  compile "org.apache.httpcomponents:httpcore:4.4.11"
   runtime library.java.commons_codec
   runtime "org.apache.httpcomponents:httpclient:4.5.12"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
diff --git a/sdks/java/io/amazon-web-services2/build.gradle b/sdks/java/io/amazon-web-services2/build.gradle
index 854263ec973d..af44011866bf 100644
--- a/sdks/java/io/amazon-web-services2/build.gradle
+++ b/sdks/java/io/amazon-web-services2/build.gradle
@@ -42,23 +42,26 @@ dependencies {
   compile library.java.jackson_core
   compile library.java.jackson_annotations
   compile library.java.jackson_databind
-  compile library.java.jackson_dataformat_cbor
   compile library.java.joda_time
   compile library.java.slf4j_api
   compile "software.amazon.kinesis:amazon-kinesis-client:2.2.5"
   compile "commons-lang:commons-lang:2.6"
+  compile "org.apache.commons:commons-lang3:3.9"
+  compile "org.apache.httpcomponents:httpcore:4.4.11"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile "software.amazon.awssdk:http-client-spi:2.13.54"
+  compile "software.amazon.awssdk:regions:2.13.54"
+  compile "software.amazon.awssdk:utils:2.13.54"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:io:kinesis", configuration: "testRuntime")
   testCompile library.java.mockito_core
   testCompile library.java.guava_testlib
-  testCompile library.java.hamcrest_core
   testCompile library.java.junit
   testCompile 'org.elasticmq:elasticmq-rest-sqs_2.12:0.15.6'
   testCompile library.java.hamcrest_library
   testCompile library.java.powermock
   testCompile library.java.powermock_mockito
-  testCompile library.java.testcontainers_localstack
   testCompile "org.assertj:assertj-core:3.11.1"
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/io/amqp/build.gradle b/sdks/java/io/amqp/build.gradle
index 9c9f60c327e7..618ab8e40ac2 100644
--- a/sdks/java/io/amqp/build.gradle
+++ b/sdks/java/io/amqp/build.gradle
@@ -27,12 +27,10 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.joda_time
   compile "org.apache.qpid:proton-j:0.16.0"
+  testCompile library.java.activemq_amqp
   testCompile library.java.slf4j_api
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.activemq_broker
-  testCompile library.java.activemq_amqp
   testCompile library.java.activemq_junit
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/io/azure/build.gradle b/sdks/java/io/azure/build.gradle
index 97d31f9d9640..81d089c0f886 100644
--- a/sdks/java/io/azure/build.gradle
+++ b/sdks/java/io/azure/build.gradle
@@ -34,8 +34,10 @@ dependencies {
   compile "com.azure:azure-storage-blob:12.8.0"
   compile "com.azure:azure-identity:1.0.8"
   compile "com.microsoft.azure:azure-storage:8.6.5"
-  compile "commons-io:commons-io:2.6"
   compile library.java.slf4j_api
+  compile "com.azure:azure-core:1.6.0"
+  compile "com.azure:azure-storage-common:12.1.0"
+  compile "org.checkerframework:checker-qual:2.0.0"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.mockito_core
   testCompile library.java.junit
diff --git a/sdks/java/io/bigquery-io-perf-tests/build.gradle b/sdks/java/io/bigquery-io-perf-tests/build.gradle
index 8d5cf89195d3..1556226612ee 100644
--- a/sdks/java/io/bigquery-io-perf-tests/build.gradle
+++ b/sdks/java/io/bigquery-io-perf-tests/build.gradle
@@ -25,7 +25,7 @@ description = "Apache Beam :: SDKs :: Java :: Google BigQuery IO Performance tes
 ext.summary = "Performance tests for Google BigQuery IO sources and sinks"
 
 dependencies {
-    compile library.java.google_api_services_bigquery
+    testImplementation 'com.google.apis:google-api-services-bigquery:v2-rev20200719-1.30.10'
     testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
     testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
     testCompile project(path: ":sdks:java:extensions:google-cloud-platform-core", configuration: "testRuntime")
@@ -34,7 +34,4 @@ dependencies {
     testCompile project(path: ":sdks:java:io:google-cloud-platform", configuration: "testRuntime")
     testCompile project(":sdks:java:io:synthetic")
     testCompile library.java.junit
-    testCompile library.java.hamcrest_core
-    testCompile library.java.jaxb_api
-    testCompile library.java.jaxb_impl
 }
diff --git a/sdks/java/io/cassandra/build.gradle b/sdks/java/io/cassandra/build.gradle
index 6fc6e92b91af..ccaa723044e7 100644
--- a/sdks/java/io/cassandra/build.gradle
+++ b/sdks/java/io/cassandra/build.gradle
@@ -37,6 +37,7 @@ dependencies {
   compile library.java.slf4j_api
   compile library.java.cassandra_driver_core
   compile library.java.cassandra_driver_mapping
+  compile "org.checkerframework:checker-qual:2.0.0"
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile library.java.junit
   testCompile library.java.hamcrest_core
diff --git a/sdks/java/io/clickhouse/build.gradle b/sdks/java/io/clickhouse/build.gradle
index 42deda7c14ab..bbd250a94647 100644
--- a/sdks/java/io/clickhouse/build.gradle
+++ b/sdks/java/io/clickhouse/build.gradle
@@ -56,6 +56,10 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.joda_time
   compile "ru.yandex.clickhouse:clickhouse-jdbc:$clickhouse_jdbc_version"
+  compile "com.google.guava:guava:25.1-jre"
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile library.java.slf4j_api
   testCompile library.java.slf4j_api
   testCompile library.java.junit
   testCompile library.java.hamcrest_core
diff --git a/sdks/java/io/contextualtextio/build.gradle b/sdks/java/io/contextualtextio/build.gradle
index 0ebd983eeb60..5df6f1eba762 100644
--- a/sdks/java/io/contextualtextio/build.gradle
+++ b/sdks/java/io/contextualtextio/build.gradle
@@ -26,10 +26,11 @@ ext.summary = "Context-aware Text IO."
 
 dependencies {
     compile library.java.vendored_guava_26_0_jre
-    compile library.java.protobuf_java
     compile project(path: ":sdks:java:core", configuration: "shadow")
-    testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
+    compile library.java.vendored_grpc_1_26_0
+    compile library.java.slf4j_api
 
+    testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
     testCompile library.java.guava_testlib
     testCompile library.java.junit
     testCompile library.java.hamcrest_core
diff --git a/sdks/java/io/elasticsearch/build.gradle b/sdks/java/io/elasticsearch/build.gradle
index ac9e5e96cf02..d43784e35980 100644
--- a/sdks/java/io/elasticsearch/build.gradle
+++ b/sdks/java/io/elasticsearch/build.gradle
@@ -26,7 +26,13 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.jackson_databind
-  compile library.java.jackson_annotations
+  compile library.java.jackson_core
+  compile library.java.joda_time
+  compile "org.apache.httpcomponents:httpasyncclient:4.1.4"
+  compile "org.apache.httpcomponents:httpclient:4.5.10"
+  compile "org.apache.httpcomponents:httpcore-nio:4.4.12"
+  compile "org.apache.httpcomponents:httpcore:4.4.12"
+  compile library.java.slf4j_api
   compile "org.elasticsearch.client:elasticsearch-rest-client:7.9.2"
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
 }
diff --git a/sdks/java/io/expansion-service/build.gradle b/sdks/java/io/expansion-service/build.gradle
index 75ff5ad05544..06c66bcb4949 100644
--- a/sdks/java/io/expansion-service/build.gradle
+++ b/sdks/java/io/expansion-service/build.gradle
@@ -31,11 +31,6 @@ description = "Apache Beam :: SDKs :: Java :: IO :: Expansion Service"
 ext.summary = "Expansion service serving several Java IOs"
 
 dependencies {
-  compile project(":sdks:java:expansion-service")
-  compile project(":sdks:java:io:kafka")
-  compile project(":sdks:java:io:jdbc")
-  // Include postgres so it can be used with external JDBC
-  compile library.java.postgres
   runtime library.java.kafka_clients
   runtime library.java.slf4j_jdk14
 }
diff --git a/sdks/java/io/file-based-io-tests/build.gradle b/sdks/java/io/file-based-io-tests/build.gradle
index 6c53e90ff17f..b47a51d7b633 100644
--- a/sdks/java/io/file-based-io-tests/build.gradle
+++ b/sdks/java/io/file-based-io-tests/build.gradle
@@ -31,8 +31,6 @@ dependencies {
   testCompile project(path: ":sdks:java:io:parquet", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   testCompile library.java.jaxb_api
-  testCompile library.java.jaxb_impl
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
   testCompile library.java.hadoop_client
 }
diff --git a/sdks/java/io/google-cloud-platform/build.gradle b/sdks/java/io/google-cloud-platform/build.gradle
index 7ac6878eae80..1087e7fe7e57 100644
--- a/sdks/java/io/google-cloud-platform/build.gradle
+++ b/sdks/java/io/google-cloud-platform/build.gradle
@@ -31,7 +31,7 @@ ext.summary = "IO library to read and write Google Cloud Platform systems from B
 dependencies {
   compile enforcedPlatform(library.java.google_cloud_platform_libraries_bom)
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(":sdks:java:expansion-service")
+  testCompile project(":sdks:java:expansion-service")
   compile project(":sdks:java:extensions:google-cloud-platform-core")
   compile project(":sdks:java:extensions:protobuf")
   compile library.java.avro
@@ -50,9 +50,6 @@ dependencies {
     exclude group: 'io.grpc', module: 'grpc-grpclb'
   }
   compile library.java.google_cloud_core
-  compile(library.java.google_cloud_core_grpc) {
-    exclude group: 'io.grpc', module: 'grpc-core' // Use Beam's version
-  }
   compile library.java.google_cloud_datastore_v1_proto_client
   compile library.java.google_cloud_pubsublite
   // GCP PubSub client is used in TestPubSub
@@ -60,32 +57,40 @@ dependencies {
   compile library.java.google_cloud_spanner
   compile library.java.google_http_client
   compile library.java.google_http_client_jackson2
-  compile library.java.grpc_alts
   compile library.java.grpc_auth
-  compile library.java.grpc_core
-  compile library.java.grpc_context
-  compile library.java.grpc_grpclb
+  testImplementation 'io.grpc:grpc-core:1.27.2'
   compile library.java.grpc_netty
-  compile library.java.grpc_netty_shaded
-  compile library.java.grpc_stub
   compile library.java.grpc_google_cloud_pubsub_v1
-  compile library.java.grpc_google_cloud_pubsublite_v1
   compile library.java.guava
-  compile library.java.hamcrest_core
   compile library.java.jackson_databind
   compile library.java.joda_time
   compile library.java.junit
   compile library.java.netty_handler
-  compile library.java.netty_tcnative_boringssl_static
-  compile library.java.proto_google_cloud_bigquery_storage_v1beta1
   compile library.java.proto_google_cloud_bigtable_v2
   compile library.java.proto_google_cloud_datastore_v1
   compile library.java.proto_google_cloud_pubsub_v1
   compile library.java.proto_google_cloud_pubsublite_v1
-  compile library.java.proto_google_cloud_spanner_admin_database_v1
   compile library.java.proto_google_common_protos
   compile library.java.protobuf_java
   compile library.java.slf4j_api
+  compile "com.google.api.grpc:proto-google-cloud-bigquerystorage-v1:0.90.0"
+  compile "com.google.api.grpc:proto-google-cloud-bigtable-admin-v2:1.14.0"
+  compile "com.google.api.grpc:proto-google-cloud-spanner-v1:1.59.0"
+  compile "com.google.api:api-common:1.8.1"
+  compile "com.google.apis:google-api-services-storage:v1-rev20200611-1.30.10"
+  compile "com.google.code.gson:gson:2.8.6"
+  compile "com.google.errorprone:error_prone_annotations:2.3.3"
+  compile "com.google.protobuf:protobuf-java-util:3.11.1"
+  compile "io.grpc:grpc-api:1.27.2"
+  compile "org.apache.beam:beam-vendor-guava-26_0-jre:0.1"
+  compile "org.apache.httpcomponents:httpclient:4.5.12"
+  compile "org.apache.httpcomponents:httpcore:4.4.13"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile library.java.jackson_core
+  compile "org.hamcrest:hamcrest:2.1"
+  compile "org.threeten:threetenbp:1.4.4"
+  compile "org.apache.beam:beam-vendor-grpc-1_26_0:0.3"
+  compile project(path: ":model:pipeline", configuration: "shadow")
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":sdks:java:extensions:google-cloud-platform-core", configuration: "testRuntime")
   testCompile project(path: ":runners:direct-java", configuration: "shadow")
@@ -93,7 +98,6 @@ dependencies {
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   // For testing Cross-language transforms
   testCompile project(":runners:core-construction-java")
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testCompile library.java.powermock
   testCompile library.java.powermock_mockito
diff --git a/sdks/java/io/google-cloud-platform/expansion-service/build.gradle b/sdks/java/io/google-cloud-platform/expansion-service/build.gradle
index 2d1799762761..b86644d7565b 100644
--- a/sdks/java/io/google-cloud-platform/expansion-service/build.gradle
+++ b/sdks/java/io/google-cloud-platform/expansion-service/build.gradle
@@ -31,7 +31,5 @@ description = "Apache Beam :: SDKs :: Java :: IO :: Google Cloud Platform :: Exp
 ext.summary = "Expansion service serving GCP Java IOs"
 
 dependencies {
-    compile project(":sdks:java:expansion-service")
-    compile project(":sdks:java:io:google-cloud-platform")
     runtime library.java.slf4j_jdk14
 }
diff --git a/sdks/java/io/hadoop-common/build.gradle b/sdks/java/io/hadoop-common/build.gradle
index 534512e49d10..552073742edb 100644
--- a/sdks/java/io/hadoop-common/build.gradle
+++ b/sdks/java/io/hadoop-common/build.gradle
@@ -38,8 +38,6 @@ dependencies {
   provided library.java.hadoop_client
   provided library.java.hadoop_common
   provided library.java.hadoop_mapreduce_client_core
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   hadoopVersions.each {kv ->
     "hadoopVersion$kv.key" "org.apache.hadoop:hadoop-client:$kv.value"
diff --git a/sdks/java/io/hadoop-file-system/build.gradle b/sdks/java/io/hadoop-file-system/build.gradle
index 39ba9ba452e0..686d42384492 100644
--- a/sdks/java/io/hadoop-file-system/build.gradle
+++ b/sdks/java/io/hadoop-file-system/build.gradle
@@ -45,8 +45,6 @@ dependencies {
   provided library.java.hadoop_common
   provided library.java.hadoop_mapreduce_client_core
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.mockito_core
   testCompile library.java.junit
   testCompile library.java.hadoop_minicluster
diff --git a/sdks/java/io/hadoop-format/build.gradle b/sdks/java/io/hadoop-format/build.gradle
index 5ab4a55013a3..6e724a22bb9a 100644
--- a/sdks/java/io/hadoop-format/build.gradle
+++ b/sdks/java/io/hadoop-format/build.gradle
@@ -60,6 +60,7 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile library.java.slf4j_api
   compile project(":sdks:java:io:hadoop-common")
+  compile library.java.joda_time
   provided library.java.hadoop_common
   provided library.java.hadoop_hdfs
   provided library.java.hadoop_mapreduce_client_core
@@ -68,6 +69,7 @@ dependencies {
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   testCompile project(":sdks:java:io:jdbc")
   testCompile project(path: ":examples:java", configuration: "testRuntime")
+  testCompile "org.elasticsearch.plugin:transport-netty4-client:$elastic_search_version"
   testCompile library.java.testcontainers_elasticsearch
   testCompile "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elastic_search_version"
   testCompile "org.elasticsearch:elasticsearch:$elastic_search_version"
@@ -90,7 +92,6 @@ dependencies {
   testCompile library.java.cassandra_driver_mapping
   testCompile "org.apache.cassandra:cassandra-all:3.11.8"
   testCompile library.java.postgres
-  testCompile "org.apache.logging.log4j:log4j-core:$log4j_version"
   testCompile library.java.junit
   testCompile library.java.hamcrest_core
   testCompile library.java.hamcrest_library
diff --git a/sdks/java/io/hcatalog/build.gradle b/sdks/java/io/hcatalog/build.gradle
index d1c9e6fa9831..c418a52c571e 100644
--- a/sdks/java/io/hcatalog/build.gradle
+++ b/sdks/java/io/hcatalog/build.gradle
@@ -55,6 +55,7 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile project(":sdks:java:io:hadoop-common")
   compile library.java.slf4j_api
+  compile library.java.joda_time
   // Hive bundles without repackaging Jackson which is why we redeclare it here so that it appears
   // on the compile/test/runtime classpath before Hive.
   provided library.java.jackson_annotations
@@ -65,8 +66,6 @@ dependencies {
   provided library.java.hadoop_common
   provided "org.apache.hive:hive-exec:$hive_version"
   provided(group: "org.apache.hive.hcatalog", name: "hive-hcatalog-core", version: hive_version) {
-    exclude group: "org.apache.hive", module: "hive-exec"
-    exclude group: "com.google.protobuf", module: "protobuf-java"
   }
   testCompile project(":sdks:java:io:common").sourceSets.test.output
   testCompile library.java.commons_io
diff --git a/sdks/java/io/influxdb/build.gradle b/sdks/java/io/influxdb/build.gradle
index 782c57218eae..4bbe170097d3 100644
--- a/sdks/java/io/influxdb/build.gradle
+++ b/sdks/java/io/influxdb/build.gradle
@@ -27,6 +27,9 @@ ext.summary = "IO to read and write on InfluxDB"
 dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.influxdb_library
+  compile "com.squareup.okhttp3:okhttp:4.6.0"
+  compile library.java.vendored_guava_26_0_jre
+  compile library.java.slf4j_api
   testCompile library.java.junit
   testCompile library.java.powermock
   testCompile library.java.powermock_mockito
diff --git a/sdks/java/io/jdbc/build.gradle b/sdks/java/io/jdbc/build.gradle
index 549749c1d830..709393874322 100644
--- a/sdks/java/io/jdbc/build.gradle
+++ b/sdks/java/io/jdbc/build.gradle
@@ -30,17 +30,18 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile "org.apache.commons:commons-dbcp2:2.6.0"
+  compile library.java.joda_time
+  compile "org.apache.commons:commons-pool2:2.6.1"
+  compile library.java.slf4j_api
+  testCompile "org.apache.derby:derby:10.14.2.0"
+  testCompile "org.apache.derby:derbyclient:10.14.2.0"
+  testCompile "org.apache.derby:derbynet:10.14.2.0"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.slf4j_api
   testCompile library.java.postgres
-  testCompile "org.apache.derby:derby:10.14.2.0"
-  testCompile "org.apache.derby:derbyclient:10.14.2.0"
-  testCompile "org.apache.derby:derbynet:10.14.2.0"
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/jms/build.gradle b/sdks/java/io/jms/build.gradle
index 657bed432fae..b73fa8d592cc 100644
--- a/sdks/java/io/jms/build.gradle
+++ b/sdks/java/io/jms/build.gradle
@@ -30,14 +30,12 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.slf4j_api
   compile library.java.joda_time
-  compile "org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1"
-  testCompile library.java.activemq_broker
   testCompile library.java.activemq_jaas
   testCompile library.java.activemq_kahadb_store
+  compile "org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1"
+  testCompile library.java.activemq_broker
   testCompile library.java.activemq_client
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/kafka/build.gradle b/sdks/java/io/kafka/build.gradle
index a500ddd49fb5..9207a661ab39 100644
--- a/sdks/java/io/kafka/build.gradle
+++ b/sdks/java/io/kafka/build.gradle
@@ -48,7 +48,9 @@ kafkaVersions.each{k,v -> configurations.create("kafkaVersion$k")}
 dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(":sdks:java:expansion-service")
+  testCompile project(":sdks:java:expansion-service")
+  compile "org.apache.kafka:kafka-clients:2.4.1"
+  compile library.java.avro
   // Get back to "provided" since 2.14
   provided library.java.kafka_clients
   compile library.java.slf4j_api
@@ -57,6 +59,13 @@ dependencies {
   compile library.java.jackson_databind
   compile "org.springframework:spring-expression:4.3.18.RELEASE"
   compile ("io.confluent:kafka-avro-serializer:5.3.2") {
+    // zookeeper depends on "spotbugs-annotations:3.1.9" which clashes with current
+    // "spotbugs-annotations:3.1.12" used in Beam. Not required.
+    exclude group: "org.apache.zookeeper", module: "zookeeper"
+    // "kafka-clients" has to be provided since user can use its own version.
+    exclude group: "org.apache.kafka", module: "kafka-clients"
+  }
+  compile ("io.confluent:kafka-schema-registry-client:5.3.2") {
     // It depends on "spotbugs-annotations:3.1.9" which clashes with current
     // "spotbugs-annotations:3.1.12" used in Beam. Not required.
     exclude group: "org.apache.zookeeper", module: "zookeeper"
@@ -71,8 +80,6 @@ dependencies {
   // For testing Cross-language transforms
   testCompile project(":runners:core-construction-java")
   testCompile library.java.avro
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   testCompile library.java.powermock
   testCompile library.java.powermock_mockito
diff --git a/sdks/java/io/kinesis/build.gradle b/sdks/java/io/kinesis/build.gradle
index bb513d875c6f..e6744d8bfffe 100644
--- a/sdks/java/io/kinesis/build.gradle
+++ b/sdks/java/io/kinesis/build.gradle
@@ -33,7 +33,6 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.slf4j_api
   compile library.java.joda_time
-  compile library.java.jackson_dataformat_cbor
   compile library.java.guava
   compile library.java.aws_java_sdk_cloudwatch
   compile library.java.aws_java_sdk_core
@@ -41,12 +40,13 @@ dependencies {
   compile "com.amazonaws:amazon-kinesis-client:1.13.0"
   compile "com.amazonaws:amazon-kinesis-producer:0.14.1"
   compile "commons-lang:commons-lang:2.6"
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.apache.commons:commons-lang3:3.9"
+  compile "org.checkerframework:checker-qual:2.0.0"
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile library.java.junit
   testCompile library.java.mockito_core
   testCompile library.java.guava_testlib
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.powermock
   testCompile library.java.powermock_mockito
   testCompile library.java.testcontainers_localstack
diff --git a/sdks/java/io/kinesis/expansion-service/build.gradle b/sdks/java/io/kinesis/expansion-service/build.gradle
index ef3db42f0e2d..1e07a04fc531 100644
--- a/sdks/java/io/kinesis/expansion-service/build.gradle
+++ b/sdks/java/io/kinesis/expansion-service/build.gradle
@@ -32,7 +32,5 @@ description = "Apache Beam :: SDKs :: Java :: IO :: Kinesis :: Expansion Service
 ext.summary = "Expansion service serving KinesisIO"
 
 dependencies {
-  compile project(":sdks:java:expansion-service")
-  compile project(":sdks:java:io:kinesis")
   runtime library.java.slf4j_jdk14
 }
diff --git a/sdks/java/io/kudu/build.gradle b/sdks/java/io/kudu/build.gradle
index ffd776021dd4..7f28d5ecf9cf 100644
--- a/sdks/java/io/kudu/build.gradle
+++ b/sdks/java/io/kudu/build.gradle
@@ -50,8 +50,6 @@ dependencies {
   compile library.java.slf4j_api
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/io/mongodb/build.gradle b/sdks/java/io/mongodb/build.gradle
index 4e6ef1c67391..1e5baf79d13e 100644
--- a/sdks/java/io/mongodb/build.gradle
+++ b/sdks/java/io/mongodb/build.gradle
@@ -31,8 +31,6 @@ dependencies {
   compile library.java.joda_time
   compile "org.mongodb:mongo-java-driver:3.12.7"
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0"
diff --git a/sdks/java/io/mqtt/build.gradle b/sdks/java/io/mqtt/build.gradle
index a384274de773..e103c2479c61 100644
--- a/sdks/java/io/mqtt/build.gradle
+++ b/sdks/java/io/mqtt/build.gradle
@@ -27,15 +27,13 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.slf4j_api
   compile library.java.joda_time
+  testCompile library.java.activemq_mqtt
+  testCompile library.java.activemq_kahadb_store
   compile "org.fusesource.mqtt-client:mqtt-client:1.15"
   compile "org.fusesource.hawtbuf:hawtbuf:1.11"
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile library.java.activemq_broker
-  testCompile library.java.activemq_mqtt
-  testCompile library.java.activemq_kahadb_store
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/parquet/build.gradle b/sdks/java/io/parquet/build.gradle
index b3af3c6f0a43..8421ace28b03 100644
--- a/sdks/java/io/parquet/build.gradle
+++ b/sdks/java/io/parquet/build.gradle
@@ -46,11 +46,10 @@ dependencies {
   compile "org.apache.parquet:parquet-common:$parquet_version"
   compile "org.apache.parquet:parquet-hadoop:$parquet_version"
   compile library.java.avro
+  compile "org.apache.parquet:parquet-column:1.10.0"
   provided library.java.hadoop_client
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
   hadoopVersions.each {kv ->
diff --git a/sdks/java/io/rabbitmq/build.gradle b/sdks/java/io/rabbitmq/build.gradle
index 2256bc3726ab..2b8008437e33 100644
--- a/sdks/java/io/rabbitmq/build.gradle
+++ b/sdks/java/io/rabbitmq/build.gradle
@@ -35,8 +35,6 @@ dependencies {
   testCompile "org.apache.qpid:qpid-broker-plugins-memory-store:$qpid_version"
   testCompile "org.apache.qpid:qpid-broker-plugins-amqp-0-8-protocol:$qpid_version"
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.slf4j_api
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/io/redis/build.gradle b/sdks/java/io/redis/build.gradle
index 611053f10df4..a09900a25c4d 100644
--- a/sdks/java/io/redis/build.gradle
+++ b/sdks/java/io/redis/build.gradle
@@ -28,8 +28,6 @@ dependencies {
   compile "redis.clients:jedis:3.3.0"
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile "com.github.kstyrc:embedded-redis:0.6"
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
diff --git a/sdks/java/io/snowflake/build.gradle b/sdks/java/io/snowflake/build.gradle
index a6adc23ebba8..c8aca747fff0 100644
--- a/sdks/java/io/snowflake/build.gradle
+++ b/sdks/java/io/snowflake/build.gradle
@@ -27,19 +27,17 @@ ext.summary = "IO to read and write on Snowflake."
 dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(path: ":sdks:java:extensions:google-cloud-platform-core")
   compile library.java.slf4j_api
   compile group: 'net.snowflake', name: 'snowflake-jdbc', version: '3.12.11'
   compile group: 'com.opencsv', name: 'opencsv', version: '5.0'
   compile 'net.snowflake:snowflake-ingest-sdk:0.9.9'
+  compile library.java.joda_time
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
   testCompile 'com.google.cloud:google-cloud-storage:1.102.0'
   testCompile library.java.avro
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.slf4j_api
   testRuntimeOnly library.java.hadoop_client
   testRuntimeOnly library.java.slf4j_jdk14
diff --git a/sdks/java/io/snowflake/expansion-service/build.gradle b/sdks/java/io/snowflake/expansion-service/build.gradle
index fe442b41af47..8e0cb5be4202 100644
--- a/sdks/java/io/snowflake/expansion-service/build.gradle
+++ b/sdks/java/io/snowflake/expansion-service/build.gradle
@@ -32,8 +32,6 @@ description = "Apache Beam :: SDKs :: Java :: IO :: Snowflake ::Expansion Servic
   ext.summary = "Expansion service serving Snowflake IO"
 
 dependencies {
-  compile project(":sdks:java:expansion-service")
-  compile project(":sdks:java:io:snowflake")
   runtime library.java.slf4j_jdk14
 }
 
diff --git a/sdks/java/io/solr/build.gradle b/sdks/java/io/solr/build.gradle
index 33a9b5cb69c7..efdfde26e043 100644
--- a/sdks/java/io/solr/build.gradle
+++ b/sdks/java/io/solr/build.gradle
@@ -30,12 +30,11 @@ dependencies {
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.commons_compress
+  compile library.java.joda_time
+  compile library.java.slf4j_api
   compile "org.apache.solr:solr-solrj:$solrVersion"
-  compileOnly "org.apache.httpcomponents:httpclient:4.5.6"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile project(":sdks:java:io:common")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testCompile library.java.junit
   testCompile library.java.slf4j_api
   testCompile "org.apache.solr:solr-test-framework:$solrVersion"
diff --git a/sdks/java/io/splunk/build.gradle b/sdks/java/io/splunk/build.gradle
index a8a31b7354d6..8992a0ee9ad6 100644
--- a/sdks/java/io/splunk/build.gradle
+++ b/sdks/java/io/splunk/build.gradle
@@ -27,10 +27,15 @@ ext.summary = "IO to write events to Splunk Http Event Collector (HEC)"
 dependencies {
     compile platform(library.java.google_cloud_platform_libraries_bom)
     compile library.java.slf4j_api
-    compile library.java.google_api_client
     compile library.java.google_http_client_apache_v2
     compile library.java.google_code_gson
     compile project(path: ":sdks:java:core", configuration: "shadow")
+    compile "com.google.http-client:google-http-client:1.34.0"
+    compile library.java.joda_time
+    compile library.java.vendored_guava_26_0_jre
+    compile "org.apache.httpcomponents:httpclient:4.5.10"
+    compile "org.apache.httpcomponents:httpcore:4.4.12"
+    compile "org.checkerframework:checker-qual:2.0.0"
     testCompile library.java.junit
     testCompile group: 'org.mock-server', name: 'mockserver-junit-rule', version: '5.10.0'
     testCompile group: 'org.mock-server', name: 'mockserver-client-java', version: '5.10.0'
diff --git a/sdks/java/io/synthetic/build.gradle b/sdks/java/io/synthetic/build.gradle
index cb9cbf8db1d7..f89fe3b5db8c 100644
--- a/sdks/java/io/synthetic/build.gradle
+++ b/sdks/java/io/synthetic/build.gradle
@@ -31,11 +31,11 @@ dependencies {
   compile library.java.jackson_core
   compile library.java.jackson_annotations
   compile library.java.jackson_databind
+  compile library.java.vendored_guava_26_0_jre
+  compile library.java.slf4j_api
   compile project(path: ":sdks:java:core", configuration: "shadow")
 
   testCompile library.java.vendored_guava_26_0_jre
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/thrift/build.gradle b/sdks/java/io/thrift/build.gradle
index d22b934256e7..516240408f8c 100644
--- a/sdks/java/io/thrift/build.gradle
+++ b/sdks/java/io/thrift/build.gradle
@@ -39,11 +39,6 @@ dependencies {
     compile "org.apache.thrift:libthrift:0.13.0"
     compile project(path: ":sdks:java:core", configuration: "shadow")
     testCompile library.java.junit
-    testCompile library.java.hamcrest_core
-    testCompile library.java.hamcrest_library
-    testCompile library.java.jackson_databind
-    testCompile "com.google.code.gson:gson:2.8.6"
-    testCompile "commons-io:commons-io:2.6"
     testRuntimeOnly library.java.slf4j_jdk14
     testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/tika/build.gradle b/sdks/java/io/tika/build.gradle
index 28c6c622a31f..cea2103df9ad 100644
--- a/sdks/java/io/tika/build.gradle
+++ b/sdks/java/io/tika/build.gradle
@@ -27,14 +27,11 @@ def bndlib_version = "1.43.0"
 
 dependencies {
   compile library.java.vendored_guava_26_0_jre
-  compileOnly "biz.aQute:bndlib:$bndlib_version"
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile "org.apache.tika:tika-core:$tika_version"
+  testCompile "org.apache.tika:tika-parsers:$tika_version"
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
-  testCompile "org.apache.tika:tika-parsers:$tika_version"
   testCompileOnly "biz.aQute:bndlib:$bndlib_version"
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/io/xml/build.gradle b/sdks/java/io/xml/build.gradle
index d6c8ba2761e3..24040b0556cb 100644
--- a/sdks/java/io/xml/build.gradle
+++ b/sdks/java/io/xml/build.gradle
@@ -24,15 +24,14 @@ ext.summary = "IO to read and write XML files."
 
 dependencies {
   compile library.java.jaxb_api
-  compile library.java.jaxb_impl
   compile library.java.vendored_guava_26_0_jre
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.stax2_api
+  compile "javax.xml.stream:stax-api:1.0-2"
   compile library.java.woodstox_core_asl
+  permitUnusedDeclared library.java.woodstox_core_asl
   testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
   testCompile library.java.junit
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly library.java.slf4j_jdk14
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
 }
diff --git a/sdks/java/maven-archetypes/examples/build.gradle b/sdks/java/maven-archetypes/examples/build.gradle
index 43f3021e20d4..dca853614c3b 100644
--- a/sdks/java/maven-archetypes/examples/build.gradle
+++ b/sdks/java/maven-archetypes/examples/build.gradle
@@ -75,7 +75,3 @@ sourceSets {
   output.dir('src', builtBy: 'generateSources')
  }
 }
-
-dependencies {
-  compile project(":examples:java")
-}
diff --git a/sdks/java/maven-archetypes/starter/build.gradle b/sdks/java/maven-archetypes/starter/build.gradle
index 850c661b2134..7c8c02bd5593 100644
--- a/sdks/java/maven-archetypes/starter/build.gradle
+++ b/sdks/java/maven-archetypes/starter/build.gradle
@@ -31,8 +31,3 @@ processResources {
     'maven-exec-plugin.version': dependencies.create(project.library.maven.maven_exec_plugin).getVersion(),
   ]
 }
-
-dependencies {
-  compile project(path: ":runners:direct-java", configuration: "shadow")
-  compile project(path: ":sdks:java:core", configuration: "shadow")
-}
diff --git a/sdks/java/testing/expansion-service/build.gradle b/sdks/java/testing/expansion-service/build.gradle
index 53491e2f09dd..45ca023f8523 100644
--- a/sdks/java/testing/expansion-service/build.gradle
+++ b/sdks/java/testing/expansion-service/build.gradle
@@ -27,10 +27,8 @@ ext.summary = """Testing Expansion Service used for executing cross-language tra
 
 
 dependencies {
-  compile project(path: ":runners:core-construction-java")
-  compile project(path: ":sdks:java:io:parquet")
-  compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(":sdks:java:expansion-service")
+  testCompile project(path: ":sdks:java:io:parquet")
+  testCompile project(":sdks:java:expansion-service")
   testRuntime library.java.hadoop_client
 }
 
diff --git a/sdks/java/testing/load-tests/build.gradle b/sdks/java/testing/load-tests/build.gradle
index 6568cf2f00b0..7780a9786cda 100644
--- a/sdks/java/testing/load-tests/build.gradle
+++ b/sdks/java/testing/load-tests/build.gradle
@@ -61,14 +61,18 @@ configurations {
 
 dependencies {
   compile library.java.kafka_clients
-
   compile project(path: ":sdks:java:core", configuration: "shadow")
-  compile project(path: ":runners:direct-java", configuration: "shadow")
   compile project(":sdks:java:io:synthetic")
   compile project(":sdks:java:testing:test-utils")
   compile project(":sdks:java:io:google-cloud-platform")
   compile project(":sdks:java:io:kafka")
   compile project(":sdks:java:io:kinesis")
+  compile "com.amazonaws:aws-java-sdk-core:1.11.718"
+  compile "com.google.cloud:google-cloud-core:1.93.7"
+  compile library.java.joda_time
+  compile library.java.vendored_guava_26_0_jre
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile library.java.slf4j_api
 
   gradleRun project(project.path)
   gradleRun project(path: runnerDependency, configuration: runnerConfiguration)
diff --git a/sdks/java/testing/nexmark/build.gradle b/sdks/java/testing/nexmark/build.gradle
index e3f7ae828ba8..d8dad361dcd7 100644
--- a/sdks/java/testing/nexmark/build.gradle
+++ b/sdks/java/testing/nexmark/build.gradle
@@ -62,6 +62,10 @@ dependencies {
   compile project(":sdks:java:extensions:sql:zetasql")
   compile project(":sdks:java:io:kafka")
   compile project(":sdks:java:testing:test-utils")
+  compile "com.google.api-client:google-api-client:1.30.10"
+  compile "junit:junit:4.13-beta-3"
+  compile "org.checkerframework:checker-qual:2.0.0"
+  compile "org.hamcrest:hamcrest:2.1"
   compile library.java.google_api_services_bigquery
   compile library.java.jackson_core
   compile library.java.jackson_annotations
@@ -75,9 +79,6 @@ dependencies {
   testRuntimeClasspath library.java.slf4j_jdk14
   testCompile project(path: ":sdks:java:io:google-cloud-platform", configuration: "testRuntime")
   testCompile project(path: ":sdks:java:testing:test-utils", configuration: "testRuntime")
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
-
   gradleRun project(project.path)
   gradleRun project(path: nexmarkRunnerDependency, configuration: runnerConfiguration)
 
diff --git a/sdks/java/testing/test-utils/build.gradle b/sdks/java/testing/test-utils/build.gradle
index d95af02acf67..0217e6dbd6e4 100644
--- a/sdks/java/testing/test-utils/build.gradle
+++ b/sdks/java/testing/test-utils/build.gradle
@@ -30,12 +30,15 @@ dependencies {
   compile project(path: ":sdks:java:core", configuration: "shadow")
   compile library.java.vendored_guava_26_0_jre
   compile library.java.google_cloud_bigquery
-  compile project(":sdks:java:extensions:google-cloud-platform-core")
+  compile "com.google.code.gson:gson:2.8.6"
+  compile library.java.joda_time
+  compile "org.apache.commons:commons-compress:1.20"
+  compile "org.apache.commons:commons-lang3:3.9"
+  compile "org.apache.httpcomponents:httpclient:4.5.10"
+  compile "org.apache.httpcomponents:httpcore:4.4.12"
+  compile library.java.slf4j_api
 
   testCompile library.java.junit
-  testCompile library.java.mockito_core
-  testCompile library.java.hamcrest_core
-  testCompile library.java.hamcrest_library
   testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadowTest")
 }
 
diff --git a/vendor/sdks-java-extensions-protobuf/build.gradle b/vendor/sdks-java-extensions-protobuf/build.gradle
index 1aaefb166ca0..abd5e206b77a 100644
--- a/vendor/sdks-java-extensions-protobuf/build.gradle
+++ b/vendor/sdks-java-extensions-protobuf/build.gradle
@@ -56,7 +56,8 @@ compileJava {
 }
 
 dependencies {
-    compile "com.google.guava:guava:${GrpcVendoring_1_26_0.guava_version}"
     compile "com.google.protobuf:protobuf-java:${GrpcVendoring_1_26_0.protobuf_version}"
     shadow project(path: ":sdks:java:core", configuration: "shadow")
+    compile "org.apache.beam:beam-vendor-bytebuddy-1_10_8:0.1"
+    compile library.java.vendored_guava_26_0_jre
 }

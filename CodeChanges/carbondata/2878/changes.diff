diff --git a/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ForwardDictionaryCache.java b/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ForwardDictionaryCache.java
index dad6c8ff361..8b3d649e2be 100644
--- a/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ForwardDictionaryCache.java
+++ b/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ForwardDictionaryCache.java
@@ -138,7 +138,7 @@ public ForwardDictionaryCache(CarbonLRUCache carbonLRUCache) {
       executorService.shutdown();
       executorService.awaitTermination(2, TimeUnit.HOURS);
     } catch (InterruptedException e) {
-      LOGGER.error("Error loading the dictionary: " + e.getMessage());
+      LOGGER.error("Error loading the dictionary: " + e.getMessage(), e);
     }
     for (int i = 0; i < taskSubmitList.size(); i++) {
       try {
diff --git a/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ReverseDictionaryCache.java b/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ReverseDictionaryCache.java
index f40b611cabe..fc4bbe5352c 100644
--- a/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ReverseDictionaryCache.java
+++ b/core/src/main/java/org/apache/carbondata/core/cache/dictionary/ReverseDictionaryCache.java
@@ -115,7 +115,7 @@ public ReverseDictionaryCache(CarbonLRUCache carbonLRUCache) {
       executorService.shutdown();
       executorService.awaitTermination(2, TimeUnit.HOURS);
     } catch (InterruptedException e) {
-      LOGGER.error("Error loading the dictionary: " + e.getMessage());
+      LOGGER.error("Error loading the dictionary: " + e.getMessage(), e);
     }
     for (int i = 0; i < taskSubmitList.size(); i++) {
       try {
diff --git a/core/src/main/java/org/apache/carbondata/core/datamap/DataMapStoreManager.java b/core/src/main/java/org/apache/carbondata/core/datamap/DataMapStoreManager.java
index baf4739d87d..48c392e2cd1 100644
--- a/core/src/main/java/org/apache/carbondata/core/datamap/DataMapStoreManager.java
+++ b/core/src/main/java/org/apache/carbondata/core/datamap/DataMapStoreManager.java
@@ -502,7 +502,7 @@ public CarbonTable getCarbonTable(AbsoluteTableIdentifier identifier) {
             .buildFromTablePath(identifier.getTableName(), identifier.getDatabaseName(),
                 identifier.getTablePath(), identifier.getCarbonTableIdentifier().getTableId());
       } catch (IOException e) {
-        LOGGER.warn("failed to get carbon table from table Path" + e.getMessage());
+        LOGGER.warn("failed to get carbon table from table Path" + e.getMessage(), e);
         // ignoring exception
       }
     }
diff --git a/core/src/main/java/org/apache/carbondata/core/datamap/DataMapUtil.java b/core/src/main/java/org/apache/carbondata/core/datamap/DataMapUtil.java
index 138bd62882a..bea1cca87ce 100644
--- a/core/src/main/java/org/apache/carbondata/core/datamap/DataMapUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/datamap/DataMapUtil.java
@@ -51,7 +51,7 @@ public static Object createDataMapJob(String className) {
     try {
       return Class.forName(className).getDeclaredConstructors()[0].newInstance();
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       return null;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AbstractDFSCarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AbstractDFSCarbonFile.java
index d56caac752c..a90648e9c92 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AbstractDFSCarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AbstractDFSCarbonFile.java
@@ -74,7 +74,7 @@ public AbstractDFSCarbonFile(String filePath, Configuration hadoopConf) {
       fs = path.getFileSystem(this.hadoopConf);
       fileStatus = fs.getFileStatus(path);
     } catch (IOException e) {
-      LOGGER.debug("Exception occurred:" + e.getMessage());
+      LOGGER.debug("Exception occurred:" + e.getMessage(), e);
     }
   }
 
@@ -89,7 +89,7 @@ public AbstractDFSCarbonFile(Path path, Configuration hadoopConf) {
       fs = path.getFileSystem(this.hadoopConf);
       fileStatus = fs.getFileStatus(path);
     } catch (IOException e) {
-      LOGGER.debug("Exception occurred:" + e.getMessage());
+      LOGGER.debug("Exception occurred:" + e.getMessage(), e);
     }
   }
 
@@ -129,7 +129,7 @@ public AbstractDFSCarbonFile(FileStatus fileStatus) {
         return fs.exists(fileStatus.getPath());
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occurred:" + e.getMessage());
+      LOGGER.error("Exception occurred:" + e.getMessage(), e);
     }
     return false;
   }
@@ -154,7 +154,7 @@ public boolean renameTo(String changeToName) {
         return fs.rename(fileStatus.getPath(), new Path(changeToName));
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occurred:" + e.getMessage());
+      LOGGER.error("Exception occurred:" + e.getMessage(), e);
       return false;
     }
     return false;
@@ -168,7 +168,7 @@ public boolean delete() {
         return fs.delete(fileStatus.getPath(), true);
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occurred:" + e.getMessage());
+      LOGGER.error("Exception occurred:" + e.getMessage(), e);
       return false;
     }
     return false;
@@ -238,7 +238,7 @@ public boolean delete() {
       tempFile.renameForce(fileName);
       fileTruncatedSuccessfully = true;
     } catch (IOException e) {
-      LOGGER.error("Exception occurred while truncating the file " + e.getMessage());
+      LOGGER.error("Exception occurred while truncating the file " + e.getMessage(), e);
     } finally {
       CarbonUtil.closeStreams(dataOutputStream, dataInputStream);
     }
@@ -506,7 +506,7 @@ public CarbonFile[] listFiles() {
         return new CarbonFile[0];
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occured: " + e.getMessage());
+      LOGGER.error("Exception occured: " + e.getMessage(), e);
       return new CarbonFile[0];
     }
     return getFiles(listStatus);
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AlluxioCarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AlluxioCarbonFile.java
index 216af53e19f..affb469e1ca 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AlluxioCarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/AlluxioCarbonFile.java
@@ -136,7 +136,7 @@ public boolean renameForce(String changeToName) {
       }
       return false;
     } catch (IOException e) {
-      LOGGER.error("Exception occured: " + e.getMessage());
+      LOGGER.error("Exception occured: " + e.getMessage(), e);
       return false;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFile.java
index 35b0f0fd0e3..306d8f60df4 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFile.java
@@ -111,7 +111,7 @@ public boolean renameForce(String changeToName) {
         return fs.rename(fileStatus.getPath(), new Path(changeToName));
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occured: " + e.getMessage());
+      LOGGER.error("Exception occured: " + e.getMessage(), e);
       return false;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/LocalCarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/LocalCarbonFile.java
index 2cace558404..6f55586a9c0 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/LocalCarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/LocalCarbonFile.java
@@ -254,7 +254,7 @@ public List<CarbonFile> listFiles(Boolean recursive) {
       tempFile.renameForce(fileName);
       fileTruncatedSuccessfully = true;
     } catch (IOException e) {
-      LOGGER.error("Exception occured while truncating the file " + e.getMessage());
+      LOGGER.error("Exception occured while truncating the file " + e.getMessage(), e);
     } finally {
       CarbonUtil.closeStreams(source, destination);
     }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/S3CarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/S3CarbonFile.java
index ee67097319e..ffbe2d8263d 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/S3CarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/S3CarbonFile.java
@@ -66,7 +66,7 @@ public boolean renameForce(String changeToName) {
       fs = fileStatus.getPath().getFileSystem(hadoopConf);
       return fs.rename(fileStatus.getPath(), new Path(changeToName));
     } catch (IOException e) {
-      LOGGER.error("Exception occured: " + e.getMessage());
+      LOGGER.error("Exception occured: " + e.getMessage(), e);
       return false;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/ViewFSCarbonFile.java b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/ViewFSCarbonFile.java
index 84a5abd8d11..c55f85cbfe4 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/ViewFSCarbonFile.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/filesystem/ViewFSCarbonFile.java
@@ -101,7 +101,7 @@ public boolean renameForce(String changeToName) {
         return false;
       }
     } catch (IOException e) {
-      LOGGER.error("Exception occured" + e.getMessage());
+      LOGGER.error("Exception occured" + e.getMessage(), e);
       return false;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/datastore/impl/FileFactory.java b/core/src/main/java/org/apache/carbondata/core/datastore/impl/FileFactory.java
index e951f5889a0..7dbbe2ac53a 100644
--- a/core/src/main/java/org/apache/carbondata/core/datastore/impl/FileFactory.java
+++ b/core/src/main/java/org/apache/carbondata/core/datastore/impl/FileFactory.java
@@ -335,7 +335,7 @@ public static void truncateFile(String path, FileType fileType, long newSize) th
           CarbonFile carbonFile = FileFactory.getCarbonFile(path, fileType);
           carbonFile.truncate(path, newSize);
         } catch (Exception e) {
-          LOGGER.error("Other exception occurred while truncating the file " + e.getMessage());
+          LOGGER.error("Other exception occurred while truncating the file " + e.getMessage(), e);
         }
         return;
       default:
@@ -505,7 +505,7 @@ public static void createDirectoryAndSetPermission(String directoryPath, FsPermi
             fs.setPermission(path, permission);
           }
         } catch (IOException e) {
-          LOGGER.error("Exception occurred : " + e.getMessage());
+          LOGGER.error("Exception occurred : " + e.getMessage(), e);
           throw e;
         }
         return;
diff --git a/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClient.java b/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClient.java
index d5c20720893..60872c1dc60 100644
--- a/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClient.java
+++ b/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClient.java
@@ -91,7 +91,7 @@ public DictionaryMessage getDictionary(
     try {
       workerGroup.terminationFuture().sync();
     } catch (InterruptedException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     }
   }
 }
diff --git a/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClientHandler.java b/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClientHandler.java
index 17e9c7c8900..8f44da68c44 100644
--- a/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClientHandler.java
+++ b/core/src/main/java/org/apache/carbondata/core/dictionary/client/NonSecureDictionaryClientHandler.java
@@ -61,7 +61,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
       data.release();
       responseMsgQueue.add(key);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw e;
     }
   }
@@ -102,7 +102,7 @@ public DictionaryMessage getDictionary(DictionaryMessage key) {
       }
       return dictionaryMessage;
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new RuntimeException(e);
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/dictionary/generator/TableDictionaryGenerator.java b/core/src/main/java/org/apache/carbondata/core/dictionary/generator/TableDictionaryGenerator.java
index 003ab5a9cd5..461d34aaa3b 100644
--- a/core/src/main/java/org/apache/carbondata/core/dictionary/generator/TableDictionaryGenerator.java
+++ b/core/src/main/java/org/apache/carbondata/core/dictionary/generator/TableDictionaryGenerator.java
@@ -89,7 +89,7 @@ public Integer size(DictionaryMessage key) {
       executorService.shutdown();
       executorService.awaitTermination(1, TimeUnit.HOURS);
     } catch (InterruptedException e) {
-      LOGGER.error("Error loading the dictionary: " + e.getMessage());
+      LOGGER.error("Error loading the dictionary: " + e.getMessage(), e);
     }
     LOGGER.info("Total time taken to write dictionary file is: " +
             (System.currentTimeMillis() - start));
diff --git a/core/src/main/java/org/apache/carbondata/core/dictionary/server/NonSecureDictionaryServerHandler.java b/core/src/main/java/org/apache/carbondata/core/dictionary/server/NonSecureDictionaryServerHandler.java
index 0f076a4e5d1..e261910afa5 100644
--- a/core/src/main/java/org/apache/carbondata/core/dictionary/server/NonSecureDictionaryServerHandler.java
+++ b/core/src/main/java/org/apache/carbondata/core/dictionary/server/NonSecureDictionaryServerHandler.java
@@ -65,7 +65,7 @@ public void channelActive(ChannelHandlerContext ctx) throws Exception {
       key.writeData(buffer);
       ctx.writeAndFlush(buffer);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw e;
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/dictionary/service/AbstractDictionaryServer.java b/core/src/main/java/org/apache/carbondata/core/dictionary/service/AbstractDictionaryServer.java
index 5703051d15b..f548646b123 100644
--- a/core/src/main/java/org/apache/carbondata/core/dictionary/service/AbstractDictionaryServer.java
+++ b/core/src/main/java/org/apache/carbondata/core/dictionary/service/AbstractDictionaryServer.java
@@ -78,11 +78,11 @@ public String findLocalIpAddress(Logger LOGGER) {
         return address.getHostAddress();
       }
     } catch (UnknownHostException e) {
-      LOGGER.error("do not get local host address:" + e.getMessage());
-      throw new RuntimeException(e.getMessage());
+      LOGGER.error("do not get local host address:" + e.getMessage(), e);
+      throw new RuntimeException(e);
     } catch (SocketException e) {
-      LOGGER.error("do not get net work interface:" + e.getMessage());
-      throw new RuntimeException(e.getMessage());
+      LOGGER.error("do not get net work interface:" + e.getMessage(), e);
+      throw new RuntimeException(e);
     }
   }
 }
diff --git a/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDataMapIndexStore.java b/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDataMapIndexStore.java
index 0f640869730..a9667a8f144 100644
--- a/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDataMapIndexStore.java
+++ b/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDataMapIndexStore.java
@@ -148,8 +148,8 @@ private BlockletDataMapIndexWrapper get(TableBlockIndexUniqueIdentifierWrapper i
         for (DataMap dataMap : dataMaps) {
           dataMap.clear();
         }
-        LOGGER.error("memory exception when loading datamap: " + e.getMessage());
-        throw new RuntimeException(e.getMessage(), e);
+        LOGGER.error("memory exception when loading datamap: " + e.getMessage(), e);
+        throw new RuntimeException(e);
       }
     }
     return blockletDataMapIndexWrapper;
diff --git a/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDetailInfo.java b/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDetailInfo.java
index 9ce932ceb85..a5aa899ff52 100644
--- a/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDetailInfo.java
+++ b/core/src/main/java/org/apache/carbondata/core/indexstore/BlockletDetailInfo.java
@@ -129,7 +129,7 @@ private void setBlockletInfoFromBinary() throws IOException {
         blockletInfo.readFields(inputStream);
       } catch (IOException e) {
         LOGGER.error("Problem in reading blocklet info", e);
-        throw new IOException("Problem in reading blocklet info." + e.getMessage());
+        throw new IOException("Problem in reading blocklet info." + e.getMessage(), e);
       } finally {
         try {
           inputStream.close();
diff --git a/core/src/main/java/org/apache/carbondata/core/keygenerator/directdictionary/timestamp/DateDirectDictionaryGenerator.java b/core/src/main/java/org/apache/carbondata/core/keygenerator/directdictionary/timestamp/DateDirectDictionaryGenerator.java
index 67d70e39808..3a134c33fa4 100644
--- a/core/src/main/java/org/apache/carbondata/core/keygenerator/directdictionary/timestamp/DateDirectDictionaryGenerator.java
+++ b/core/src/main/java/org/apache/carbondata/core/keygenerator/directdictionary/timestamp/DateDirectDictionaryGenerator.java
@@ -153,8 +153,8 @@ private int generateDirectSurrogateKeyForNonTimestampType(String memberStr) {
       timeValue = Long.parseLong(memberStr) / 1000;
     } catch (NumberFormatException e) {
       if (LOGGER.isDebugEnabled()) {
-        LOGGER.debug(
-            "Cannot convert value to Long type value. Value considered as null." + e.getMessage());
+        LOGGER.debug("Cannot convert value to Long type value. Value considered as null."
+            + e.getMessage(), e);
       }
     }
     if (timeValue == -1) {
diff --git a/core/src/main/java/org/apache/carbondata/core/locks/ZookeeperInit.java b/core/src/main/java/org/apache/carbondata/core/locks/ZookeeperInit.java
index 5e595934a1e..f227cf96134 100644
--- a/core/src/main/java/org/apache/carbondata/core/locks/ZookeeperInit.java
+++ b/core/src/main/java/org/apache/carbondata/core/locks/ZookeeperInit.java
@@ -47,7 +47,7 @@ private ZookeeperInit(String zooKeeperUrl) {
       zk = new ZooKeeper(zooKeeperUrl, sessionTimeOut, new DummyWatcher());
 
     } catch (IOException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
 
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/metadata/schema/table/CarbonTable.java b/core/src/main/java/org/apache/carbondata/core/metadata/schema/table/CarbonTable.java
index c4adab40c60..c666998988d 100644
--- a/core/src/main/java/org/apache/carbondata/core/metadata/schema/table/CarbonTable.java
+++ b/core/src/main/java/org/apache/carbondata/core/metadata/schema/table/CarbonTable.java
@@ -1124,7 +1124,7 @@ public boolean canAllow(CarbonTable carbonTable, TableOperation operation, Objec
     } catch (Exception e) {
       // since method returns true or false and based on that calling function throws exception, no
       // need to throw the catched exception
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
       return true;
     }
     return true;
diff --git a/core/src/main/java/org/apache/carbondata/core/mutate/CarbonUpdateUtil.java b/core/src/main/java/org/apache/carbondata/core/mutate/CarbonUpdateUtil.java
index 3924c0d4a9d..bd8c4658523 100644
--- a/core/src/main/java/org/apache/carbondata/core/mutate/CarbonUpdateUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/mutate/CarbonUpdateUtil.java
@@ -691,9 +691,9 @@ private static boolean compareTimestampsAndDelete(
         CarbonUtil.deleteFoldersAndFiles(invalidFile);
         return true;
       } catch (IOException e) {
-        LOGGER.error("error in clean up of compacted files." + e.getMessage());
+        LOGGER.error("error in clean up of compacted files." + e.getMessage(), e);
       } catch (InterruptedException e) {
-        LOGGER.error("error in clean up of compacted files." + e.getMessage());
+        LOGGER.error("error in clean up of compacted files." + e.getMessage(), e);
       }
     }
     return false;
diff --git a/core/src/main/java/org/apache/carbondata/core/reader/CarbonDeleteFilesDataReader.java b/core/src/main/java/org/apache/carbondata/core/reader/CarbonDeleteFilesDataReader.java
index ee87a75215e..f16433cfb07 100644
--- a/core/src/main/java/org/apache/carbondata/core/reader/CarbonDeleteFilesDataReader.java
+++ b/core/src/main/java/org/apache/carbondata/core/reader/CarbonDeleteFilesDataReader.java
@@ -91,7 +91,7 @@ public Map<Integer, Integer[]> getDeleteDataFromAllFiles(List<String> deltaFiles
       executorService.shutdown();
       executorService.awaitTermination(30, TimeUnit.MINUTES);
     } catch (InterruptedException e) {
-      LOGGER.error("Error while reading the delete delta files : " + e.getMessage());
+      LOGGER.error("Error while reading the delete delta files : " + e.getMessage(), e);
     }
 
     Map<Integer, Integer[]> pageIdDeleteRowsMap =
@@ -109,8 +109,8 @@ public Map<Integer, Integer[]> getDeleteDataFromAllFiles(List<String> deltaFiles
         }
 
       } catch (Throwable e) {
-        LOGGER.error(e.getMessage());
-        throw new Exception(e.getMessage());
+        LOGGER.error(e.getMessage(), e);
+        throw new Exception(e);
       }
     }
     return pageIdDeleteRowsMap;
@@ -134,7 +134,7 @@ public Map<String, DeleteDeltaVo> getDeletedRowsDataVo(String[] deltaFiles) {
       executorService.shutdown();
       executorService.awaitTermination(30, TimeUnit.MINUTES);
     } catch (InterruptedException e) {
-      LOGGER.error("Error while reading the delete delta files : " + e.getMessage());
+      LOGGER.error("Error while reading the delete delta files : " + e.getMessage(), e);
     }
     Map<String, DeleteDeltaVo> pageIdToBlockLetVo = new HashMap<>();
     List<DeleteDeltaBlockletDetails> blockletDetails = null;
@@ -175,7 +175,7 @@ public DeleteDeltaBlockDetails getCompactedDeleteDeltaFileFromBlock(List<String>
       executorService.shutdown();
       executorService.awaitTermination(30, TimeUnit.MINUTES);
     } catch (InterruptedException e) {
-      LOGGER.error("Error while reading the delete delta files : " + e.getMessage());
+      LOGGER.error("Error while reading the delete delta files : " + e.getMessage(), e);
     }
 
     // Get a new DeleteDeltaBlockDetails as result set where all the data will me merged
@@ -190,8 +190,8 @@ public DeleteDeltaBlockDetails getCompactedDeleteDeltaFileFromBlock(List<String>
           deleteDeltaResultSet.addBlockletDetails(blocklet);
         }
       } catch (Throwable e) {
-        LOGGER.error(e.getMessage());
-        throw new Exception(e.getMessage());
+        LOGGER.error(e.getMessage(), e);
+        throw new Exception(e);
       }
     }
     return deleteDeltaResultSet;
diff --git a/core/src/main/java/org/apache/carbondata/core/scan/filter/FilterUtil.java b/core/src/main/java/org/apache/carbondata/core/scan/filter/FilterUtil.java
index 15b8cbaa04c..6cc13e249c0 100644
--- a/core/src/main/java/org/apache/carbondata/core/scan/filter/FilterUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/scan/filter/FilterUtil.java
@@ -940,7 +940,7 @@ public static ColumnFilterInfo getFilterListForRS(Expression expression, String
         columnFilterInfo.setFilterList(filterValuesList);
       }
     } catch (FilterIllegalMemberException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
     return columnFilterInfo;
   }
@@ -980,7 +980,7 @@ public static ColumnFilterInfo getFilterListForAllMembersRS(Expression expressio
         }
       }
     } catch (FilterIllegalMemberException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
 
     if (null == defaultValues) {
@@ -1020,7 +1020,7 @@ private static byte[][] getFilterValuesInBytes(ColumnFilterInfo columnFilterInfo
               break;
             }
           } catch (KeyGenException e) {
-            LOGGER.error(e.getMessage());
+            LOGGER.error(e.getMessage(), e);
           }
         }
       }
@@ -1095,7 +1095,7 @@ public static byte[] getMaskKey(int surrogate, CarbonDimension carbonDimension,
       keys[carbonDimension.getKeyOrdinal()] = surrogate;
       maskedKey = getMaskedKey(rangesForMaskedByte, blockLevelKeyGenerator.generateKey(keys));
     } catch (KeyGenException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
     return maskedKey;
   }
@@ -1438,7 +1438,7 @@ public static IndexKey createIndexKeyFromResolvedFilterVal(long[] startOrEndKey,
       indexKey =
           new IndexKey(keyGenerator.generateKey(startOrEndKey), startOrEndKeyForNoDictDimension);
     } catch (KeyGenException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
     return indexKey;
   }
@@ -2124,7 +2124,7 @@ public static byte[][] getEncodedFilterValues(CarbonDictionary dictionary,
             dummy[0] = i;
             encodedFilters.add(keyGenerator.generateKey(dummy));
           } catch (KeyGenException e) {
-            LOGGER.error(e);
+            LOGGER.error(e.getMessage(), e);
           }
           break;
         }
@@ -2215,7 +2215,7 @@ private static byte[][] getEncodedFilterValuesForRange(BitSet includeDictValues,
           encodedFilterValues.add(keyGenerator.generateKey(dummy));
         }
       } catch (KeyGenException e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
       }
       return encodedFilterValues.toArray(new byte[encodedFilterValues.size()][]);
     } else {
@@ -2227,7 +2227,7 @@ private static byte[][] getEncodedFilterValuesForRange(BitSet includeDictValues,
           }
         }
       } catch (KeyGenException e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
       }
     }
     return getSortedEncodedFilters(encodedFilterValues);
diff --git a/core/src/main/java/org/apache/carbondata/core/scan/result/BlockletScannedResult.java b/core/src/main/java/org/apache/carbondata/core/scan/result/BlockletScannedResult.java
index 4ec7b38cda0..ad4d2b39c80 100644
--- a/core/src/main/java/org/apache/carbondata/core/scan/result/BlockletScannedResult.java
+++ b/core/src/main/java/org/apache/carbondata/core/scan/result/BlockletScannedResult.java
@@ -303,7 +303,7 @@ public void fillColumnarComplexBatch(ColumnVectorInfo[] vectorInfos) {
           reuseableDataOutput.reset();
         } catch (IOException e) {
           isExceptionThrown = true;
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         } finally {
           if (isExceptionThrown) {
             CarbonUtil.closeStreams(reuseableDataOutput);
@@ -574,7 +574,7 @@ protected List<byte[][]> getComplexTypeKeyArrayBatch() {
           reUseableDataOutput.reset();
         } catch (IOException e) {
           isExceptionThrown = true;
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         } finally {
           if (isExceptionThrown) {
             CarbonUtil.closeStreams(reUseableDataOutput);
@@ -639,7 +639,7 @@ protected byte[][] getComplexTypeKeyArray(int rowId) {
         reUsableDataOutput.reset();
       } catch (IOException e) {
         isExceptionThrown = true;
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
       } finally {
         if (isExceptionThrown) {
           CarbonUtil.closeStreams(reUsableDataOutput);
diff --git a/core/src/main/java/org/apache/carbondata/core/scan/result/iterator/AbstractDetailQueryResultIterator.java b/core/src/main/java/org/apache/carbondata/core/scan/result/iterator/AbstractDetailQueryResultIterator.java
index 9282d449479..f39e5492221 100644
--- a/core/src/main/java/org/apache/carbondata/core/scan/result/iterator/AbstractDetailQueryResultIterator.java
+++ b/core/src/main/java/org/apache/carbondata/core/scan/result/iterator/AbstractDetailQueryResultIterator.java
@@ -314,7 +314,7 @@ public void processNextBatch(CarbonColumnarBatch columnarBatch) {
     try {
       fileReader.finish();
     } catch (IOException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     }
   }
 
diff --git a/core/src/main/java/org/apache/carbondata/core/statusmanager/LoadMetadataDetails.java b/core/src/main/java/org/apache/carbondata/core/statusmanager/LoadMetadataDetails.java
index 7a16379c991..99dddba8ca0 100644
--- a/core/src/main/java/org/apache/carbondata/core/statusmanager/LoadMetadataDetails.java
+++ b/core/src/main/java/org/apache/carbondata/core/statusmanager/LoadMetadataDetails.java
@@ -257,8 +257,8 @@ private long convertTimeStampToLong(String factTimeStamp) {
         dateToStr = parser.parse(factTimeStamp);
         return dateToStr.getTime();
       } catch (ParseException e) {
-        LOGGER
-            .error("Cannot convert" + factTimeStamp + " to Time/Long type value" + e.getMessage());
+        LOGGER.error("Cannot convert" + factTimeStamp + " to Time/Long type value"
+            + e.getMessage(), e);
         parser = new SimpleDateFormat(CarbonCommonConstants.CARBON_TIMESTAMP);
         try {
           // if the load is in progress, factTimeStamp will be null, so use current time
@@ -293,7 +293,7 @@ public Long getTimeStamp(String loadStartTime) {
         return dateToStr.getTime() * 1000;
       } catch (ParseException e) {
         LOGGER.error("Cannot convert" + loadStartTime +
-            " to Time/Long type value" + e.getMessage());
+            " to Time/Long type value" + e.getMessage(), e);
         return null;
       }
     }
diff --git a/core/src/main/java/org/apache/carbondata/core/statusmanager/SegmentStatusManager.java b/core/src/main/java/org/apache/carbondata/core/statusmanager/SegmentStatusManager.java
index 4a5063fc264..fddce90c714 100755
--- a/core/src/main/java/org/apache/carbondata/core/statusmanager/SegmentStatusManager.java
+++ b/core/src/main/java/org/apache/carbondata/core/statusmanager/SegmentStatusManager.java
@@ -176,7 +176,7 @@ public ValidAndInvalidSegmentsInfo getValidAndInvalidSegments(
         }
       }
     } catch (IOException e) {
-      LOG.error(e);
+      LOG.error(e.getMessage(), e);
       throw e;
     }
     return new ValidAndInvalidSegmentsInfo(listOfValidSegments, listOfValidUpdatedSegments,
@@ -391,7 +391,7 @@ public static List<String> updateDeletionStatus(AbsoluteTableIdentifier identifi
         throw new Exception(errorMsg + " Please try after some time.");
       }
     } catch (IOException e) {
-      LOG.error("IOException" + e.getMessage());
+      LOG.error("IOException" + e.getMessage(), e);
       throw e;
     } finally {
       CarbonLockUtil.fileUnlock(carbonTableStatusLock, LockUsage.TABLE_STATUS_LOCK);
@@ -472,7 +472,7 @@ public static List<String> updateDeletionStatus(AbsoluteTableIdentifier identifi
         throw new Exception(errorMsg + " Please try after some time.");
       }
     } catch (IOException e) {
-      LOG.error("Error message: " + "IOException" + e.getMessage());
+      LOG.error("Error message: " + "IOException" + e.getMessage(), e);
       throw e;
     } finally {
       CarbonLockUtil.fileUnlock(carbonTableStatusLock, LockUsage.TABLE_STATUS_LOCK);
diff --git a/core/src/main/java/org/apache/carbondata/core/util/CarbonProperties.java b/core/src/main/java/org/apache/carbondata/core/util/CarbonProperties.java
index 49388b7b79f..dceba70788b 100644
--- a/core/src/main/java/org/apache/carbondata/core/util/CarbonProperties.java
+++ b/core/src/main/java/org/apache/carbondata/core/util/CarbonProperties.java
@@ -747,7 +747,7 @@ private void loadProperties() {
     try {
       initPropertySet();
     } catch (IllegalAccessException e) {
-      LOGGER.error("Illegal access to declared field" + e.getMessage());
+      LOGGER.error("Illegal access to declared field" + e.getMessage(), e);
     }
   }
 
diff --git a/core/src/main/java/org/apache/carbondata/core/util/CarbonUtil.java b/core/src/main/java/org/apache/carbondata/core/util/CarbonUtil.java
index 3fb54f0d255..8f79873b1f6 100644
--- a/core/src/main/java/org/apache/carbondata/core/util/CarbonUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/util/CarbonUtil.java
@@ -744,7 +744,7 @@ public static boolean checkAndCreateFolder(String path) {
         created = FileFactory.mkdirs(path, fileType);
       }
     } catch (IOException e) {
-      LOGGER.error(e.getMessage());
+      LOGGER.error(e.getMessage(), e);
     }
     return created;
   }
@@ -765,7 +765,7 @@ public static boolean checkAndCreateFolderWithPermission(String path) {
         created = true;
       }
     } catch (IOException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     }
     return created;
   }
@@ -1446,7 +1446,7 @@ public static byte[] getByteArray(TBase t) {
       stream.flush();
       thriftByteArray = stream.toByteArray();
     } catch (TException | IOException e) {
-      LOGGER.error("Error while converting to byte array from thrift object: " + e.getMessage());
+      LOGGER.error("Error while converting to byte array from thrift object: " + e.getMessage(), e);
       closeStreams(stream);
     } finally {
       closeStreams(stream);
@@ -1539,7 +1539,7 @@ public static ValueEncoderMeta deserializeEncoderMetaV2(byte[] encoderMeta) {
       objStream = new ObjectInputStream(aos);
       meta = (ValueEncoderMeta) objStream.readObject();
     } catch (ClassNotFoundException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     } catch (IOException e) {
       CarbonUtil.closeStreams(objStream);
     }
diff --git a/core/src/main/java/org/apache/carbondata/core/util/DataTypeUtil.java b/core/src/main/java/org/apache/carbondata/core/util/DataTypeUtil.java
index 995f80d6e4e..303cc8003ff 100644
--- a/core/src/main/java/org/apache/carbondata/core/util/DataTypeUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/util/DataTypeUtil.java
@@ -356,7 +356,7 @@ public static Object getDataBasedOnDataType(String data, DataType actualDataType
           Date dateToStr = dateformatter.get().parse(data);
           return dateToStr.getTime() * 1000;
         } catch (ParseException e) {
-          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage());
+          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage(), e);
           return null;
         }
       } else if (actualDataType == DataTypes.TIMESTAMP) {
@@ -367,7 +367,7 @@ public static Object getDataBasedOnDataType(String data, DataType actualDataType
           Date dateToStr = timeStampformatter.get().parse(data);
           return dateToStr.getTime() * 1000;
         } catch (ParseException e) {
-          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage());
+          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage(), e);
           return null;
         }
       } else if (DataTypes.isDecimal(actualDataType)) {
@@ -675,7 +675,7 @@ public static Object getDataBasedOnDataType(byte[] dataInBytes, CarbonDimension
           Date dateToStr = dateformatter.get().parse(data5);
           return dateToStr.getTime() * 1000;
         } catch (ParseException e) {
-          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage());
+          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage(), e);
           return null;
         }
       } else if (dataType == DataTypes.TIMESTAMP) {
@@ -687,7 +687,7 @@ public static Object getDataBasedOnDataType(byte[] dataInBytes, CarbonDimension
           Date dateToStr = timeStampformatter.get().parse(data6);
           return dateToStr.getTime() * 1000;
         } catch (ParseException e) {
-          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage());
+          LOGGER.error("Cannot convert value to Time/Long type value" + e.getMessage(), e);
           return null;
         }
       } else if (DataTypes.isDecimal(dataType)) {
diff --git a/core/src/main/java/org/apache/carbondata/core/util/ObjectSerializationUtil.java b/core/src/main/java/org/apache/carbondata/core/util/ObjectSerializationUtil.java
index 9a4c02dae02..48c6e6526c2 100644
--- a/core/src/main/java/org/apache/carbondata/core/util/ObjectSerializationUtil.java
+++ b/core/src/main/java/org/apache/carbondata/core/util/ObjectSerializationUtil.java
@@ -65,7 +65,7 @@ public static String convertObjectToString(Object obj) throws IOException {
           baos.close();
         }
       } catch (IOException e) {
-        LOG.error(e);
+        LOG.error(e.getMessage(), e);
       }
     }
 
@@ -110,7 +110,7 @@ public static Object convertStringToObject(String objectString) throws IOExcepti
           bais.close();
         }
       } catch (IOException e) {
-        LOG.error(e);
+        LOG.error(e.getMessage(), e);
       }
     }
   }
diff --git a/core/src/main/java/org/apache/carbondata/core/util/path/HDFSLeaseUtils.java b/core/src/main/java/org/apache/carbondata/core/util/path/HDFSLeaseUtils.java
index 1a10f4619e9..30586853ac0 100644
--- a/core/src/main/java/org/apache/carbondata/core/util/path/HDFSLeaseUtils.java
+++ b/core/src/main/java/org/apache/carbondata/core/util/path/HDFSLeaseUtils.java
@@ -133,7 +133,7 @@ private static boolean recoverLeaseOnFile(String filePath, Path path, Distribute
           LOGGER.error("The given file does not exist at path " + filePath);
           throw e;
         } else {
-          LOGGER.error("Recover lease threw exception : " + e.getMessage());
+          LOGGER.error("Recover lease threw exception : " + e.getMessage(), e);
           ioException = e;
         }
       }
diff --git a/core/src/test/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFileTest.java b/core/src/test/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFileTest.java
index daebd9f304d..8adefb3304f 100644
--- a/core/src/test/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFileTest.java
+++ b/core/src/test/java/org/apache/carbondata/core/datastore/filesystem/HDFSCarbonFileTest.java
@@ -90,7 +90,7 @@ static public void cleanUp() {
         try {
             fs.delete(pt, true);
         } catch (IOException e) {
-            LOGGER.error("Exception Occured" + e.getMessage());
+            LOGGER.error("Exception Occured" + e.getMessage(), e);
         }
     }
 
diff --git a/core/src/test/java/org/apache/carbondata/core/load/LoadMetadataDetailsUnitTest.java b/core/src/test/java/org/apache/carbondata/core/load/LoadMetadataDetailsUnitTest.java
index 30320162fd3..e1e92f8dc6a 100644
--- a/core/src/test/java/org/apache/carbondata/core/load/LoadMetadataDetailsUnitTest.java
+++ b/core/src/test/java/org/apache/carbondata/core/load/LoadMetadataDetailsUnitTest.java
@@ -113,7 +113,7 @@ public static Long getTime(String date) {
     try {
       return simpleDateFormat.parse(date).getTime() * 1000;
     } catch (ParseException e) {
-      LOGGER.error("Error while parsing " + date + " " + e.getMessage());
+      LOGGER.error("Error while parsing " + date + " " + e.getMessage(), e);
       return null;
     }
   }
diff --git a/datamap/bloom/src/main/java/org/apache/carbondata/datamap/bloom/BloomCoarseGrainDataMapFactory.java b/datamap/bloom/src/main/java/org/apache/carbondata/datamap/bloom/BloomCoarseGrainDataMapFactory.java
index e730635d62d..9785549fa97 100644
--- a/datamap/bloom/src/main/java/org/apache/carbondata/datamap/bloom/BloomCoarseGrainDataMapFactory.java
+++ b/datamap/bloom/src/main/java/org/apache/carbondata/datamap/bloom/BloomCoarseGrainDataMapFactory.java
@@ -123,7 +123,7 @@ public BloomCoarseGrainDataMapFactory(CarbonTable carbonTable, DataMapSchema dat
       this.cache = CacheProvider.getInstance()
           .createCache(new CacheType("bloom_cache"), BloomDataMapCache.class.getName());
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new MalformedDataMapCommandException(e.getMessage());
     }
   }
diff --git a/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMap.java b/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMap.java
index 048d41a29fe..da1fe5c7e28 100644
--- a/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMap.java
+++ b/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMap.java
@@ -236,7 +236,7 @@ public List<FineGrainBlocklet> prune(FilterResolverIntf filterExp,
     } catch (ParseException e) {
       String errorMessage = String.format(
           "failed to filter block with query %s, detail is %s", strQuery, e.getMessage());
-      LOGGER.error(errorMessage);
+      LOGGER.error(errorMessage, e);
       return null;
     }
     // temporary data, delete duplicated data
@@ -262,8 +262,8 @@ public List<FineGrainBlocklet> prune(FilterResolverIntf filterExp,
       } catch (IOException e) {
         String errorMessage =
             String.format("failed to search lucene data, detail is %s", e.getMessage());
-        LOGGER.error(errorMessage);
-        throw new IOException(errorMessage);
+        LOGGER.error(errorMessage, e);
+        throw new IOException(errorMessage, e);
       }
 
       ByteBuffer intBuffer = ByteBuffer.allocate(4);
diff --git a/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMapFactory.java b/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMapFactory.java
index 116370da57b..a3c40633a7c 100644
--- a/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMapFactory.java
+++ b/datamap/lucene/src/main/java/org/apache/carbondata/datamap/lucene/LuceneFineGrainDataMapFactory.java
@@ -57,7 +57,7 @@ public LuceneFineGrainDataMapFactory(CarbonTable carbonTable, DataMapSchema data
           DataMapWriter.getDefaultDataMapPath(tableIdentifier.getTablePath(),
               segment.getSegmentNo(), dataMapName), segment.getConfiguration()));
     } catch (MemoryException e) {
-      LOGGER.error(String.format("failed to get lucene datamap, detail is %s", e.getMessage()));
+      LOGGER.error(String.format("failed to get lucene datamap, detail is %s", e.getMessage()), e);
       return lstDataMap;
     }
     lstDataMap.add(dataMap);
diff --git a/integration/hive/src/main/java/org/apache/carbondata/hive/CarbonDictionaryDecodeReadSupport.java b/integration/hive/src/main/java/org/apache/carbondata/hive/CarbonDictionaryDecodeReadSupport.java
index e95382c2a05..fdccd090f50 100644
--- a/integration/hive/src/main/java/org/apache/carbondata/hive/CarbonDictionaryDecodeReadSupport.java
+++ b/integration/hive/src/main/java/org/apache/carbondata/hive/CarbonDictionaryDecodeReadSupport.java
@@ -107,7 +107,7 @@
       try {
         writableArr[i] = createWritableObject(data[i], carbonColumns[i]);
       } catch (IOException e) {
-        throw new RuntimeException(e.getMessage(), e);
+        throw new RuntimeException(e);
       }
     }
 
diff --git a/integration/hive/src/main/java/org/apache/carbondata/hive/MapredCarbonInputFormat.java b/integration/hive/src/main/java/org/apache/carbondata/hive/MapredCarbonInputFormat.java
index 634c116fbad..10225763ddc 100644
--- a/integration/hive/src/main/java/org/apache/carbondata/hive/MapredCarbonInputFormat.java
+++ b/integration/hive/src/main/java/org/apache/carbondata/hive/MapredCarbonInputFormat.java
@@ -133,7 +133,7 @@ public RecordReader<Void, ArrayWritable> getRecordReader(InputSplit inputSplit,
     try {
       queryModel = getQueryModel(jobConf, path);
     } catch (InvalidConfigurationException e) {
-      LOGGER.error("Failed to create record reader: " + e.getMessage());
+      LOGGER.error("Failed to create record reader: " + e.getMessage(), e);
       return null;
     }
     CarbonReadSupport<ArrayWritable> readSupport = new CarbonDictionaryDecodeReadSupport<>();
diff --git a/integration/presto/src/main/java/org/apache/carbondata/presto/impl/CarbonTableReader.java b/integration/presto/src/main/java/org/apache/carbondata/presto/impl/CarbonTableReader.java
index 916e44c05e6..57d8d5e2e3a 100755
--- a/integration/presto/src/main/java/org/apache/carbondata/presto/impl/CarbonTableReader.java
+++ b/integration/presto/src/main/java/org/apache/carbondata/presto/impl/CarbonTableReader.java
@@ -262,9 +262,9 @@ public List<CarbonLocalMultiBlockSplit> getInputSplits2(CarbonTableCacheModel ta
       try {
         loadMetadataDetails = SegmentStatusManager.readTableStatusFile(
             CarbonTablePath.getTableStatusFilePath(carbonTable.getTablePath()));
-      } catch (IOException exception) {
-        LOGGER.error(exception.getMessage());
-        throw exception;
+      } catch (IOException e) {
+        LOGGER.error(e.getMessage(), e);
+        throw e;
       }
       filteredPartitions = findRequiredPartitions(constraints, carbonTable, loadMetadataDetails);
     }
@@ -329,9 +329,9 @@ private List<PartitionSpec> findRequiredPartitions(TupleDomain<HiveColumnHandle>
             new SegmentFileStore(carbonTable.getTablePath(), loadMetadataDetail.getSegmentFile());
         partitionSpecs.addAll(segmentFileStore.getPartitionSpecs());
 
-      } catch (IOException exception) {
-        LOGGER.error(exception.getMessage());
-        throw exception;
+      } catch (IOException e) {
+        LOGGER.error(e.getMessage(), e);
+        throw e;
       }
     }
     List<String> partitionValuesFromExpression =
diff --git a/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/client/SecureDictionaryClientHandler.java b/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/client/SecureDictionaryClientHandler.java
index d3f27edec17..cee88faa5ab 100644
--- a/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/client/SecureDictionaryClientHandler.java
+++ b/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/client/SecureDictionaryClientHandler.java
@@ -74,7 +74,7 @@ public DictionaryMessage getDictionary(DictionaryMessage key, TransportClient cl
       data.release();
       return newKey;
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new RuntimeException(e);
     }
   }
@@ -92,7 +92,7 @@ public DictionaryMessage getDictionary(DictionaryMessage key, TransportClient cl
         LOGGER.error("Failed to add key: " + key + " to queue");
       }
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw e;
     }
   }
diff --git a/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/server/SecureDictionaryServerHandler.java b/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/server/SecureDictionaryServerHandler.java
index 9e291a47fab..89b8f95dec5 100644
--- a/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/server/SecureDictionaryServerHandler.java
+++ b/integration/spark-common/src/main/java/org/apache/carbondata/spark/dictionary/server/SecureDictionaryServerHandler.java
@@ -84,7 +84,7 @@ public int processMessage(DictionaryMessage key) throws Exception {
       key.writeData(buff);
       rpcResponseCallback.onSuccess(buff.nioBuffer());
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     }
   }
 
diff --git a/integration/spark-datasource/src/main/scala/org/apache/carbondata/spark/vectorreader/VectorizedCarbonRecordReader.java b/integration/spark-datasource/src/main/scala/org/apache/carbondata/spark/vectorreader/VectorizedCarbonRecordReader.java
index c9a4ba46238..34e7c23f100 100644
--- a/integration/spark-datasource/src/main/scala/org/apache/carbondata/spark/vectorreader/VectorizedCarbonRecordReader.java
+++ b/integration/spark-datasource/src/main/scala/org/apache/carbondata/spark/vectorreader/VectorizedCarbonRecordReader.java
@@ -146,14 +146,14 @@ public void initialize(InputSplit inputSplit, TaskAttemptContext taskAttemptCont
       iterator = (AbstractDetailQueryResultIterator) queryExecutor.execute(queryModel);
     } catch (QueryExecutionException e) {
       if (ExceptionUtils.indexOfThrowable(e, FileNotFoundException.class) > 0) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         throw new InterruptedException(
             "Insert overwrite may be in progress.Please check " + e.getMessage());
       }
       throw new InterruptedException(e.getMessage());
     } catch (Exception e) {
       if (ExceptionUtils.indexOfThrowable(e, FileNotFoundException.class) > 0) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         throw new InterruptedException(
             "Insert overwrite may be in progress.Please check " + e.getMessage());
       }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/datamap/DataMapWriterListener.java b/processing/src/main/java/org/apache/carbondata/processing/datamap/DataMapWriterListener.java
index e88c422f413..be00480279e 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/datamap/DataMapWriterListener.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/datamap/DataMapWriterListener.java
@@ -103,7 +103,7 @@ private void register(DataMapFactory factory, String segmentId,
     try {
       writer = factory.createWriter(new Segment(segmentId), taskNo, segmentProperties);
     } catch (IOException e) {
-      LOG.error("Failed to create DataMapWriter: " + e.getMessage());
+      LOG.error("Failed to create DataMapWriter: " + e.getMessage(), e);
       throw new DataMapWriterException(e);
     }
     if (writers != null) {
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/AbstractDataLoadProcessorStep.java b/processing/src/main/java/org/apache/carbondata/processing/loading/AbstractDataLoadProcessorStep.java
index c3b587ca0cc..5fd507bc57e 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/AbstractDataLoadProcessorStep.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/AbstractDataLoadProcessorStep.java
@@ -82,7 +82,7 @@ public void initialize() throws IOException {
               Thread.sleep(10000);
             } catch (InterruptedException e) {
               //ignore
-              LOGGER.error(e.getMessage());
+              LOGGER.error(e.getMessage(), e);
             }
           }
         }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/converter/impl/RowConverterImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/converter/impl/RowConverterImpl.java
index 458b3abaf1b..df50e250e6d 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/converter/impl/RowConverterImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/converter/impl/RowConverterImpl.java
@@ -144,7 +144,7 @@ private DictionaryClient createDictionaryClient() {
         // wait for client initialization finished, or will raise null pointer exception
         Thread.sleep(1000);
       } catch (InterruptedException e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         throw new RuntimeException(e);
       }
 
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/model/CarbonLoadModelBuilder.java b/processing/src/main/java/org/apache/carbondata/processing/loading/model/CarbonLoadModelBuilder.java
index eb3c253eaf3..7abd573c2d5 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/model/CarbonLoadModelBuilder.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/model/CarbonLoadModelBuilder.java
@@ -421,7 +421,7 @@ private void validateAndSetColumnCompressor(CarbonLoadModel carbonLoadModel)
       CompressorFactory.getInstance().getCompressor(columnCompressor);
       carbonLoadModel.setColumnCompressor(columnCompressor);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new InvalidLoadOptionException("Failed to load the compressor");
     }
   }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/parser/impl/JsonRowParser.java b/processing/src/main/java/org/apache/carbondata/processing/loading/parser/impl/JsonRowParser.java
index 119ae67e5d5..bc494e617e0 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/parser/impl/JsonRowParser.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/parser/impl/JsonRowParser.java
@@ -64,7 +64,7 @@ private Object[] convertJsonToNoDictionaryToBytes(String jsonString)
       jsonNodeMapCaseInsensitive.putAll(jsonNodeMap);
       return jsonToCarbonRecord(jsonNodeMapCaseInsensitive, dataFields);
     } catch (IOException e) {
-      throw new IOException("Failed to parse Json String: " + e.getMessage());
+      throw new IOException("Failed to parse Json String: " + e.getMessage(), e);
     }
   }
 
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterImpl.java
index 55b336ed884..02d6309a130 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterImpl.java
@@ -217,7 +217,7 @@ public void run() {
           }
         }
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         observer.notifyFailed(e);
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterWithColumnRangeImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterWithColumnRangeImpl.java
index 8b86c0cd4ed..e1dddee2169 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterWithColumnRangeImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/ParallelReadMergeSorterWithColumnRangeImpl.java
@@ -238,7 +238,7 @@ public void run() {
         }
         LOGGER.info("Rows processed by each range: " + insideCounterList);
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         this.threadStatusObserver.notifyFailed(e);
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeBatchParallelReadMergeSorterImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeBatchParallelReadMergeSorterImpl.java
index aa960b6e3e8..2d2455b43ec 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeBatchParallelReadMergeSorterImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeBatchParallelReadMergeSorterImpl.java
@@ -115,7 +115,7 @@ public UnsafeBatchParallelReadMergeSorterImpl(AtomicLong rowCounter) {
     try {
       executorService.awaitTermination(2, TimeUnit.DAYS);
     } catch (InterruptedException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
     }
   }
 
@@ -167,7 +167,7 @@ public void run() {
           }
         }
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         this.threadStatusObserver.notifyFailed(e);
       } finally {
         synchronized (sortDataRows) {
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterImpl.java
index 6e11ca66f03..8af3ae27cd3 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterImpl.java
@@ -208,7 +208,7 @@ public void run() {
           }
         }
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         this.threadStatusObserver.notifyFailed(e);
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterWithColumnRangeImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterWithColumnRangeImpl.java
index f9631a5a3c1..693cc96c122 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterWithColumnRangeImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/impl/UnsafeParallelReadMergeSorterWithColumnRangeImpl.java
@@ -232,7 +232,7 @@ public void run() {
         }
         LOGGER.info("Rows processed by each range: " + insideRowCounterList);
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         this.threadStatusObserver.notifyFailed(e);
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/UnsafeSortDataRows.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/UnsafeSortDataRows.java
index e8e1c082cde..87f97becc08 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/UnsafeSortDataRows.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/UnsafeSortDataRows.java
@@ -199,8 +199,8 @@ private void addBatch(Object[][] rowBatch, int size) throws CarbonSortKeyAndGrou
           } catch (Exception ex) {
             // row page has freed in handlePreviousPage(), so other iterator may try to access it.
             rowPage = null;
-            LOGGER.error(
-                "exception occurred while trying to acquire a semaphore lock: " + ex.getMessage());
+            LOGGER.error("exception occurred while trying to acquire a semaphore lock: "
+                + ex.getMessage(), ex);
             throw new CarbonSortKeyAndGroupByException(ex);
           }
         }
@@ -213,7 +213,7 @@ private void addBatch(Object[][] rowBatch, int size) throws CarbonSortKeyAndGrou
           i--;
         } else {
           LOGGER.error(
-              "exception occurred while trying to acquire a semaphore lock: " + e.getMessage());
+              "exception occurred while trying to acquire a semaphore lock: " + e.getMessage(), e);
           throw new CarbonSortKeyAndGroupByException(e);
         }
       }
@@ -236,8 +236,8 @@ public void addRow(Object[] row) throws CarbonSortKeyAndGroupByException {
           rowPage = createUnsafeRowPage();
         } catch (Exception ex) {
           rowPage = null;
-          LOGGER.error(
-              "exception occurred while trying to acquire a semaphore lock: " + ex.getMessage());
+          LOGGER.error("exception occurred while trying to acquire a semaphore lock: "
+              + ex.getMessage(), ex);
           throw new CarbonSortKeyAndGroupByException(ex);
         }
       }
@@ -249,7 +249,7 @@ public void addRow(Object[] row) throws CarbonSortKeyAndGroupByException {
         addRow(row);
       } else {
         LOGGER.error(
-            "exception occurred while trying to acquire a semaphore lock: " + e.getMessage());
+            "exception occurred while trying to acquire a semaphore lock: " + e.getMessage(), e);
         throw new CarbonSortKeyAndGroupByException(e);
       }
     }
@@ -422,7 +422,7 @@ public void run() {
         try {
           threadStatusObserver.notifyFailed(e);
         } catch (CarbonSortKeyAndGroupByException ex) {
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         }
       } finally {
         semaphore.release();
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/holder/UnsafeSortTempFileChunkHolder.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/holder/UnsafeSortTempFileChunkHolder.java
index 4a97b20a516..04cab70dd9b 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/holder/UnsafeSortTempFileChunkHolder.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/holder/UnsafeSortTempFileChunkHolder.java
@@ -145,13 +145,13 @@ private void initialise() {
         }
       }
     } catch (FileNotFoundException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new RuntimeException(tempFile + " No Found", e);
     } catch (IOException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new RuntimeException(tempFile + " No Found", e);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new RuntimeException(tempFile + " Problem while reading", e);
     }
   }
@@ -193,7 +193,7 @@ private void fillDataForPrefetch() {
         try {
           submit.get();
         } catch (Exception e) {
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         }
         bufferRowCounter = 0;
         currentBuffer = backupBuffer;
@@ -319,7 +319,7 @@ private void calculateNumberOfRecordsToBeFetched() {
           currentBuffer = prefetchRecordsFromFile(numberOfRecords);
         }
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
       }
       return null;
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeIntermediateMerger.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeIntermediateMerger.java
index 1389ff7d295..ea122634f98 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeIntermediateMerger.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeIntermediateMerger.java
@@ -213,7 +213,7 @@ private void checkForFailure() throws CarbonSortKeyAndGroupByException {
         mergerTask.get(i).get();
       } catch (InterruptedException | ExecutionException e) {
         LOGGER.error(e.getMessage(), e);
-        throw new CarbonSortKeyAndGroupByException(e.getMessage(), e);
+        throw new CarbonSortKeyAndGroupByException(e);
       }
     }
   }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeSingleThreadFinalSortFilesMerger.java b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeSingleThreadFinalSortFilesMerger.java
index 7e36389b70e..e7cadeca30c 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeSingleThreadFinalSortFilesMerger.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/sort/unsafe/merger/UnsafeSingleThreadFinalSortFilesMerger.java
@@ -154,7 +154,7 @@ private void startSorting(UnsafeCarbonRowPage[] rowPages,
 
       LOGGER.info("Heap Size: " + this.recordHolderHeapLocal.size());
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new CarbonDataWriterException(e);
     }
   }
@@ -238,7 +238,7 @@ private IntermediateSortTempRow getSortedRecordFromFile() throws CarbonDataWrite
     try {
       poll.readRow();
     } catch (Exception e) {
-      throw new CarbonDataWriterException(e.getMessage(), e);
+      throw new CarbonDataWriterException(e);
     }
 
     // add to heap
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/steps/CarbonRowDataWriterProcessorStepImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/steps/CarbonRowDataWriterProcessorStepImpl.java
index 68e8e224534..f976abee0d5 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/steps/CarbonRowDataWriterProcessorStepImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/steps/CarbonRowDataWriterProcessorStepImpl.java
@@ -146,7 +146,7 @@ private String[] getStoreLocation() {
     } catch (CarbonDataWriterException e) {
       LOGGER.error("Failed for table: " + tableName + " in DataWriterProcessorStepImpl", e);
       throw new CarbonDataLoadingException(
-          "Error while initializing data handler : " + e.getMessage());
+          "Error while initializing data handler : " + e.getMessage(), e);
     } catch (Exception e) {
       LOGGER.error("Failed for table: " + tableName + " in DataWriterProcessorStepImpl", e);
       if (e instanceof BadRecordFoundException) {
@@ -234,10 +234,10 @@ private void processingComplete(CarbonFactHandler dataHandler) throws CarbonData
         dataHandler.closeHandler();
       } catch (CarbonDataWriterException e) {
         LOGGER.error(e.getMessage(), e);
-        throw new CarbonDataLoadingException(e.getMessage());
+        throw new CarbonDataLoadingException(e);
       } catch (Exception e) {
         LOGGER.error(e.getMessage(), e);
-        throw new CarbonDataLoadingException("There is an unexpected error: " + e.getMessage());
+        throw new CarbonDataLoadingException("There is an unexpected error: " + e.getMessage(), e);
       }
     }
   }
@@ -330,7 +330,7 @@ class DataWriterRunnable implements Runnable {
       try {
         doExecute(this.iterator, iteratorIndex);
       } catch (IOException e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         throw new RuntimeException(e);
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/loading/steps/DataWriterBatchProcessorStepImpl.java b/processing/src/main/java/org/apache/carbondata/processing/loading/steps/DataWriterBatchProcessorStepImpl.java
index 05b2424d724..33948de189b 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/loading/steps/DataWriterBatchProcessorStepImpl.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/loading/steps/DataWriterBatchProcessorStepImpl.java
@@ -116,7 +116,7 @@ private String[] getStoreLocation() {
       if (e.getCause() instanceof BadRecordFoundException) {
         throw new BadRecordFoundException(e.getCause().getMessage());
       }
-      throw new CarbonDataLoadingException("There is an unexpected error: " + e.getMessage());
+      throw new CarbonDataLoadingException("There is an unexpected error: " + e.getMessage(), e);
     }
     return null;
   }
@@ -160,7 +160,7 @@ private void processingComplete(CarbonFactHandler dataHandler) {
       try {
         dataHandler.closeHandler();
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
         throw new CarbonDataLoadingException(
             "There is an unexpected error while closing data handler", e);
       }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonCompactionUtil.java b/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonCompactionUtil.java
index 1bf30b5f969..76f4861ba5f 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonCompactionUtil.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonCompactionUtil.java
@@ -180,7 +180,7 @@ public static boolean isCompactionRequiredForTable(String metaFolderPath) {
         return true;
       }
     } catch (IOException e) {
-      LOGGER.error("Exception in isFileExist compaction request file " + e.getMessage());
+      LOGGER.error("Exception in isFileExist compaction request file " + e.getMessage(), e);
     }
     return false;
   }
@@ -207,7 +207,7 @@ public static CompactionType determineCompactionType(String metaFolderPath) {
       }
 
     } catch (IOException e) {
-      LOGGER.error("Exception in determining the compaction request file " + e.getMessage());
+      LOGGER.error("Exception in determining the compaction request file " + e.getMessage(), e);
     }
     return CompactionType.MINOR;
   }
@@ -243,7 +243,7 @@ public static boolean deleteCompactionRequiredFile(String metaFolderPath,
         LOGGER.info("Compaction request file is not present. file is : " + compactionRequiredFile);
       }
     } catch (IOException e) {
-      LOGGER.error("Exception in deleting the compaction request file " + e.getMessage());
+      LOGGER.error("Exception in deleting the compaction request file " + e.getMessage(), e);
     }
     return false;
   }
@@ -277,7 +277,7 @@ public static boolean createCompactionRequiredFile(String metaFolderPath,
         LOGGER.info("Compaction request file : " + statusFile + " already exist.");
       }
     } catch (IOException e) {
-      LOGGER.error("Exception in creating the compaction request file " + e.getMessage());
+      LOGGER.error("Exception in creating the compaction request file " + e.getMessage(), e);
     }
     return false;
   }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonDataMergerUtil.java b/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonDataMergerUtil.java
index b380888cddd..01e47be1f29 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonDataMergerUtil.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/merger/CarbonDataMergerUtil.java
@@ -554,7 +554,7 @@ private static List<LoadMetadataDetails> identifySegmentsToBeMergedBasedOnLoaded
         try {
           segDate2 = sdf.parse(sdf.format(segmentDate));
         } catch (ParseException e) {
-          LOGGER.error("Error while parsing segment start time" + e.getMessage());
+          LOGGER.error("Error while parsing segment start time" + e.getMessage(), e);
         }
 
         if (isTwoDatesPresentInRequiredRange(segDate1, segDate2, numberOfDaysAllowedToMerge)) {
@@ -596,7 +596,7 @@ private static Date initializeFirstSegment(List<LoadMetadataDetails> loadsOfSame
     try {
       segDate1 = sdf.parse(sdf.format(baselineLoadStartTime));
     } catch (ParseException e) {
-      LOGGER.error("Error while parsing segment start time" + e.getMessage());
+      LOGGER.error("Error while parsing segment start time" + e.getMessage(), e);
     }
     loadsOfSameDate.add(segment);
     return segDate1;
diff --git a/processing/src/main/java/org/apache/carbondata/processing/merger/CompactionResultSortProcessor.java b/processing/src/main/java/org/apache/carbondata/processing/merger/CompactionResultSortProcessor.java
index a1d5b43301c..7b3381c4bb9 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/merger/CompactionResultSortProcessor.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/merger/CompactionResultSortProcessor.java
@@ -226,7 +226,7 @@ private void deleteTempStoreLocation() {
         try {
           CarbonUtil.deleteFoldersAndFiles(new File(tempLoc));
         } catch (IOException | InterruptedException e) {
-          LOGGER.error("Problem deleting local folders during compaction: " + e.getMessage());
+          LOGGER.error("Problem deleting local folders during compaction: " + e.getMessage(), e);
         }
       }
     }
@@ -256,8 +256,8 @@ private void processResult(List<RawResultIterator> resultIteratorList) throws Ex
     try {
       sortDataRows.startSorting();
     } catch (CarbonSortKeyAndGroupByException e) {
-      LOGGER.error(e);
-      throw new Exception("Problem loading data during compaction: " + e.getMessage());
+      LOGGER.error(e.getMessage(), e);
+      throw new Exception("Problem loading data during compaction: " + e.getMessage(), e);
     }
   }
 
@@ -394,10 +394,10 @@ private void readAndLoadDataFromSortTempFiles(List<RawResultIterator> sortedRawR
       }
       dataHandler.finish();
     } catch (CarbonDataWriterException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new Exception("Problem loading data during compaction.", e);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new Exception("Problem loading data during compaction.", e);
     } finally {
       if (null != dataHandler) {
@@ -420,8 +420,9 @@ private void addRowForSorting(Object[] row) throws Exception {
     try {
       sortDataRows.addRow(row);
     } catch (CarbonSortKeyAndGroupByException e) {
-      LOGGER.error(e);
-      throw new Exception("Row addition for sorting failed during compaction: " + e.getMessage());
+      LOGGER.error(e.getMessage(), e);
+      throw new Exception("Row addition for sorting failed during compaction: "
+          + e.getMessage(), e);
     }
   }
 
@@ -459,9 +460,9 @@ private void initSortDataRows() throws Exception {
     try {
       this.sortDataRows.initialize();
     } catch (CarbonSortKeyAndGroupByException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new Exception(
-          "Error initializing sort data rows object during compaction: " + e.getMessage());
+          "Error initializing sort data rows object during compaction: " + e.getMessage(), e);
     }
   }
 
@@ -517,8 +518,9 @@ private void initDataHandler() throws Exception {
     try {
       dataHandler.initialise();
     } catch (CarbonDataWriterException e) {
-      LOGGER.error(e);
-      throw new Exception("Problem initialising data handler during compaction: " + e.getMessage());
+      LOGGER.error(e.getMessage(), e);
+      throw new Exception("Problem initialising data handler during compaction: "
+          + e.getMessage(), e);
     }
   }
 
diff --git a/processing/src/main/java/org/apache/carbondata/processing/merger/RowResultMergerProcessor.java b/processing/src/main/java/org/apache/carbondata/processing/merger/RowResultMergerProcessor.java
index 55664227e95..7234c335f0f 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/merger/RowResultMergerProcessor.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/merger/RowResultMergerProcessor.java
@@ -244,7 +244,7 @@ private void initSortColumns() {
         row1 = o1.fetchConverted();
         row2 = o2.fetchConverted();
       } catch (KeyGenException e) {
-        LOGGER.error(e.getMessage());
+        LOGGER.error(e.getMessage(), e);
       }
       if (null == row1 || null == row2) {
         return 0;
diff --git a/processing/src/main/java/org/apache/carbondata/processing/partition/spliter/RowResultProcessor.java b/processing/src/main/java/org/apache/carbondata/processing/partition/spliter/RowResultProcessor.java
index 977b9d33647..d7f23fbf1f7 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/partition/spliter/RowResultProcessor.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/partition/spliter/RowResultProcessor.java
@@ -86,8 +86,7 @@ public boolean execute(List<Object[]> resultList) {
       }
       processStatus = true;
     } catch (CarbonDataWriterException e) {
-      LOGGER.error(e.getMessage(), e);
-      LOGGER.error("Exception in executing RowResultProcessor" + e.getMessage());
+      LOGGER.error("Exception in executing RowResultProcessor" + e.getMessage(), e);
       processStatus = false;
     } finally {
       try {
@@ -95,7 +94,8 @@ public boolean execute(List<Object[]> resultList) {
           this.dataHandler.closeHandler();
         }
       } catch (Exception e) {
-        LOGGER.error("Exception while closing the handler in RowResultProcessor" + e.getMessage());
+        LOGGER.error("Exception while closing the handler in RowResultProcessor"
+            + e.getMessage(), e);
         processStatus = false;
       }
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SingleThreadFinalSortFilesMerger.java b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SingleThreadFinalSortFilesMerger.java
index bd9526f8e5e..6f36e96fc0b 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SingleThreadFinalSortFilesMerger.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SingleThreadFinalSortFilesMerger.java
@@ -212,7 +212,7 @@ private void startSorting(List<File> files) throws CarbonDataWriterException {
     try {
       executorService.awaitTermination(2, TimeUnit.HOURS);
     } catch (Exception e) {
-      throw new CarbonDataWriterException(e.getMessage(), e);
+      throw new CarbonDataWriterException(e);
     }
     checkFailure();
     LOGGER.info("final merger Heap Size" + this.recordHolderHeapLocal.size());
@@ -290,7 +290,7 @@ private IntermediateSortTempRow getSortedRecordFromFile() throws CarbonDataWrite
       poll.readRow();
     } catch (CarbonSortKeyAndGroupByException e) {
       close();
-      throw new CarbonDataWriterException(e.getMessage(), e);
+      throw new CarbonDataWriterException(e);
     }
 
     // add to heap
diff --git a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortDataRows.java b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortDataRows.java
index 996b844e2f7..128547d269a 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortDataRows.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortDataRows.java
@@ -174,7 +174,7 @@ public void addRowBatch(Object[][] rowBatch, int size) throws CarbonSortKeyAndGr
               .execute(new DataSorterAndWriter(recordHolderListLocal));
         } catch (Exception e) {
           LOGGER.error(
-              "exception occurred while trying to acquire a semaphore lock: " + e.getMessage());
+              "exception occurred while trying to acquire a semaphore lock: " + e.getMessage(), e);
           throw new CarbonSortKeyAndGroupByException(e);
         }
         // create the new holder Array
diff --git a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortTempFileChunkHolder.java b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortTempFileChunkHolder.java
index 82e6b3742f0..eeea2ec02ee 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortTempFileChunkHolder.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/sort/sortdata/SortTempFileChunkHolder.java
@@ -157,13 +157,13 @@ private void initialise() throws CarbonSortKeyAndGroupByException {
         }
       }
     } catch (FileNotFoundException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new CarbonSortKeyAndGroupByException(tempFile + " No Found", e);
     } catch (IOException e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new CarbonSortKeyAndGroupByException(tempFile + " No Found", e);
     } catch (Exception e) {
-      LOGGER.error(e);
+      LOGGER.error(e.getMessage(), e);
       throw new CarbonSortKeyAndGroupByException(tempFile + " Problem while reading", e);
     }
   }
@@ -204,7 +204,7 @@ private void fillDataForPrefetch() {
         try {
           submit.get();
         } catch (Exception e) {
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         }
         bufferRowCounter = 0;
         currentBuffer = backupBuffer;
@@ -330,7 +330,7 @@ private void calculateNumberOfRecordsToBeFetched() {
           currentBuffer = prefetchRecordsFromFile(numberOfRecords);
         }
       } catch (Exception e) {
-        LOGGER.error(e);
+        LOGGER.error(e.getMessage(), e);
       }
       return null;
     }
diff --git a/processing/src/main/java/org/apache/carbondata/processing/store/CarbonFactDataHandlerColumnar.java b/processing/src/main/java/org/apache/carbondata/processing/store/CarbonFactDataHandlerColumnar.java
index 96fd5448872..1270b1f5af5 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/store/CarbonFactDataHandlerColumnar.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/store/CarbonFactDataHandlerColumnar.java
@@ -220,7 +220,7 @@ public void addDataToStore(CarbonRow row) throws CarbonDataWriterException {
         this.entryCount = 0;
       } catch (InterruptedException e) {
         LOGGER.error(e.getMessage(), e);
-        throw new CarbonDataWriterException(e.getMessage(), e);
+        throw new CarbonDataWriterException(e);
       }
     }
   }
@@ -326,7 +326,7 @@ public void finish() throws CarbonDataWriterException {
       processingComplete = true;
     } catch (InterruptedException e) {
       LOGGER.error(e.getMessage(), e);
-      throw new CarbonDataWriterException(e.getMessage(), e);
+      throw new CarbonDataWriterException(e);
     }
   }
 
@@ -344,7 +344,7 @@ private void closeWriterExecutionService(ExecutorService service)
       service.awaitTermination(1, TimeUnit.DAYS);
     } catch (InterruptedException e) {
       LOGGER.error(e.getMessage(), e);
-      throw new CarbonDataWriterException(e.getMessage());
+      throw new CarbonDataWriterException(e);
     }
   }
 
@@ -362,7 +362,7 @@ private void processWriteTaskSubmitList(List<Future<Void>> taskList)
         taskList.get(i).get();
       } catch (InterruptedException | ExecutionException e) {
         LOGGER.error(e.getMessage(), e);
-        throw new CarbonDataWriterException(e.getMessage(), e);
+        throw new CarbonDataWriterException(e);
       }
     }
   }
@@ -382,7 +382,7 @@ public void closeHandler() throws CarbonDataWriterException {
         try {
           Thread.sleep(50);
         } catch (InterruptedException e) {
-          throw new CarbonDataWriterException(e.getMessage());
+          throw new CarbonDataWriterException(e);
         }
       }
       consumerExecutorService.shutdownNow();
@@ -641,7 +641,7 @@ private Consumer(TablePageList tablePageList) {
             producerExecutorService.shutdownNow();
             resetBlockletProcessingCount();
             LOGGER.error("Problem while writing the carbon data file", throwable);
-            throw new CarbonDataWriterException(throwable.getMessage());
+            throw new CarbonDataWriterException(throwable);
           }
         } finally {
           semaphore.release();
diff --git a/processing/src/main/java/org/apache/carbondata/processing/util/CarbonLoaderUtil.java b/processing/src/main/java/org/apache/carbondata/processing/util/CarbonLoaderUtil.java
index 0ff3eb6c544..a3969783ef2 100644
--- a/processing/src/main/java/org/apache/carbondata/processing/util/CarbonLoaderUtil.java
+++ b/processing/src/main/java/org/apache/carbondata/processing/util/CarbonLoaderUtil.java
@@ -143,7 +143,7 @@ public static void deleteStorePath(String path) {
         CarbonUtil.deleteFoldersAndFiles(carbonFile);
       }
     } catch (IOException | InterruptedException e) {
-      LOGGER.error("Unable to delete the given path :: " + e.getMessage());
+      LOGGER.error("Unable to delete the given path :: " + e.getMessage(), e);
     }
   }
 
@@ -354,7 +354,7 @@ public static boolean recordNewLoadMetadata(LoadMetadataDetails newMetaEntry,
           try {
             CarbonUtil.deleteFoldersAndFiles(staleFolder);
           } catch (IOException | InterruptedException e) {
-            LOGGER.error("Failed to delete stale folder: " + e.getMessage());
+            LOGGER.error("Failed to delete stale folder: " + e.getMessage(), e);
           }
         }
         status = true;
@@ -967,7 +967,7 @@ private static void assignBlocksByDataLocality(
                     + StringUtils.join(block.getLocations(), ", ")
                     + ")-->" + activeExecutor);
               } catch (IOException e) {
-                LOGGER.error(e);
+                LOGGER.error(e.getMessage(), e);
               }
             }
             remainingBlocks.remove(block);
diff --git a/store/sdk/src/main/java/org/apache/carbondata/store/LocalCarbonStore.java b/store/sdk/src/main/java/org/apache/carbondata/store/LocalCarbonStore.java
index 7bfc1cbafb5..307f64fd33e 100644
--- a/store/sdk/src/main/java/org/apache/carbondata/store/LocalCarbonStore.java
+++ b/store/sdk/src/main/java/org/apache/carbondata/store/LocalCarbonStore.java
@@ -109,7 +109,7 @@ public Iterator<CarbonRow> scan(AbsoluteTableIdentifier tableIdentifier, String[
         try {
           reader.close();
         } catch (IOException e) {
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         }
       }
     } catch (InterruptedException e) {
@@ -119,7 +119,7 @@ public Iterator<CarbonRow> scan(AbsoluteTableIdentifier tableIdentifier, String[
         try {
           reader.close();
         } catch (IOException e) {
-          LOGGER.error(e);
+          LOGGER.error(e.getMessage(), e);
         }
       }
     }
diff --git a/tools/cli/src/main/java/org/apache/carbondata/tool/CarbonCli.java b/tools/cli/src/main/java/org/apache/carbondata/tool/CarbonCli.java
index 6fc3128e32e..a122394d437 100644
--- a/tools/cli/src/main/java/org/apache/carbondata/tool/CarbonCli.java
+++ b/tools/cli/src/main/java/org/apache/carbondata/tool/CarbonCli.java
@@ -123,8 +123,8 @@ public static void run(String[] args, ArrayList<String> e) {
     CommandLine line;
     try {
       line = parser.parse(options, args);
-    } catch (ParseException exp) {
-      throw new RuntimeException("Parsing failed. Reason: " + exp.getMessage());
+    } catch (ParseException ex) {
+      throw new RuntimeException("Parsing failed. Reason: " + ex.getMessage(), ex);
     }
 
     runCli(System.out, options, line);

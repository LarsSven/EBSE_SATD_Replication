diff --git a/sql/catalyst/src/test/scala/org/apache/spark/sql/types/MapTypeSuite.scala b/sql/catalyst/src/test/scala/org/apache/spark/sql/types/MapTypeSuite.scala
index 060ec3d8f71d6..74e40e35f08be 100644
--- a/sql/catalyst/src/test/scala/org/apache/spark/sql/types/MapTypeSuite.scala
+++ b/sql/catalyst/src/test/scala/org/apache/spark/sql/types/MapTypeSuite.scala
@@ -20,14 +20,16 @@ package org.apache.spark.sql.types
 import org.apache.spark.SparkFunSuite
 
 class MapTypeSuite extends SparkFunSuite {
-  test("SPARK-25031") {
-
-    val keyType: DataType = StructType(
-      Seq(StructField("a", DataTypes.IntegerType),
-          StructField("b", DataTypes.IntegerType)))
-    val valueType: DataType = StructType(
-      Seq(StructField("c", DataTypes.IntegerType),
-          StructField("d", DataTypes.IntegerType)))
+  test("SPARK-25031: MapType should produce current formatted string for complex types") {
+
+    val keyType: DataType = StructType(Seq(
+      StructField("a", DataTypes.IntegerType),
+      StructField("b", DataTypes.IntegerType)))
+
+    val valueType: DataType = StructType(Seq(
+      StructField("c", DataTypes.IntegerType),
+      StructField("d", DataTypes.IntegerType)))
+
     val builder = new StringBuilder
 
     MapType(keyType, valueType).buildFormattedString(prefix = "", builder = builder)

diff --git a/mllib/src/main/scala/org/apache/spark/ml/param/params.scala b/mllib/src/main/scala/org/apache/spark/ml/param/params.scala
index 77abe94771762..69ada2d02f637 100644
--- a/mllib/src/main/scala/org/apache/spark/ml/param/params.scala
+++ b/mllib/src/main/scala/org/apache/spark/ml/param/params.scala
@@ -548,9 +548,9 @@ trait Params extends Identifiable with Serializable {
    * Parameter value checks which do not depend on other parameters are handled by
    * [[Param.validate()]].  This method does not handle input/output column parameters;
    * those are checked during schema validation.
-   * @deprecated All the checks should be merged into transformSchema
+   * @deprecated Will be removed in 2.1.0. All the checks should be merged into transformSchema
    */
-  @deprecated("All the checks should be merged into transformSchema", "2.0.0")
+  @deprecated("Will be removed in 2.1.0. Checks should be merged into transformSchema.", "2.0.0")
   def validateParams(): Unit = {
     // Do nothing by default.  Override to handle Param interactions.
   }
diff --git a/mllib/src/main/scala/org/apache/spark/ml/regression/GeneralizedLinearRegression.scala b/mllib/src/main/scala/org/apache/spark/ml/regression/GeneralizedLinearRegression.scala
index 8dc2c9a3013c4..f7a1c0e04857a 100644
--- a/mllib/src/main/scala/org/apache/spark/ml/regression/GeneralizedLinearRegression.scala
+++ b/mllib/src/main/scala/org/apache/spark/ml/regression/GeneralizedLinearRegression.scala
@@ -46,8 +46,8 @@ private[regression] trait GeneralizedLinearRegressionBase extends PredictorParam
    * to be used in the model.
    * Supported options: "gaussian", "binomial", "poisson" and "gamma".
    * Default is "gaussian".
-    *
-    * @group param
+   *
+   * @group param
    */
   @Since("2.0.0")
   final val family: Param[String] = new Param(this, "family",
@@ -80,7 +80,8 @@ private[regression] trait GeneralizedLinearRegressionBase extends PredictorParam
   import GeneralizedLinearRegression._
 
   @Since("2.0.0")
-  override def validateAndTransformSchema(schema: StructType,
+  override def validateAndTransformSchema(
+      schema: StructType,
       fitting: Boolean,
       featuresDataType: DataType): StructType = {
     if ($(solver) == "irls") {

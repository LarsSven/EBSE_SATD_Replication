diff --git a/sql/core/src/main/scala/org/apache/spark/sql/SparkSession.scala b/sql/core/src/main/scala/org/apache/spark/sql/SparkSession.scala
index 064a2272fc7be..d8b88d64273be 100644
--- a/sql/core/src/main/scala/org/apache/spark/sql/SparkSession.scala
+++ b/sql/core/src/main/scala/org/apache/spark/sql/SparkSession.scala
@@ -988,8 +988,7 @@ object SparkSession extends Logging {
    * @since 2.0.0
    */
   def setActiveSession(session: SparkSession): Unit = {
-    if (getActiveSession.isEmpty
-      || (session != getActiveSession.get && getActiveSession.isDefined)) {
+    if (session != getActiveSession.get && getActiveSession.isDefined) {
       numActiveSessions.getAndIncrement
       activeThreadSession.set(session)
     } else if (session == null) {
diff --git a/sql/core/src/test/scala/org/apache/spark/sql/SparkSessionBuilderSuite.scala b/sql/core/src/test/scala/org/apache/spark/sql/SparkSessionBuilderSuite.scala
index 4b59d70a044a2..615d32226db13 100644
--- a/sql/core/src/test/scala/org/apache/spark/sql/SparkSessionBuilderSuite.scala
+++ b/sql/core/src/test/scala/org/apache/spark/sql/SparkSessionBuilderSuite.scala
@@ -154,9 +154,11 @@ class SparkSessionBuilderSuite extends SparkFunSuite with BeforeAndAfterEach {
   }
 
   test("SPARK-27958: SparkContext stopped when last SparkSession is stopped ") {
-    val session1 = SparkSession.builder().master("local").getOrCreate()
+    val conf = new SparkConf().setAppName("test").setMaster("local").set("key1", "value1")
+    val newSC = new SparkContext(conf)
+    val session1 = SparkSession.builder().sparkContext(newSC).master("local").getOrCreate()
     assert(!session1.sparkContext.isStopped)
-    val session2 = SparkSession.builder().master("local").getOrCreate()
+    val session2 = SparkSession.builder().sparkContext(newSC).master("local").getOrCreate()
     session1.stop()
     assert(!session1.sparkContext.isStopped)
     session2.stop()

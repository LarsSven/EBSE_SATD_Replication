diff --git a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
index be0ba77f5b2f..b38cf679e2a1 100644
--- a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
+++ b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java
@@ -171,7 +171,6 @@ public String getName() {
 
   @Override
   public ArrowBuf getEmpty() {
-    assertOpen();
     return empty;
   }
 
@@ -236,8 +235,6 @@ public ArrowBuf buffer(final int initialRequestSize) {
   }
 
   private ArrowBuf createEmpty() {
-    assertOpen();
-
     return new ArrowBuf(new AtomicInteger(), null, AllocationManager.EMPTY, null, null, 0, 0, true);
   }
 
diff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
index 21bdbab59a93..cad27a123078 100644
--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java
@@ -72,19 +72,11 @@ public BaseDataValueVector(String name, BufferAllocator allocator) {
 
   @Override
   public void clear() {
-    if (data != null) {
-      data.release();
-      data = allocator.getEmpty();
-    }
+    data.release();
+    data = allocator.getEmpty();
     super.clear();
   }
 
-  @Override
-  public void close() {
-    clear();
-    data = null;
-  }
-
   @Override
   public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {
     return getTransferPair(ref, allocator);

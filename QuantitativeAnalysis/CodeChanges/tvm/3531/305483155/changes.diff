diff --git a/python/tvm/relay/qnn/op/qnn.py b/python/tvm/relay/qnn/op/qnn.py
index e347d0616511..ef73ddbead8d 100644
--- a/python/tvm/relay/qnn/op/qnn.py
+++ b/python/tvm/relay/qnn/op/qnn.py
@@ -63,8 +63,6 @@ def requantize(data,
     result : tvm.relay.Expr
         The computed result.
     """
-    assert rounding in ("UPWARD", "AWAY_FROM_ZERO"),\
-            "Unsupported rounding mode"
 
     return _make.requantize(data,
                             input_scale,
diff --git a/python/tvm/relay/qnn/transform.py b/python/tvm/relay/qnn/transform.py
index 576631b67e7d..6ca456b4fb81 100644
--- a/python/tvm/relay/qnn/transform.py
+++ b/python/tvm/relay/qnn/transform.py
@@ -15,6 +15,7 @@
 # specific language governing permissions and limitations
 # under the License.
 # pylint: disable=invalid-name
+
 """QNN Dialect transformation passes."""
 from __future__ import absolute_import
 
diff --git a/src/relay/qnn/pass/qnn_lower.cc b/src/relay/qnn/pass/qnn_lower.cc
index ea46504c6748..321c475d48c5 100644
--- a/src/relay/qnn/pass/qnn_lower.cc
+++ b/src/relay/qnn/pass/qnn_lower.cc
@@ -213,6 +213,10 @@ Expr RequantizeForwardRewrite(const Call& ref_call,
       << " Please run infer_type pass.";
   const auto input_dtype = input_tt->dtype;
 
+  // Check rounding validity.
+  CHECK(param->rounding == "UPWARD" || param->rounding == "AWAY_FROM_ZERO")
+      << "QNN requantize supports two rounding modes - UPWARD and "
+      << "AWAY_FROM_ZERO";
   return RequantizeLower(quantized_data, param, input_dtype, out_shape);
 }
 

diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitionedSnapshot.java b/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitionedSnapshot.java
index 4b562f8f6b139..9700c6ab57167 100644
--- a/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitionedSnapshot.java
+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitionedSnapshot.java
@@ -56,9 +56,6 @@ public void writeMappingsInKeyGroup(@Nonnull DataOutputView dov, int keyGroupId)
 
 		// write mappings
 		for (int i = startOffset; i < endOffset; ++i) {
-			if(groupedOut[i] == null) {
-				throw new IllegalStateException();
-			}
 			writeElement(groupedOut[i], dov);
 			groupedOut[i] = null; // free asap for GC
 		}
diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitioner.java b/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitioner.java
index 79874a23add42..6d31111cb343e 100644
--- a/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitioner.java
+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/state/AbstractKeyGroupPartitioner.java
@@ -22,6 +22,7 @@
 
 import javax.annotation.Nonnegative;
 import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
 
 /**
  * Abstract class that contains the base algorithm for partitioning data into key-groups. This algorithm currently works
@@ -61,6 +62,7 @@
 	protected final int firstKeyGroup;
 
 	/** Cached result. */
+	@Nullable
 	protected PartitioningResult<T> computedResult;
 
 	/**

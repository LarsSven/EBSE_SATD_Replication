diff --git a/samza-core/src/main/scala/org/apache/samza/container/TaskInstance.scala b/samza-core/src/main/scala/org/apache/samza/container/TaskInstance.scala
index f77877cc22..61e8c77b89 100644
--- a/samza-core/src/main/scala/org/apache/samza/container/TaskInstance.scala
+++ b/samza-core/src/main/scala/org/apache/samza/container/TaskInstance.scala
@@ -75,7 +75,7 @@ class TaskInstance(
 
   val intermediateStreams: Set[String] = config.getStreamIds.filter(config.getIsIntermediateStream).toSet
 
-  val streamsToDeleteCommittedMessages: Set[String] = config.getStreamIds.filter(config.getDeleteCommittedMessages).toSet
+  val streamsToDeleteCommittedMessages: Set[String] = config.getStreamIds.filter(config.getDeleteCommittedMessages).map(config.getPhysicalName).toSet
 
   def registerMetrics {
     debug("Registering metrics for taskName: %s" format taskName)
diff --git a/samza-kafka/src/test/scala/org/apache/samza/system/kafka/TestKafkaSystemAdmin.scala b/samza-kafka/src/test/scala/org/apache/samza/system/kafka/TestKafkaSystemAdmin.scala
index 208f22d73c..a533acc992 100644
--- a/samza-kafka/src/test/scala/org/apache/samza/system/kafka/TestKafkaSystemAdmin.scala
+++ b/samza-kafka/src/test/scala/org/apache/samza/system/kafka/TestKafkaSystemAdmin.scala
@@ -42,14 +42,10 @@ import org.junit._
 
 import scala.collection.JavaConverters._
 
-
 /**
- * Test creates a local ZK and Kafka cluster, and uses it to create and test
- * topics for to verify that offset APIs in SystemAdmin work as expected.
- *
- * NOTE: New tests should be added to the Java tests. See TestKafkaSystemAdminJava
- */
-class TestKafkaSystemAdmin extends KafkaServerTestHarness {
+  * README: New tests should be added to the Java tests. See TestKafkaSystemAdminJava
+  */
+object TestKafkaSystemAdmin extends KafkaServerTestHarness {
 
   val SYSTEM = "kafka"
   val TOPIC = "input"
@@ -70,7 +66,7 @@ class TestKafkaSystemAdmin extends KafkaServerTestHarness {
     props.map(KafkaConfig.fromProps)
   }
 
-  @Before
+  @BeforeClass
   override def setUp() {
     super.setUp()
     val config = new java.util.HashMap[String, String]()
@@ -84,7 +80,7 @@ class TestKafkaSystemAdmin extends KafkaServerTestHarness {
     systemAdmin.start()
   }
 
-  @After
+  @AfterClass
   override def tearDown() {
     systemAdmin.stop()
     producer.close()
@@ -141,6 +137,15 @@ class TestKafkaSystemAdmin extends KafkaServerTestHarness {
       coordinatorStreamReplicationFactor, 10000, ConsumerConfig.SocketBufferSize, UUID.randomUUID.toString, topicMetaInformation, Map())
   }
 
+}
+
+/**
+ * Test creates a local ZK and Kafka cluster, and uses it to create and test
+ * topics for to verify that offset APIs in SystemAdmin work as expected.
+ */
+class TestKafkaSystemAdmin {
+  import TestKafkaSystemAdmin._
+
   @Test
   def testShouldAssembleMetadata {
     val oldestOffsets = Map(

project,pull_number,pull_type,id,text,classification,indicator
spark,17459,review,118818160,"Nit: can the last two args simply be m, n for clarity?",code_debt,low_quality_code
spark,23982,review,263647807,nit: `left_anti`,code_debt,low_quality_code
kafka,1791,review,80134212,Rather than using `!muted` I think it would be much clearer to alias this to a boolean that is named: `guaranteeExpirationOrder` similar to the `guaranteeMessageOrder` boolean in `Sender`,code_debt,low_quality_code
geode-native,288,review,185342808,variable name could be better perhaps,code_debt,low_quality_code
hudi,1274,review,370818776, I thought having all metadata constants in one place would make it simpler. This is used in reading archived commit. I can move the constant to ArchivedTimeline if you think thats a better place.,code_debt,low_quality_code
helix,478,review,325376537,"Let's pass the map only, Map<GlobalRebalancePreferenceKey, Integer>.
ClusterConfig is too much for the rebalancer.",code_debt,complex_code
drill,996,review,146815141,Could you please factor out this logic in a separate method?,code_debt,low_quality_code
accumulo,332,comment,368365644,"Agreed.
You may have gotten that impression because I'm against bundling. But, I'm also against using Hadoop's bundled libs for same reason I'm against bundling our own. I'm in favor of intentional and thoughtful dependency convergence, as a downstream activity. I'd actually prefer we not ship any binary tarball packaging... but since we do, we might as well do it in a way that works well for most users. In any case, I agree with you, this can be improved once we get the basics in. :smile_cat:",design_debt,non-optimal_design
phoenix,508,review,285231247,"if all is null --> code will use indexes list
if all is not null --> code will get all the indexes on that table. 
will be implemented in the upcoming PR.",requirement_debt,requirement_partially_implemented
brooklyn-server,144,comment,222313156,"Worth adding test case(s).
Also note the related discussion the mailing list. An alternative suggestion is that we pick up _all_ files with the given name on the classpath (rather than all those in a given directory). I personally prefer the approach of all files in the directory. That would allow us to more easily incrementally add things (e.g. have separate files for upgrading between versions).
---
I wonder about a nicer package name than `org.apache.brooklyn.core.mgmt.persist.deserializingClassRenames`. I imagine many people will just put this in their `./conf/` directory, so we don't want them to have to create a really deep nested directory.
---
Another thing we could add (in the future?) is if there are conflicting changes - e.g. A is renamed to B in the first file, and B is renamed to C in the second file. Currently, the result would depend on the other the files were processed: i.e. it could be ""B"" or ""C"". It would be good to be more predictable.
I'm fine with that being deferred for now.",test_debt,lack_of_tests
beam,9730,review,331592994,"use `re.search()`.  also, I don't think this needs to be private, so remove the leading underscore.
maybe add a comment like:  ""we don't use json.loads to test validity because we don't want to propagate json syntax errors downstream to the runner""",documentation_debt,outdated_documentation
helix,1208,review,464529958,"Typo.
Also, why do you ever need to set the task version after-the-fact?",documentation_debt,low_quality_documentation
spark,11006,comment,178279347,"LGTM, other than the naming issues (StandingQuery, etc. in the code)",code_debt,low_quality_code
ignite,2941,summary,0,"ignite-6774 Java doc is broken: ""LUDecomposition.java:40: warning - Tâ€¦",documentation_debt,low_quality_documentation
flink,8136,description,0,"*This work is a preparation for FLINK-11726.*
*In `SingleInputGate#create`, we could remove unused parameter `ExecutionAttemptID`.
And for the constructor of `SingleInputGate`, we could remove unused parameter `TaskIOMetricGroup`.
Then we introduce `createSingleInputGate` for reusing the process of creating `SingleInputGate` in related tests.*
This change is a trivial rework / code cleanup without any test coverage.",code_debt,dead_code
drill,159,review,39804781,"please add a test where both _SYSTEM_ and _SESSION_ options are changed, and confirm the reset is working as expected.",test_debt,lack_of_tests
trafficserver,3322,review,176559777,Do me a favor and move both `MemSpan` and `MemArena` so the test source files are in alphabetically order.,architecture_debt,violation_of_modularity
